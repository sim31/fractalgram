{"version":3,"file":"599.4be8a3d2b73ce21dcd04.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useCurrentOrPrev.ts","webpack://telegram-t/./src/hooks/useDebouncedCallback.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStateRef.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/hooks/useWindowSize.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/themeStyle.ts"],"sourcesContent":["import React, {\n  FC, memo,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\nimport { ActiveEmojiInteraction } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useAnimatedEmoji from './hooks/useAnimatedEmoji';\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  effect?: ApiSticker;\n  isOwn?: boolean;\n  soundId?: string;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  effect,\n  isOwn,\n  soundId,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n}) => {\n  const {\n    markAnimationLoaded,\n    isAnimationLoaded,\n    ref,\n    width,\n    style,\n    handleClick,\n    playKey,\n  } = useAnimatedEmoji(size, chatId, messageId, soundId, activeEmojiInteractions, isOwn, undefined, effect?.emoji);\n\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const transitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && localMediaHash && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData!}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          forceOnHeavyAnimation\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(AnimatedEmoji);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import React, {\n  FC, memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering, { BufferedRange } from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn);\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {date && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(voice, seekerRef, waveformCanvasRef, playProgress, isMediaUnread)\n      )}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n) {\n  return (\n    <div className=\"content\">\n      <div\n        className=\"waveform\"\n        draggable={false}\n        ref={seekerRef}\n      >\n        <canvas ref={waveformCanvasRef} />\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [voice]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../global/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isUserId, isUserRightBanned, selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem\n          icon={chat.username ? 'mention' : 'link'}\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      {!isPrivateChat && chat.isCreator && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n          {lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button\n        color=\"danger\"\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n      >\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, undefined, undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {content}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return <span className=\"FakeIcon\">{lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}</span>;\n};\n\nexport default memo(FakeIcon);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const transitionClassNames = useMediaTransition(previewData);\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={thumbnailDataUri}\n              width={width}\n              height={height}\n              className=\"thumbnail\"\n              alt=\"\"\n            />\n            <img\n              src={previewData}\n              className={buildClassName('full-media', transitionClassNames)}\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../global/selectors';\nimport renderText from './helpers/renderText';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FakeIcon from './FakeIcon';\n\ntype OwnProps = {\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {chat.fakeType && <FakeIcon fakeType={chat.fakeType} />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, {\n  FC, memo, useCallback, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        <i className={`icon-message-${status}`} />\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { ApiUser, ApiTypingStatus, ApiUserStatus } from '../../api/types';\nimport { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FakeIcon from './FakeIcon';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    serverTimeOffset: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  serverTimeOffset,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n  } = getActions();\n\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n            {user.fakeType && <FakeIcon fakeType={user.fakeType} />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, userStatus, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const photoBlobUrl = useMedia(getMediaHash('big'), false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const avatarMediaHash = isFirstPhoto && !photoBlobUrl ? getMediaHash('normal', true) : undefined;\n  const avatarBlobUrl = useMedia(avatarMediaHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const imageSrc = photoBlobUrl || avatarBlobUrl || photo?.thumbnail?.dataUri;\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { ApiUser, ApiChat, ApiUserStatus } from '../../api/types';\nimport { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser, selectUserStatus } from '../../global/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport FakeIcon from './FakeIcon';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    animationLevel: 0 | 1 | 2;\n    serverTimeOffset: number;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  serverTimeOffset,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1\n    ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n  const fakeType = (user || chat)?.fakeType;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto()}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n            {fakeType && <FakeIcon fakeType={fakeType} />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      serverTimeOffset,\n    };\n  },\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { RefObject } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { ApiMediaFormat } from '../../api/types';\n\nimport useMedia from '../../hooks/useMedia';\nimport buildClassName from '../../util/buildClassName';\n\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: string;\n  ref?: RefObject<HTMLImageElement>;\n  className?: string;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  ref,\n  className,\n}) => {\n  const staticIconId = getGlobal().availableReactions?.find((l) => l.reaction === reaction)?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', className)}\n      ref={ref}\n      src={mediaData}\n      alt=\"\"\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import { ChangeEvent } from 'react';\n\nimport React, {\n  FC, memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"report\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n        {lang('lng_report_button')}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiBotInlineMediaResult, ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport safePlay from '../../util/safePlay';\nimport { IS_TOUCH_ENV, IS_WEBM_SUPPORTED } from '../../util/environment';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  clickArg: T;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noAnimate,\n  title,\n  className,\n  clickArg,\n  noContextMenu,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  onFaveClick,\n  onUnfaveClick,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isLottie && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isLottieLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canLottiePlay = isLottieLoaded && shouldPlay;\n  const isVideo = sticker.isVideo && IS_WEBM_SUPPORTED;\n  const videoBlobUrl = useMedia(isVideo && localMediaHash, !shouldPlay, ApiMediaFormat.BlobUrl);\n  const canVideoPlay = Boolean(isVideo && videoBlobUrl && shouldPlay);\n\n  const { transitionClassNames: previewTransitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || canLottiePlay),\n    undefined,\n    undefined,\n    'slow',\n  );\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.sticker-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  useEffect(() => {\n    if (!isVideo || !ref.current) return;\n    const video = ref.current.querySelector('video');\n    if (!video) return;\n    if (canVideoPlay) {\n      safePlay(video);\n    } else {\n      video.pause();\n    }\n  }, [isVideo, canVideoPlay]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleUnfaveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    stickerSelector,\n    className,\n  );\n\n  const style = (thumbDataUri && !canLottiePlay && !canVideoPlay) ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!canLottiePlay && !canVideoPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {isVideo && (\n        <video\n          className={previewTransitionClassNames}\n          src={videoBlobUrl}\n          autoPlay={canVideoPlay}\n          loop\n          playsInline\n          muted\n        />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {!IS_TOUCH_ENV && onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n      {!noContextMenu && onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {onUnfaveClick && (\n            <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n              {lang('Stickers.RemoveFromFavorites')}\n            </MenuItem>\n          )}\n          {onFaveClick && (\n            <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n              {lang('AddToFavorites')}\n            </MenuItem>\n          )}\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji).trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\nimport { TextPart } from '../../types';\nimport { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../global/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS_PX = 240;\nexport const GIF_MIN_WIDTH = 300;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '4986041492570112461';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n  const mediaWidth = isGif ? Math.max(GIF_MIN_WIDTH, width) : width;\n  const mediaHeight = isGif ? height * (mediaWidth / width) : height;\n\n  return calculateDimensions(availableWidth, availableHeight, mediaWidth, mediaHeight);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter && !IS_TOUCH_ENV) {\n    occupiedHeightRem = mql.matches ? 10 : 12.5;\n  }\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport safePlay from '../../../util/safePlay';\nimport { getActions } from '../../../global';\nimport useMedia from '../../../hooks/useMedia';\nimport { ActiveEmojiInteraction } from '../../../global/types';\nimport useFlag from '../../../hooks/useFlag';\nimport { selectLocalAnimatedEmojiEffectByName } from '../../../global/selectors';\n\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  size: 'large' | 'medium' | 'small',\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  localEffect?: string,\n  emoji?: string,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const hasEffect = localEffect || emoji;\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId,\n      messageId,\n      localEffect,\n      emoji,\n      interactions: interactions.current,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  }, [sendEmojiInteraction, chatId, messageId, localEffect, emoji]);\n\n  const play = useCallback(() => {\n    setPlayKey(String(Math.random()));\n\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  }, [soundMediaData]);\n\n  const handleClick = useCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!hasEffect || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      localEffect,\n      emoji,\n      x,\n      y,\n      startSize: width,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  }, [\n    chatId, emoji, hasEffect, interactWithAnimatedEmoji, isOwn,\n    localEffect, messageId, play, sendInteractionBunch, width,\n  ]);\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId,\n        emoticon: localEffect ? selectLocalAnimatedEmojiEffectByName(localEffect) : emoji,\n        startSize: width,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [\n    activeEmojiInteractions, chatId, emoji, isOwn, localEffect, messageId, play, sendWatchingEmojiInteraction, width,\n  ]);\n\n  return {\n    playKey,\n    ref,\n    style,\n    width,\n    handleClick,\n    markAnimationLoaded,\n    isAnimationLoaded,\n  };\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<string, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: string): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const isUnread = Boolean(chat.unreadCount || chat.hasUnreadMark);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !IS_SINGLE_COLUMN_LAYOUT && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID, ApiUserStatus,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isUserId,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../global/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions, selectUserStatus,\n} from '../../../global/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ReportModal from '../../common/ReportModal';\nimport FakeIcon from '../../common/FakeIcon';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter<ApiUser>(Boolean as any);\n  }, [actionTargetUserIds]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asTextWithSpoilers: true },\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, user))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {chat.fakeType && <FakeIcon fakeType={chat.fakeType} />}\n          {isMuted && <i className=\"icon-muted\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview--image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && {\n        user: selectUser(global, privateChatUserId),\n        userStatus: selectUserStatus(global, privateChatUserId),\n      }),\n    };\n  },\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport { mapValues } from '../../../util/iteratees';\nimport { getPinnedChatsCount } from '../../../util/folderManager';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useChatAnimationType } from './hooks';\nimport { HotkeyItem, useHotkeys } from '../../../hooks/useHotkeys';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  lastSyncTime?: number;\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  foldersDispatch,\n  onScreenSelect,\n}) => {\n  const { openChat, openNextChat } = getActions();\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  const hotkeys: HotkeyItem[] = [];\n  if (isActive && orderedIds?.length) {\n    hotkeys.push(['alt+ArrowUp', (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    }]);\n    hotkeys.push(['alt+ArrowDown', (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    }]);\n  }\n\n  useHotkeys(hotkeys);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        const position = Number(digit) - 1;\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isActive, openChat, openNextChat, orderedIds]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => (\n      <Chat\n        key={id}\n        teactOrderKey={i}\n        chatId={id}\n        isPinned={viewportOffset + i < pinnedCount}\n        folderId={folderId}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      />\n    ));\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={(orderedIds?.length || 0) * CHAT_HEIGHT_PX}\n      onLoadMore={getMore}\n    >\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, false);\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n        <DropTarget onFileSelect={handleFilesDrop} />\n        {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useLang from '../../../hooks/useLang';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  id,\n  chatId,\n  threadId,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  canAutoFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (!html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n    sendMessageAction({ type: 'typing' });\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n        aria-label={placeholder}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      noTabCapture: global.pollModal.isOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = 'key' in e ? e.key : e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","export default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return files;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport memoized from '../../../../util/memoized';\nimport useFlag from '../../../../hooks/useFlag';\nimport renderText from '../../../common/helpers/renderText';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\p{L}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):[-+_:\\d\\wа-яё]*$/gi;\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  htmlRef: { current: string },\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || isDisabled) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter, EMOJIS_LIMIT);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched);\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, html, isAllowed, markIsOpen, recentEmojiIds, unmarkIsOpen, setShouldForceInsertEmoji,\n    isDisabled, baseEmojiKeywords, emojiKeywords,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf(':', isForce ? currentHtml.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${renderText(textEmoji, ['emoji_html'])}`);\n      let messageInput: HTMLDivElement;\n      if (inputId === EDITABLE_INPUT_ID) {\n        messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!;\n      } else {\n        messageInput = document.getElementById(inputId) as HTMLDivElement;\n      }\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names,\n  } = library;\n\n  let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword!, matchedKeywords))));\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n  matched = unique(matched);\n\n  return matched.slice(0, limit);\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { filterUsersByName, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яё]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  htmlRef: { current: string },\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const updateFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n\n    runThrottled(() => {\n      const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n        if (member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n\n        return acc;\n      }, []);\n\n      const filteredIds = filterUsersByName(unique([\n        ...((withInlineBots && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]), usersById, filter);\n\n      setUsersToMention(Object.values(pickTruthy(usersById, filteredIds)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds]);\n\n  const html = htmlRef.current;\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      updateFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, updateFilteredUsers, markIsOpen, unmarkIsOpen, html]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const currentHtml = htmlRef.current;\n    const atIndex = currentHtml.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${currentHtml.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [htmlRef, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, memo, useState,\n} from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, {\n  FC, memo, useCallback, useRef,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''} ref={containerRef} onKeyDown={handleKeyDown}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  secondaryIcon?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  secondaryIcon,\n  className,\n  style,\n  children,\n  disabled,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  onMouseDown,\n  onClick,\n  onSecondaryIconClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleSecondaryIconClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (disabled || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n    e.stopPropagation();\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  };\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role={!isStatic ? 'button' : undefined}\n        ref={buttonRef}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n            onMouseDown={!IS_TOUCH_ENV ? handleSecondaryIconClick : undefined}\n          >\n            <i className={`icon-${secondaryIcon}`} />\n          </Button>\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, useMemo, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useRef, memo, useEffect,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      return;\n    }\n\n    const platformEl = tabEl.querySelector('i')!;\n    const prevPlatformEl = prevTabEl.querySelector('i')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          isActive={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\nimport { GlobalState } from '../../global/types';\n\nimport { ANIMATION_LEVEL_MIN } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { waitForAnimationEnd, waitForTransitionEnd } from '../../util/cssAnimationEndListeners';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport './Transition.scss';\n\nexport type ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => React.ReactNode;\nexport type TransitionProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-rtl' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal' | 'slide-optimized' | 'slide-optimized-rtl'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  isDisabled?: boolean;\n  id?: string;\n  className?: string;\n  onStart?: NoneToVoidFunction;\n  onStop?: NoneToVoidFunction;\n  children: React.ReactNode | ChildrenFn;\n};\n\nconst classNames = {\n  active: 'Transition__slide--active',\n};\n\nconst Transition: FC<TransitionProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, React.ReactNode | ChildrenFn>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup) {\n        return;\n      }\n\n      const preservedRender = cleanupExceptionKey !== undefined ? rendersRef.current[cleanupExceptionKey] : undefined;\n\n      rendersRef.current = preservedRender ? { [cleanupExceptionKey!]: preservedRender } : {};\n\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      if (name.startsWith('slide-optimized')) {\n        (childElements[0] as HTMLElement).style.transition = 'none';\n        (childElements[0] as HTMLElement).style.transform = 'translate3d(0, 0, 0)';\n      }\n\n      childElements[0].classList.add(classNames.active);\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    currentKeyRef.current = activeKey;\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'slide-optimized' || name === 'slide-optimized-rtl') {\n      performSlideOptimized(\n        animationLevel,\n        name,\n        isBackwards,\n        cleanup,\n        activeKey,\n        currentKeyRef,\n        container,\n        shouldRestoreHeight,\n        onStart,\n        onStop,\n        childNodes[activeIndex] as HTMLElement,\n        childNodes[prevActiveIndex] as HTMLElement,\n      );\n\n      return;\n    }\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    if (name === 'none' || animationLevel === ANIMATION_LEVEL_MIN) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle(classNames.active, i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove(classNames.active);\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      onStart?.();\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle(classNames.active, i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>(`.${classNames.active}`);\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          onStop?.();\n          dispatchHeavyAnimationStop();\n          cleanup();\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      if (watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>(`.${classNames.active}`)\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const renderKeys = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = renderKeys.map((key) => {\n    const render = renders[key];\n    if (!render) {\n      return undefined;\n    }\n\n    return (\n      <div key={key} teactOrderKey={key}>{\n        typeof render === 'function'\n          ? render(key === activeKey, key === prevActiveKey, activeKey)\n          : render\n      }\n      </div>\n    );\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      id={id}\n      className={buildClassName('Transition', className, name)}\n      teactFastList={!renderCount}\n    >\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n\nfunction performSlideOptimized(\n  animationLevel: GlobalState['settings']['byKey']['animationLevel'],\n  name: 'slide-optimized' | 'slide-optimized-rtl',\n  isBackwards: boolean,\n  cleanup: NoneToVoidFunction,\n  activeKey: number,\n  currentKeyRef: { current: number | undefined },\n  container: HTMLElement,\n  shouldRestoreHeight?: boolean,\n  onStart?: NoneToVoidFunction,\n  onStop?: NoneToVoidFunction,\n  toSlide?: HTMLElement,\n  fromSlide?: HTMLElement,\n) {\n  if (!fromSlide || !toSlide) {\n    return;\n  }\n\n  if (animationLevel === ANIMATION_LEVEL_MIN) {\n    fromSlide.style.transition = 'none';\n    fromSlide.style.transform = '';\n    fromSlide.classList.remove(classNames.active);\n\n    toSlide.style.transition = 'none';\n    toSlide.style.transform = 'translate3d(0, 0, 0)';\n    toSlide.classList.add(classNames.active);\n\n    cleanup();\n\n    return;\n  }\n\n  if (name === 'slide-optimized-rtl') {\n    isBackwards = !isBackwards;\n  }\n\n  const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  requestAnimationFrame(() => {\n    onStart?.();\n\n    fromSlide.style.transition = 'none';\n    fromSlide.style.transform = 'translate3d(0, 0, 0)';\n\n    toSlide.style.transition = 'none';\n    toSlide.style.transform = `translate3d(${isBackwards ? '-' : ''}100%, 0, 0)`;\n\n    forceReflow(toSlide);\n\n    fromSlide.style.transition = '';\n    fromSlide.style.transform = `translate3d(${isBackwards ? '' : '-'}100%, 0, 0)`;\n\n    toSlide.style.transition = '';\n    toSlide.style.transform = 'translate3d(0, 0, 0)';\n\n    fromSlide.classList.remove(classNames.active);\n    toSlide.classList.add(classNames.active);\n\n    waitForTransitionEnd(fromSlide, () => {\n      if (activeKey !== currentKeyRef.current) {\n        return;\n      }\n\n      fromSlide.style.transition = 'none';\n      fromSlide.style.transform = '';\n\n      if (shouldRestoreHeight) {\n        toSlide.style.height = 'auto';\n        container.style.height = `${toSlide.clientHeight}px`;\n      }\n\n      onStop?.();\n      dispatchHeavyAnimationStop();\n      cleanup();\n    });\n  });\n}\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { register, Track, TrackId } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          setVolume(getGlobal().audioPlayer.volume);\n          toggleMuted(Boolean(getGlobal().audioPlayer.isMuted));\n          if (trackType === 'voice') {\n            setPlaybackRate(getGlobal().audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\n/**\n * Time range relative to the duration [0, 1]\n */\nexport type BufferedRange = { start: number; end: number };\n\nconst useBuffering = (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n  const [bufferedRanges, setBufferedRanges] = useState<BufferedRange[]>([]);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        const ranges = getTimeRanges(media.buffered, media.duration);\n        setBufferedRanges(ranges);\n        const bufferedLength = ranges.reduce((acc, { start, end }) => acc + end - start, 0);\n        setBufferedProgress(bufferedLength / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferedRanges,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n\nfunction getTimeRanges(ranges: TimeRanges, duration: number) {\n  const result: BufferedRange[] = [];\n  for (let i = 0; i < ranges.length; i++) {\n    result.push({\n      start: ranges.start(i) / duration,\n      end: ranges.end(i) / duration,\n    });\n  }\n  return result;\n}\n\nexport default useBuffering;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getActions();\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return compact([actionPin, actionAddToFolder]);\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]);\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      (e.target as HTMLElement).classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    (e.target as HTMLElement).classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useContextMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const menuRect = menuEl ? {\n      width: menuEl.offsetWidth,\n      height: menuEl.offsetHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const left = horizontalPosition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : (x - triggerRect.left);\n    const top = y - triggerRect.top;\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX - triggerRect.left) - left;\n    const offsetY = (anchorY - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import usePrevious from './usePrevious';\n\nexport default function useCurrentOrPrev<T extends any>(\n  current: T, shouldSkipUndefined = false, shouldForceCurrent = false,\n): T | undefined {\n  const prev = usePrevious(current, shouldSkipUndefined);\n\n  // eslint-disable-next-line no-null/no-null\n  return shouldForceCurrent || (current !== null && current !== undefined) ? current : prev;\n}\n","import { useCallback, useMemo } from '../lib/teact/teact';\n\nimport { debounce } from '../util/schedulers';\n\nexport default function useDebouncedCallback<T extends AnyToVoidFunction>(\n  fn: T,\n  deps: any[],\n  ms: number,\n  noFirst?: boolean,\n  noLast?: boolean,\n) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const fnMemo = useCallback(fn, deps);\n\n  return useMemo(() => {\n    return debounce(fnMemo, ms, !noFirst, !noLast);\n  }, [fnMemo, ms, noFirst, noLast]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect, useState } from '../lib/teact/teact';\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const [orderedIds, setOrderedIds] = useState(getOrderedIds(folderId));\n\n  useEffect(() => addOrderedIdsCallback(folderId, setOrderedIds), [folderId]);\n\n  return orderedIds;\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const [unreadCounters, setUnreadCounters] = useState(getUnreadCounters());\n\n  useEffect(() => addUnreadCountersCallback(setUnreadCounters), []);\n\n  return unreadCounters;\n}\n\nexport function useFolderManagerForChatsCount() {\n  const [chatsCount, setChatsCount] = useState(getChatsCount());\n\n  useEffect(() => addChatsCountCallback(setChatsCount), []);\n\n  return chatsCount;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container || isDisabled) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n\nexport default useHorizontalScroll;\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/\n\nimport { useEffect } from '../lib/teact/teact';\nimport { getHotkeyHandler, getHotkeyMatcher } from '../util/parseHotkey';\n\nexport { getHotkeyHandler };\n\nexport type HotkeyItem = [string, (event: KeyboardEvent) => void];\n\nfunction shouldFireEvent(event: KeyboardEvent) {\n  if (event.target instanceof HTMLElement) {\n    return !['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName);\n  }\n  return true;\n}\n\nexport function useHotkeys(hotkeys: HotkeyItem[]) {\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype HotkeyItem = [string, (event: React.KeyboardEvent<HTMLElement>) => void];\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n\nexport function getHotkeyHandler(hotkeys: HotkeyItem[]) {\n  return (event: React.KeyboardEvent<HTMLElement>) => {\n    hotkeys.forEach(([hotkey, handler]) => {\n      if (getHotkeyMatcher(hotkey)(event.nativeEvent)) {\n        event.preventDefault();\n        handler(event);\n      }\n    });\n  };\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n  }, []);\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nconst useLayoutEffectWithPrevDeps = <T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n  }, [], ms, noFirst, noLast);\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\nimport { getGlobal } from '../lib/teact/teactn';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    const { serverTimeOffset } = getGlobal();\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : serverTimeOffset);\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport useOnChange from './useOnChange';\n\n// Allows to use state value as \"silent\" dependency in hooks (not causing updates).\n// Useful for state values that update frequently (such as controlled input value).\nexport function useStateRef<T>(value: T) {\n  const ref = useRef<T>(value);\n\n  useOnChange(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref;\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport { throttle } from '../util/schedulers';\nimport windowSize from '../util/windowSize';\nimport { ApiDimensions } from '../api/types';\n\nconst THROTTLE = 250;\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState<ApiDimensions>(windowSize.get());\n\n  useEffect(() => {\n    const handleResize = throttle(() => {\n      setSize(windowSize.get());\n    }, THROTTLE, false);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return size;\n};\n\nexport default useWindowSize;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, MessageKey, parseMessageKey } from '../global/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = getGlobal().audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (getGlobal().globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent, params: {\n    // Relative zoom factor\n    zoomFactor: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  maxZoom?: number;\n  minZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.sqrt((b.pageX - a.pageX) ** 2 + (b.pageY - a.pageY) ** 2);\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialDistance = 0;\n  let initialTouchCenter = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialDistance = 0;\n    initialSwipeAxis = undefined;\n    initialTouchCenter = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './environment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\nimport { fastRaf } from './schedulers';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  fastRaf(() => {\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n\n      container.scrollTop = Math.round(target - currentPath);\n\n      isAnimating = t < 1;\n\n      if (!isAnimating) {\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    });\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\nimport { fastRaf } from './schedulers';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  fastRaf(() => {\n    animate(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n\n      const currentPath = path * (1 - transition(t));\n      container.scrollLeft = Math.round(target - currentPath);\n\n      return t < 1;\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","const ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection && selection.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  return messageIds;\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  mediaSession?.setMicrophoneActive?.(active);\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  mediaSession?.setCameraActive?.(active);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../api/types';\nimport { IS_EMOJI_SUPPORTED } from './environment';\nimport { RE_LINK_TEMPLATE } from '../config';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string, withMarkdownLinks = false): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<b>$2</b>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<i>$2</i>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    '$1<s>$2</s>$3',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(^|\\s)(?!<code[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/code>)(\\s|$)/g,\n    `$1<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>$3`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: string | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = (node as HTMLAnchorElement).dataset.userId;\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import { ApiThemeParameters } from '../api/types';\n\nexport function extractCurrentThemeParams(): ApiThemeParameters {\n  const style = getComputedStyle(document.documentElement);\n  const backgroundColor = getPropertyWrapped(style, '--color-background');\n  const textColor = getPropertyWrapped(style, '--color-text');\n  const buttonColor = getPropertyWrapped(style, '--color-primary');\n  const buttonTextColor = getPropertyWrapped(style, '--color-white');\n  const linkColor = getPropertyWrapped(style, '--color-links');\n  const hintColor = getPropertyWrapped(style, '--color-text-secondary');\n  return {\n    bg_color: backgroundColor,\n    text_color: textColor,\n    hint_color: hintColor,\n    link_color: linkColor,\n    button_color: buttonColor,\n    button_text_color: buttonTextColor,\n  };\n}\n\nexport function validateHexColor(color: string) {\n  return /^#[0-9A-F]{6}$/i.test(color);\n}\n\nfunction getPropertyWrapped(style: CSSStyleDeclaration, property: string) {\n  const value = style.getPropertyValue(property);\n  return wrapColor(value.trim());\n}\n\nfunction wrapColor(color: string) {\n  if (validateHexColor(color)) return color;\n  return `#${color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+\\.{0,1}\\d*))?\\)$/)!\n    .slice(1)\n    .map((n: string, i: number) => (i === 3 ? Math.round(parseFloat(n) * 255) : parseFloat(n))\n      .toString(16)\n      .padStart(2, '0')\n      .replace('NaN', ''))\n    .join('')}`;\n}\n"],"names":["memo","sticker","effect","isOwn","soundId","size","observeIntersection","lastSyncTime","forceLoadPreview","messageId","chatId","activeEmojiInteractions","markAnimationLoaded","isAnimationLoaded","ref","width","style","handleClick","playKey","useAnimatedEmoji","undefined","emoji","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useMediaTransition","mediaData","isMediaLoaded","Boolean","className","buildClassName","LIKE_STICKER_ID","onClick","src","alt","key","animationData","quality","play","forceOnHeavyAnimation","noLoop","onLoad","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","length","height","ctx","getContext","scale","forEach","item","i","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","map","start","end","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","isDownloading","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","getActions","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useRef","lang","useLang","isRtl","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwnMessage","waveformCanvasRef","canvasRef","useMemo","waveform","min","durationFactor","spikesCount","round","Uint8Array","useLayoutEffect","current","useWaveformCanvas","withSeekline","useEffect","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","draggable","renderVoice","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","chat","selectChat","user","isUserId","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","text","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","header","isSavedMessages","isText","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","wasIntersected","markIntersected","useFlag","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","getMessageHtmlId","decoding","onContextMenu","stopEvent","isGif","Keys","activeKey","DEFAULT_TEXT","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","setTimeout","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","userStatus","selectUserStatus","noStatusOrTyping","fullName","getUserFullName","isUserOnline","getUserStatus","photo","isFirstPhoto","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","getMediaHash","forceAvatar","hash","getChatAvatarHash","photoBlobUrl","avatarMediaHash","avatarBlobUrl","imageSrc","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","isVerifiedIconShown","_","renderPhotoTabs","Transition","renderPhoto","type","VerifiedIcon","FakeIcon","reaction","staticIconId","getGlobal","availableReactions","find","staticIcon","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","target","REPORT_OPTIONS","onEnter","options","selected","noAnimate","noContextMenu","onFaveClick","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isLottie","isLottieLoaded","markLoaded","unmarkLoaded","canLottiePlay","isVideo","IS_WEBM_SUPPORTED","videoBlobUrl","canVideoPlay","previewTransitionClassNames","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useContextMenuPosition","safePlay","pause","handleUnfaveClick","preventDefault","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","onMouseDown","preventMessageInputBlurWithBubbling","autoPlay","loop","playsInline","muted","isLowPriority","autoClose","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","VERIFIED_ICON","__html","dangerouslySetInnerHTML","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS_PX","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","availableWidthRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","availableWidth","availableHeight","getAvailableHeight","mediaWidth","calculateDimensions","getMediaViewerAvailableDimensions","withFooter","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","mediaHeight","calculatedWidth","WIDTH","large","medium","small","localEffect","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","hasEffect","audioRef","soundMediaData","setPlayKey","String","random","interactions","startedInteractions","sendInteractionBunch","remove","Audio","addEventListener","once","container","startSize","isReversed","performance","now","interactionMessageId","emoticon","selectLocalAnimatedEmojiEffectByName","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","isUnread","ShowTransition","isCustom","unreadMentionsCount","formatIntegerCompact","isActive","lastMessage","senderId","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","usersById","users","byId","filter","Opacity","opacity","fastRaf","classList","add","Move","transform","ANIMATION_END_DELAY","shouldReplaceHistory","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","ListItem","Avatar","isCallActive","isCallNotEmpty","LastMessageMeta","TypingStatus","isChat","renderActionMessageText","asTextWithSpoilers","senderName","getMessageSenderName","blobUrl","renderSummary","renderLastMessageOrTyping","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","openNextChat","resolvedFolderId","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","useFolderManagerForOrderedIds","orderById","reduce","acc","prevOrderById","usePrevious","orderDiffById","mapValues","order","CHAT_LIST_SLICE","hotkeys","targetIndexDelta","useHotkeys","IS_PWA","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","getAnimationType","orderDiffs","Object","values","numberOfUp","diff","numberOfDown","None","Infinity","useChatAnimationType","InfiniteScroll","preloadBackwards","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","renderChats","Loading","getSenderName","chatsById","getSenderTitle","isChatGroup","CustomSend","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","handleDragLeave","fromTarget","Portal","containerId","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","pollModal","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","canAutoFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","sendMessageAction","useSendMessageAction","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","exec","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","shiftKey","altKey","handleKeyUp","IS_ANDROID","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","createElement","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","restoreSelection","addRange","updateSelectedRange","getSelectedText","innerText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","keys","some","fKey","monospace","strikethrough","handleSpoilerText","spoiler","dataset","entityType","ApiMessageEntityTypes","replaceWith","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","split","encodeURI","href","handler","k","b","u","m","s","p","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","File","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","cache","WeakMap","memoized","fn","cached","get","args","areSortedArraysEqual","lastArgs","lastResult","set","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","prepareRecentEmojisMemo","recentEmojiIds","limit","pickTruthy","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","searchInLibraryMemo","library","matched","matchedKeywords","keyword","sort","flatten","matchedNames","unique","useEmojiTooltip","isAllowed","htmlRef","onUpdateHtml","isDisabled","markIsOpen","unmarkIsOpen","setById","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","ensureEmojiData","then","getEmojiCode","forceSend","endsWith","substr","insertEmoji","textEmoji","isForce","currentHtml","atIndex","lastIndexOf","messageInput","EDITABLE_INPUT_CSS_SELECTOR","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","updateFilteredUsers","withInlineBots","memberIds","member","filteredIds","filterUsersByName","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","disabled","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","children","handleSelectWithEnter","index","useKeyboardListNavigation","textPart","buttonClassName","tabIndex","buttonRef","secondaryIcon","destructive","onSecondaryIconClick","isTouched","markIsTouched","unmarkIsTouched","handleSecondaryIconClick","handleMouseDown","role","DEFAULT_DURATION","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","step","renderValue","mainClassName","trackWidth","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","prevIsOpen","prevChildren","fromChildrenRef","noAnimation","onCheck","classNames","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","fastSmoothScrollHorizontal","tab","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","preservedRender","childElements","transition","isBackwards","prevActiveIndex","activeIndex","toSlide","fromSlide","ANIMATION_LEVEL_MIN","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","clientHeight","performSlideOptimized","node","HTMLElement","onAnimationEnd","activeElement","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","teactFastList","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","playbackRate","setPositionState","isFinite","paused","updateMetadata","destroy","isSafariPatchInProgress","useEffectWithPrevDeps","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","getTimeRanges","ranges","noInitiallyBuffered","setIsBuffered","bufferedProgress","setBufferedProgress","setBufferedRanges","setIsBufferedDebounced","handleBuffering","media","buffered","bufferedLength","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","compact","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionReport","actionDelete","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","EMPTY_RECT","anchor","getLayout","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","marginTop","menuRect","offsetHeight","rootRect","horizontalPosition","verticalPosition","triggerRect","menuMaxHeight","offsetX","offsetY","useCurrentOrPrev","shouldSkipUndefined","shouldForceCurrent","prev","useDebouncedCallback","deps","ms","noFirst","noLast","fnMemo","replyOriginForId","loadMessage","loadMessageThrottled","throttled","setOrderedIds","getOrderedIds","addOrderedIdsCallback","useFolderManagerForUnreadCounters","unreadCounters","setUnreadCounters","getUnreadCounters","addUnreadCountersCallback","useFolderManagerForChatsCount","chatsCount","setChatsCount","getChatsCount","addChatsCountCallback","handleScroll","deltaX","deltaY","keydownListener","hotkey","ctrl","meta","mod","shift","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","shouldFireEvent","useIntersectionObserver","rootCallback","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","rootCallbackRef","freezeFlagsRef","onUnfreezeRef","freeze","unfreeze","useHeavyAnimationCheck","observer","disconnect","callbacks","clear","observe","targetCallback","Map","entriesAccumulator","observerCallbackSync","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","store","idRef","generateIdFor","mediaHash","noLoad","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","Date","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","useRunDebounced","CalendarModal","canScheduleUntilOnline","onCancel","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","SEND_MESSAGE_ACTION_INTERVAL","useStateRef","savedCallback","useVideoCleanup","videoRef","videoEl","load","setSize","handleResize","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","has","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","el","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","a","sqrt","pageX","pageY","getTouchCenter","lastClickTime","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","initialDistance","initialTouchCenter","innerWidth","innerHeight","excludedClosestSelector","onMove","withCursor","body","querySelectorAll","scrollable","overflow","onDoubleClick","centerX","centerY","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","isNotPassive","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","calculateScrollFrom","FocusDirection","scrollWithJs","isAnimatingScroll","offsetTop","elementTop","scrollTop","offset","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","getAttribute","containerWidth","animate","force","forcePlaceCaretAtEnd","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","cloneContents","childElementCount","nodeType","contains","messageEl","removeChild","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","fragment","parseMarkdown","parseMarkdownLinks","textIndex","recursionDeepness","entities","addEntity","getEntityDataFromNode","hasChildNodes","parsedHtml","RegExp","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","substring","audioEl","patchedForSafari","patchForSafariInProgress","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click","extractCurrentThemeParams","getPropertyWrapped","textColor","buttonColor","buttonTextColor","linkColor","bg_color","text_color","hint_color","link_color","button_color","button_text_color","validateHexColor","test","property","getPropertyValue","n","parseFloat","padStart"],"sourceRoot":""}