{"version":3,"file":"306.abed97b181f73c2c1aa8.js","mappings":"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,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAE5qlgC,SAASC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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/AnimatedSticker.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/helpers/searchUserName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBackgroundMode.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useCurrentOrPrev.ts","webpack://telegram-t/./src/hooks/useDebounce.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useMedia.ts","webpack://telegram-t/./src/hooks/useMediaTransition.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/clipboard.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/resetScroll.ts","webpack://telegram-t/./src/util/safePlay.ts"],"sourcesContent":["import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n};\n\nconst QUALITY = 1;\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const transitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} className={sticker.id === LIKE_STICKER_ID ? 'like-sticker-thumb' : undefined} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, {\n  FC, useEffect, useRef, memo, useCallback, useState,\n} from '../../lib/teact/teact';\n\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useHeavyAnimationCheck from '../../hooks/useHeavyAnimationCheck';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\n\ntype OwnProps = {\n  className?: string;\n  id: string;\n  animationData: AnyLiteral;\n  play?: boolean | string;\n  playSegment?: [number, number];\n  speed?: number;\n  noLoop?: boolean;\n  size: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  onLoad?: NoneToVoidFunction;\n};\n\ntype RLottieClass = typeof import('../../lib/rlottie/RLottie').default;\ntype RLottieInstance = import('../../lib/rlottie/RLottie').default;\nlet lottiePromise: Promise<RLottieClass>;\nlet RLottie: RLottieClass;\n\n// Time supposed for judges to measure \"Transferred Size\" in Dev Tools\nconst LOTTIE_LOAD_DELAY = 5000;\n\nasync function ensureLottie() {\n  if (!lottiePromise) {\n    lottiePromise = import('../../lib/rlottie/RLottie') as unknown as Promise<RLottieClass>;\n    RLottie = (await lottiePromise as any).default;\n  }\n\n  return lottiePromise;\n}\n\nsetTimeout(ensureLottie, LOTTIE_LOAD_DELAY);\n\nconst AnimatedSticker: FC<OwnProps> = ({\n  className,\n  id,\n  animationData,\n  play,\n  playSegment,\n  speed,\n  noLoop,\n  size,\n  quality,\n  isLowPriority,\n  onLoad,\n}) => {\n  const [animation, setAnimation] = useState<RLottieInstance>();\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n  const wasPlaying = useRef(false);\n  const isFrozen = useRef(false);\n\n  const playRef = useRef();\n  playRef.current = play;\n  const playSegmentRef = useRef<[number, number]>();\n  playSegmentRef.current = playSegment;\n\n  useEffect(() => {\n    if (animation || !animationData) {\n      return;\n    }\n\n    const exec = () => {\n      if (!container.current) {\n        return;\n      }\n\n      const newAnimation = new RLottie(\n        id,\n        container.current,\n        animationData,\n        {\n          noLoop,\n          size,\n          quality,\n          isLowPriority,\n        },\n        onLoad,\n      );\n\n      if (speed) {\n        newAnimation.setSpeed(speed);\n      }\n\n      setAnimation(newAnimation);\n    };\n\n    if (RLottie) {\n      exec();\n    } else {\n      ensureLottie().then(() => {\n        fastRaf(() => {\n          if (container.current) {\n            exec();\n          }\n        });\n      });\n    }\n  }, [animation, animationData, id, isLowPriority, noLoop, onLoad, quality, size, speed]);\n\n  useEffect(() => {\n    return () => {\n      if (animation) {\n        animation.destroy();\n      }\n    };\n  }, [animation]);\n\n  const playAnimation = useCallback((shouldRestart = false) => {\n    if (animation && (playRef.current || playSegmentRef.current)) {\n      if (playSegmentRef.current) {\n        animation.playSegment(playSegmentRef.current);\n      } else if (shouldRestart) {\n        animation.goToAndPlay(0);\n      } else {\n        animation.play();\n      }\n    }\n  }, [animation]);\n\n  const pauseAnimation = useCallback(() => {\n    if (!animation) {\n      return;\n    }\n\n    animation.pause();\n  }, [animation]);\n\n  const freezeAnimation = useCallback(() => {\n    isFrozen.current = true;\n\n    if (!animation) {\n      return;\n    }\n\n    if (!wasPlaying.current) {\n      wasPlaying.current = animation.isPlaying();\n    }\n\n    pauseAnimation();\n  }, [animation, pauseAnimation]);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (wasPlaying.current) {\n      playAnimation();\n    }\n\n    wasPlaying.current = false;\n    isFrozen.current = false;\n  }, [playAnimation]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  useEffect(() => {\n    if (!animation) {\n      return;\n    }\n\n    if (play || playSegment) {\n      if (isFrozen.current) {\n        wasPlaying.current = true;\n      } else {\n        playAnimation(noLoop);\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isFrozen.current) {\n        wasPlaying.current = false;\n      } else {\n        pauseAnimation();\n      }\n    }\n  }, [animation, play, playSegment, noLoop, playAnimation, pauseAnimation]);\n\n  useHeavyAnimationCheck(freezeAnimation, unfreezeAnimation);\n  // Pausing frame may not happen in background\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n\n  const fullClassName = buildClassName('AnimatedSticker', className);\n\n  const style = size ? `width: ${size}px; height: ${size}px;` : undefined;\n\n  return (\n    <div\n      ref={container}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    />\n  );\n};\n\nexport default memo(AnimatedSticker);\n","import React, {\n  FC, memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const playStateBeforeSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n  const dispatch = getDispatch();\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, play, pause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    origin,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn);\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isPlaying, isUploading, message.id, message.chatId, onCancelUpload, onPlay, playPause, isActivated]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [dispatch, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    playStateBeforeSeeking.current = isPlaying;\n    pause();\n    handleSeek(e);\n  }, [handleSeek, pause, isPlaying]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n    if (playStateBeforeSeeking.current) play();\n  }, [play]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(lang, date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {withSeekline && (\n            <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n              <span className=\"duration with-seekline\" dir=\"auto\">\n                {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n              </span>\n              {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n            </div>\n          )}\n          {!withSeekline && renderSecondLine()}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang, audio, duration, isPlaying, playProgress, bufferedProgress, seekerRef,\n        (isDownloading || isUploading), date, transferProgress, onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(voice, seekerRef, waveformCanvasRef, playProgress, isMediaUnread)\n      )}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          <span className=\"bullet\">&bull;</span>\n          <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n) {\n  return (\n    <div className=\"content\">\n      <div\n        className=\"waveform\"\n        draggable={false}\n        ref={seekerRef}\n      >\n        <canvas ref={waveformCanvasRef} />\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [voice]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiChat, ApiMediaFormat, ApiUser } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../modules/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLang from '../../hooks/useLang';\n\nimport './Avatar.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  withOnlineStatus?: boolean;\n  chat?: ApiChat;\n  user?: ApiUser;\n  text?: string;\n  isSavedMessages?: boolean;\n  lastSyncTime?: number;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  text,\n  withOnlineStatus,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  let imageHash: string | undefined;\n\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat);\n    }\n  }\n\n  const blobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(blobUrl);\n  const { transitionClassNames } = useShowTransition(hasBlobUrl, undefined, hasBlobUrl, 'slow');\n\n  const lang = useLang();\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isReplies) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (blobUrl) {\n    content = (\n      <img src={blobUrl} className={buildClassName('avatar-media', transitionClassNames)} alt=\"\" decoding=\"async\" />\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && isUserOnline(user);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    withOnlineStatus && isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !blobUrl) && 'no-photo',\n  );\n\n  const hasImage = Boolean(isSavedMessages || blobUrl);\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasImage);\n    }\n  }, [onClick, hasImage]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div className={fullClassName} onClick={handleClick} data-test-sender-id={IS_TEST ? senderId : undefined}>\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../modules/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isUserId, isUserRightBanned, selectIsChatMuted,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'updateChatMutedState' | 'showNotification'>;\n\nconst ChatExtra: FC<OwnProps & StateProps & DispatchProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  loadFullUser,\n  showNotification,\n  updateChatMutedState,\n}) => {\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && !!formattedNumber.length && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && !!description.length && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem icon=\"mention\" multiline narrow ripple onClick={() => copy(link, lang('SetUrlPlaceholder'))}>\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadFullUser', 'updateChatMutedState', 'showNotification',\n  ]),\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'leaveChannel' | 'deleteHistory' | 'deleteChannel' | 'deleteChatUser' | 'blockContact'\n)>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n  deleteChatUser,\n  blockContact,\n}) => {\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions,\n    ['leaveChannel', 'deleteHistory', 'deleteChannel', 'deleteChatUser', 'blockContact']),\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport { ApiMediaFormat, ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getDispatch();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress<ApiMediaFormat.BlobUrl>(\n    documentHash, !shouldDownload, undefined, undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const transitionClassNames = useMediaTransition(previewData);\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={thumbnailDataUri}\n              width={width}\n              height={height}\n              className=\"thumbnail\"\n              alt=\"\"\n            />\n            <img\n              src={previewData}\n              className={buildClassName('full-media', transitionClassNames)}\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'openMediaViewer']),\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      <img src={thumbDataUri} alt=\"\" />\n      <img src={mediaBlobUrl} className={buildClassName('full-media', transitionClassNames)} alt=\"\" />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../modules/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  serverTimeOffset,\n  loadFullUser,\n  openMediaViewer,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const photoBlobUrl = useMedia(getMediaHash('big'), false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const avatarMediaHash = isFirstPhoto && !photoBlobUrl ? getMediaHash('normal', true) : undefined;\n  const avatarBlobUrl = useMedia(avatarMediaHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const thumbDataUri = useBlurSync(!photoBlobUrl && photo && photo.thumbnail && photo.thumbnail.dataUri);\n  const imageSrc = photoBlobUrl || avatarBlobUrl || thumbDataUri;\n  const prevImageSrc = usePrevious(imageSrc);\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" decoding=\"async\" />;\n  } else if (!imageSrc && user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (!imageSrc && chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {prevImageSrc && imageSrc && prevImageSrc !== imageSrc && (\n        <img src={prevImageSrc} className=\"prev-avatar-media\" alt=\"\" decoding=\"async\" />\n      )}\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiChat } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  isSavedMessages?: boolean;\n  animationLevel: 0 | 1 | 2;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'connectionState'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  forceShowSelf,\n  user,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  serverTimeOffset,\n  loadFullUser,\n  openMediaViewer,\n}) => {\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1 ? 'slide' : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Support for swipe gestures and closing on click\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState,\n      user,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\n\nimport './StickerButton.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  size: number;\n  observeIntersection: ObserveFn;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  onClick?: (arg: any) => void;\n  clickArg?: any;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton: FC<OwnProps> = ({\n  sticker, size, observeIntersection, noAnimate, title, className, onClick, clickArg, onUnfaveClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isAnimated && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isAnimationLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canAnimatedPlay = isAnimationLoaded && shouldPlay;\n\n  const { transitionClassNames: previewTransitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || canAnimatedPlay),\n    undefined,\n    undefined,\n    'slow',\n  );\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  function handleClick() {\n    if (onClick) {\n      onClick(clickArg);\n    }\n  }\n\n  function handleUnfaveClick(e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    sticker.isAnimated && 'animated',\n    stickerSelector,\n    className,\n  );\n\n  const style = thumbDataUri && !canAnimatedPlay ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      // @ts-ignore\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={handleClick}\n    >\n      {!canAnimatedPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      {/* fix for translation \"username _is_ typing\" */}\n      {lang(typingStatus.action).replace('{user}', '').trim()}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(lang, message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {truncatedDescription && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {renderText(truncatedDescription)}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../modules/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS_PX = 240;\nexport const GIF_MIN_WIDTH = 300;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '1258816259753933';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n  const mediaWidth = isGif ? Math.max(GIF_MIN_WIDTH, width) : width;\n  const mediaHeight = isGif ? height * (mediaWidth / width) : height;\n\n  return calculateDimensions(availableWidth, availableHeight, mediaWidth, mediaHeight);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities: IOrganizedEntity[] = [];\n  const parsedNestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  parsedNestedEntities.forEach((parsedEntity) => {\n    let isChanged = false;\n\n    parsedEntity.organizedIndexes.forEach((organizedIndex) => {\n      if (!isChanged && !organizedIndexes.has(organizedIndex)) {\n        isChanged = true;\n      }\n\n      organizedIndexes.add(organizedIndex);\n    });\n\n    if (isChanged) {\n      nestedEntities.push(parsedEntity);\n    }\n  });\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntities = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntities.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntities.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['escape_html', 'emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['escape_html', 'emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useCallback } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<string, number>) {\n  const movesUp = useCallback((id: string) => orderDiffById[id] < 0, [orderDiffById]);\n  const movesDown = useCallback((id: string) => orderDiffById[id] > 0, [orderDiffById]);\n\n  const orderDiffIds = Object.keys(orderDiffById);\n  const numberOfUp = orderDiffIds.filter(movesUp).length;\n  const numberOfDown = orderDiffIds.filter(movesDown).length;\n\n  return useCallback((chatId: string): ChatAnimationTypes => {\n    const orderDiff = orderDiffById[chatId];\n\n    if (orderDiff === 0) {\n      return ChatAnimationTypes.None;\n    }\n\n    if (\n      orderDiff === Infinity\n      || orderDiff === -Infinity\n      || (movesUp(chatId) && numberOfUp <= numberOfDown)\n      || (movesDown(chatId) && numberOfDown < numberOfUp)\n    ) {\n      return ChatAnimationTypes.Opacity;\n    }\n\n    return ChatAnimationTypes.Move;\n  }, [movesDown, movesUp, numberOfDown, numberOfUp, orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isUserId,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  privateChatUser?: ApiUser;\n  actionTargetUserIds?: string[];\n  usersById?: Record<string, ApiUser>;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  privateChatUser,\n  actionTargetUserIds,\n  usersById,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    return actionTargetUserIds\n      ? actionTargetUserIds.map((userId) => usersById?.[userId]).filter<ApiUser>(Boolean as any)\n      : undefined;\n  }, [actionTargetUserIds, usersById]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  function handleChatFolderChange() {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    privateChatUser,\n    handleDelete,\n    handleChatFolderChange,\n    folderId,\n    isPinned,\n    isMuted,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderText(renderActionMessageText(\n            lang,\n            lastMessage,\n            actionOrigin,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderMessageSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={privateChatUser}\n          withOnlineStatus\n          isSavedMessages={privateChatUser?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, privateChatUser))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(lang, message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(lang, message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { byId: usersById } = global.users;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n      ...(actionTargetUserIds && { usersById }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../modules/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser,\n} from '../../../api/types';\nimport { NotifyException, NotifySettings, SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID, IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport { getChatOrder, prepareChatList, prepareFolderListIds } from '../../../modules/helpers';\nimport {\n  selectChatFolder, selectNotifyExceptions, selectNotifySettings,\n} from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n  foldersDispatch?: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  chatFolder?: ApiChatFolder;\n  listIds?: string[];\n  orderedPinnedIds?: string[];\n  lastSyncTime?: number;\n  notifySettings: NotifySettings;\n  notifyExceptions?: Record<number, NotifyException>;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'loadMoreChats' | 'preloadTopChatMessages' | 'preloadArchivedChats' | 'openChat' | 'openNextChat'\n)>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived',\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  chatFolder,\n  chatsById,\n  usersById,\n  listIds,\n  orderedPinnedIds,\n  lastSyncTime,\n  foldersDispatch,\n  notifySettings,\n  notifyExceptions,\n  onScreenSelect,\n  loadMoreChats,\n  preloadTopChatMessages,\n  preloadArchivedChats,\n  openChat,\n  openNextChat,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(chatsById, usersById, chatFolder, notifySettings, notifyExceptions)\n      : [listIds, orderedPinnedIds];\n  }, [folderType, chatFolder, chatsById, usersById, notifySettings, notifyExceptions, listIds, orderedPinnedIds]);\n\n  const [orderById, orderedIds] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = [...newChatArrays.pinnedChats, ...newChatArrays.otherChats];\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return order - (prevOrderById[id] !== undefined ? prevOrderById[id] : Infinity);\n    });\n  }, [orderById, prevOrderById]);\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  // TODO Refactor to not call `prepareChatList` twice\n  const chatArrays = viewportIds && prepareChatList(chatsById, viewportIds, currentPinnedIds, folderType);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n      preloadArchivedChats();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages, preloadArchivedChats]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + chatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {chatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {chatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isActive && orderedIds) {\n        if (IS_PWA && ((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n          const [, digit] = e.code.match(/Digit(\\d)/) || [];\n          if (!digit) return;\n\n          const position = Number(digit) - 1;\n          if (position > orderedIds.length - 1) return;\n\n          openChat({ id: orderedIds[position], shouldReplaceHistory: true });\n        }\n\n        if (e.altKey) {\n          const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n          if (!targetIndexDelta) return;\n\n          e.preventDefault();\n          openNextChat({ targetIndexDelta, orderedIds });\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      noScrollRestore\n    >\n      {viewportIds?.length && chatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      chatsById,\n      usersById,\n      lastSyncTime,\n      notifySettings: selectNotifySettings(global),\n      notifyExceptions: selectNotifyExceptions(global),\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadMoreChats',\n    'preloadTopChatMessages',\n    'preloadArchivedChats',\n    'openChat',\n    'openNextChat',\n  ]),\n)(ChatList));\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../modules/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  shouldSetFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: string;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage' | 'replyToNextMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  shouldSetFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n  replyToNextMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    // Avoid focusing during animation\n    if (inputRef.current!.closest('.from, .to')) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (!html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (shouldSetFocus) {\n      focusInput();\n    }\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage', 'replyToNextMessage']),\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = encodeURI(linkUrl.includes('://') ? linkUrl : `http://${linkUrl}`);\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport useFlag from '../../../../hooks/useFlag';\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\ntry {\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\p{L}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  html: string,\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [keywords, setKeywords] = useState<string[]>();\n  const [byKeyword, setByKeyword] = useState<Record<string, Emoji[]>>({});\n  const [names, setNames] = useState<string[]>();\n  const [byName, setByName] = useState<Record<string, Emoji[]>>({});\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  const recentEmojis = useMemo(\n    () => {\n      if (!byId || !recentEmojiIds.length) {\n        return [];\n      }\n\n      return Object.values(pickTruthy(byId, recentEmojiIds));\n    },\n    [byId, recentEmojiIds],\n  );\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (!byId || isDisabled) {\n      return;\n    }\n\n    const emojis = Object.values(byId);\n\n    const byNative = buildCollectionByKey(emojis, 'native');\n    const baseEmojisByKeyword = baseEmojiKeywords\n      ? mapValues(baseEmojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n    const emojisByKeyword = emojiKeywords\n      ? mapValues(emojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n\n    setByKeyword({ ...baseEmojisByKeyword, ...emojisByKeyword });\n    setKeywords([...Object.keys(baseEmojisByKeyword), ...Object.keys(emojisByKeyword)]);\n\n    const emojisByName = emojis.reduce((result, emoji) => {\n      emoji.names.forEach((name) => {\n        if (!result[name]) {\n          result[name] = [];\n        }\n\n        result[name].push(emoji);\n      });\n\n      return result;\n    }, {} as Record<string, Emoji[]>);\n    setByName(emojisByName);\n    setNames(Object.keys(emojisByName));\n  }, [isDisabled, baseEmojiKeywords, byId, emojiKeywords]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || !keywords || !keywords.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = [];\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = recentEmojis;\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n      matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword, matchedKeywords))));\n\n      // Also search by names, which is useful for non-English languages\n      const matchedNames = names.filter((name) => name.startsWith(filter));\n      matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n      matched = unique(matched);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched.slice(0, EMOJIS_LIMIT));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, byKeyword, keywords, byName, names, html, isAllowed, markIsOpen,\n    recentEmojis, unmarkIsOpen, setShouldForceInsertEmoji,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${textEmoji}`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n","import {\n  useCallback, useEffect, useState, useMemo,\n} from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\p{L}\\\\p{M}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n  usersById?: Record<string, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const topInlineBots = useMemo(() => {\n    return (topInlineBotIds || []).map((id) => usersById?.[id]).filter<ApiUser>(Boolean as any);\n  }, [topInlineBotIds, usersById]);\n\n  const getFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n    runThrottled(() => {\n      const inlineBots = (withInlineBots ? topInlineBots : []).filter((inlineBot) => {\n        return !filter || searchUserName(filter, inlineBot);\n      });\n\n      const chatMembers = (groupChatMembers || [])\n        .map(({ userId }) => usersById[userId])\n        .filter((user) => {\n          if (!user || user.id === currentUserId) {\n            return false;\n          }\n\n          return !filter || searchUserName(filter, user);\n        });\n\n      setUsersToMention(unique(inlineBots.concat(chatMembers)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds, topInlineBots, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      getFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredUsers, markIsOpen, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, memo, useState,\n} from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={confirmHandler}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: any;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport React, {\n  FC, useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: any;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    buttonRef,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    focus,\n    destructive,\n    multiline,\n    isStatic,\n    contextActions,\n    onMouseDown,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      // @ts-ignore\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role=\"button\"\n        ref={buttonRef}\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: any;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: any;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  title,\n  className,\n  isOpen,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  children,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  const { forceClose } = useHistoryBack(isOpen, onClose);\n\n  // For modals that are closed by unmounting without changing `isOpen` to `false`\n  useEffect(() => {\n    return () => {\n      if (isOpen) {\n        forceClose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\">\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import { FC, useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: any;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, useMemo, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  renderValue?: (value: number) => string;\n  disabled?: boolean;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  renderValue,\n  disabled,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const className = buildClassName(\n    'RangeSlider',\n    disabled && 'disabled',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={className}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          // @ts-ignore\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useLayoutEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  active?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  active,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (!active || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tab = tabRef.current!;\n    const indicator = tab.querySelector('i')!;\n    const prevTab = tab.parentElement!.children[previousActiveTab];\n    if (!prevTab) {\n      return;\n    }\n    const currentIndicator = prevTab.querySelector('i')!;\n\n    currentIndicator.classList.remove('animate');\n    indicator.classList.remove('animate');\n\n    // We move and resize our indicator so it repeats the position and size of the previous one.\n    const shiftLeft = currentIndicator.parentElement!.offsetLeft - indicator.parentElement!.offsetLeft;\n    const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n    indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n    // 3 AFs needed here to synchronize animations with Transition component\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          // Now we remove the transform to let it animate to its own position and size.\n          indicator.classList.add('animate');\n          indicator.style.transform = 'none';\n        });\n      });\n    });\n  }, [active, previousActiveTab]);\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName('Tab', className, active && 'active')}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && 'active')}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </button>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    if (container.scrollWidth <= container.offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.querySelector('.Tab.active') as HTMLElement | null;\n    if (activeTabElement) {\n      const newLeft = activeTabElement.offsetLeft - (container.offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n      // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n      if (Math.abs(newLeft - container.scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n        return;\n      }\n\n      fastSmoothScrollHorizontal(container, newLeft);\n    }\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          active={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { waitForAnimationEnd } from '../../util/cssAnimationEndListeners';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => any;\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-reversed' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  id?: string;\n  className?: string;\n  onStart?: () => void;\n  onStop?: () => void;\n  children: ChildrenFn;\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst Transition: FC<OwnProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup || (cleanupExceptionKey !== undefined && cleanupExceptionKey === prevActiveKey)) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      childElements[0].classList.add('active');\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle('active', i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove('active');\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    let dispatchHeavyAnimationStop: NoneToVoidFunction;\n    if (animationLevel > 0) {\n      dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n    }\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      if (onStart) {\n        onStart();\n      }\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle('active', i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>('.active');\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          if (dispatchHeavyAnimationStop) {\n            dispatchHeavyAnimationStop();\n          }\n\n          cleanup();\n\n          if (onStop) {\n            onStop();\n          }\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      currentKeyRef.current = activeKey;\n\n      if (animationLevel > 0 && watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>('.active')\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function'\n        ? <div key={key}>{render(key === activeKey, key === prevActiveKey, activeKey)}</div>\n        : undefined\n    );\n  });\n\n  const fullClassName = buildClassName(\n    'Transition',\n    className,\n    name,\n  );\n\n  return (\n    <div ref={containerRef} id={id} className={fullClassName}>\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getDispatch, getGlobal } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\n\nimport { register, Track, TrackId } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nexport default (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, origin, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          setVolume(getGlobal().audioPlayer.volume);\n          toggleMuted(!!getGlobal().audioPlayer.isMuted);\n          if (trackType === 'voice') {\n            setPlaybackRate(getGlobal().audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    setCurrentOrigin,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      setCurrentOrigin(origin);\n      play(src);\n    }\n  }, [src, origin, play, setCurrentOrigin]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst: isFirst(),\n    isLast: isLast(),\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getDispatch().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useBackgroundMode(\n  onBlur?: AnyToVoidFunction,\n  onFocus?: AnyToVoidFunction,\n) {\n  useEffect(() => {\n    if (onBlur && !document.hasFocus()) {\n      onBlur();\n    }\n\n    if (onBlur) {\n      window.addEventListener('blur', onBlur);\n    }\n\n    if (onFocus) {\n      window.addEventListener('focus', onFocus);\n    }\n\n    return () => {\n      if (onFocus) {\n        window.removeEventListener('focus', onFocus);\n      }\n\n      if (onBlur) {\n        window.removeEventListener('blur', onBlur);\n      }\n    };\n  }, [onBlur, onFocus]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel,\n} from '../modules/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nexport default ({\n  chat,\n  privateChatUser,\n  handleDelete,\n  handleChatFolderChange,\n  folderId,\n  isPinned,\n  isMuted,\n}: {\n  chat: ApiChat | undefined;\n  privateChatUser: ApiUser | undefined;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = privateChatUser || {};\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getDispatch();\n\n    const actionAddToFolder = {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return [actionPin, actionAddToFolder];\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isInFolder && actionArchive,\n      actionDelete,\n    ]);\n  }, [chat, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, handleDelete, folderId, isSelf]);\n};\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction checkIsDisabledForMobile() {\n  return IS_SINGLE_COLUMN_LAYOUT\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    document.body.classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    let horizontalPostition: 'left' | 'right';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPostition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPostition = 'right';\n      x -= 3;\n    } else {\n      horizontalPostition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPostition);\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n\n    const left = horizontalPostition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : Math.max((x - triggerRect.left), menuRect.width + MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    const top = Math.min(\n      rootRect.height - triggerRect.top + triggerRect.height - MENU_POSITION_BOTTOM_MARGIN,\n      y - triggerRect.top,\n    );\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN;\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n};\n","import usePrevious from './usePrevious';\n\nexport default function useCurrentOrPrev<T extends any>(\n  current: T, shouldSkipUndefined = false, shouldForceCurrent = false,\n): T | undefined {\n  const prev = usePrevious(current, shouldSkipUndefined);\n\n  // eslint-disable-next-line no-null/no-null\n  return shouldForceCurrent || (current !== null && current !== undefined) ? current : prev;\n}\n","import { useMemo } from '../lib/teact/teact';\n\nimport { debounce } from '../util/schedulers';\n\nexport default function useDebounce(ms: number, shouldRunFirst?: boolean, shouldRunLast?: boolean) {\n  return useMemo(() => {\n    return debounce((cb) => cb(), ms, shouldRunFirst, shouldRunLast);\n  }, [ms, shouldRunFirst, shouldRunLast]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nexport default <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n  forceFullPreload = false,\n): [ListId[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  }\n\n  useEffect(() => {\n    if (listIds && !isDisabled && loadMoreBackwards && forceFullPreload) {\n      const viewportIds = viewportIdsRef.current!;\n      loadMoreBackwards({ offsetId: viewportIds[viewportIds.length - 1] });\n    }\n  }, [listIds, isDisabled, loadMoreBackwards, forceFullPreload]);\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nconst AUTO_UNFREEZE_TIMEOUT = 2000;\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n  noAutoFreeze = false,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n  noAutoFreeze?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const autoUnfreezeTimeoutRef = useRef<number>();\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n\n    if (noAutoFreeze) {\n      return;\n    }\n\n    if (autoUnfreezeTimeoutRef.current) {\n      clearTimeout(autoUnfreezeTimeoutRef.current);\n      autoUnfreezeTimeoutRef.current = undefined;\n    }\n\n    // Make sure to unfreeze even if unfreeze callback was not called (which was some hardly-reproducible bug)\n    autoUnfreezeTimeoutRef.current = window.setTimeout(() => {\n      autoUnfreezeTimeoutRef.current = undefined;\n\n      if (!freezeFlagsRef.current) {\n        return;\n      }\n\n      freezeFlagsRef.current = 1;\n      unfreeze();\n    }, AUTO_UNFREEZE_TIMEOUT);\n  }, [noAutoFreeze, unfreeze]);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T, debugKey?: string) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n","import { useEffect } from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | false | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!noLoad && mediaHash && !mediaData) {\n      const startedAt = Date.now();\n\n      mediaLoader.fetch(mediaHash, mediaFormat).then(() => {\n        const spentTime = Date.now() - startedAt;\n        if (!delay || spentTime >= delay) {\n          forceUpdate();\n        } else {\n          setTimeout(forceUpdate, delay - spentTime);\n        }\n      });\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, delay]);\n\n  return mediaData;\n};\n","import useShowTransition from './useShowTransition';\n\nexport default function useMediaTransition(mediaData?: any) {\n  const isMediaReady = Boolean(mediaData);\n  const { transitionClassNames } = useShowTransition(isMediaReady, undefined, isMediaReady, 'slow');\n\n  return transitionClassNames;\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nexport default () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress<T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, MessageKey, parseMessageKey } from '../modules/helpers';\nimport { fastRaf } from './schedulers';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  origin: AudioOrigin;\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<string, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: string | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  origin: AudioOrigin,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    origin,\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const track = tracks.get(trackId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return;\n\n  const nextTrackId = findNextInQueue(queue, trackId, track.origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getDispatch().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (currentTrack) nextTrack.origin = currentTrack.origin; // Preserve origin\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, origin, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n    },\n\n    setCurrentOrigin(audioOrigin: AudioOrigin) {\n      tracks.get(trackId)!.origin = audioOrigin;\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin);\n    },\n\n    isFirst() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  if (track.type === 'audio') {\n    return musicQueue;\n  }\n\n  if (track.type === 'voice') {\n    return voiceQueue;\n  }\n  return undefined;\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter((el) => el !== trackId);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter((el) => el !== trackId);\n  }\n}\n\nfunction findNextInQueue(queue: TrackId[], current: TrackId, origin: AudioOrigin, isReverseOrder?: boolean) {\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(current);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(current).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(current);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nconst IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialSwipeAxis = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: true });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","import { DEBUG } from '../config';\n\nexport const CLIPBOARD_ITEM_SUPPORTED = navigator.clipboard && window.ClipboardItem;\n\nconst textCopyEl = document.createElement('textarea');\ntextCopyEl.setAttribute('readonly', '');\ntextCopyEl.tabIndex = -1;\ntextCopyEl.className = 'visually-hidden';\n\nexport const copyTextToClipboard = (str: string): void => {\n  textCopyEl.value = str;\n  document.body.appendChild(textCopyEl);\n  const selection = document.getSelection();\n\n  if (selection) {\n    // Store previous selection\n    const rangeToRestore = selection.rangeCount > 0 && selection.getRangeAt(0);\n    textCopyEl.select();\n    document.execCommand('copy');\n    // Restore the original selection\n    if (rangeToRestore) {\n      selection.removeAllRanges();\n      selection.addRange(rangeToRestore);\n    }\n  }\n\n  document.body.removeChild(textCopyEl);\n};\n\nexport const copyImageToClipboard = (imageUrl?: string) => {\n  if (!imageUrl) return;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const imageEl = new Image();\n  imageEl.onload = (e: Event) => {\n    if (ctx && e.currentTarget) {\n      const img = e.currentTarget as HTMLImageElement;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob(copyBlobToClipboard, 'image/png', 1);\n    }\n  };\n\n  imageEl.src = imageUrl;\n};\n\nasync function copyBlobToClipboard(pngBlob: Blob | null) {\n  if (!pngBlob || !CLIPBOARD_ITEM_SUPPORTED) {\n    return;\n  }\n\n  try {\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [pngBlob.type]: pngBlob,\n      }),\n    ]);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n    const currentPath = path * (1 - transition(t));\n\n    container.scrollTop = Math.round(target - currentPath);\n\n    isAnimating = t < 1;\n\n    if (!isAnimating) {\n      onHeavyAnimationStop();\n    }\n\n    return isAnimating;\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { IS_IOS } from './environment';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  // Native way seems to be smoother in Chrome\n  if (!IS_IOS) {\n    container.scrollTo({\n      left,\n      ...(duration && { behavior: 'smooth' }),\n    });\n  } else {\n    scrollWithJs(container, left, duration);\n  }\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  mediaSession?.setMicrophoneActive?.(active);\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  mediaSession?.setCameraActive?.(active);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../api/types';\nimport { IS_EMOJI_SUPPORTED } from './environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[_]{2}([^*\\n]+)[_]{2}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: string | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = (node as HTMLAnchorElement).dataset.userId;\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import { IS_IOS } from './environment';\n\nexport default (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n","import { DEBUG } from '../config';\n\nexport default (mediaEl: HTMLMediaElement) => {\n  mediaEl.play().catch((err) => {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn(err, mediaEl);\n    }\n  });\n};\n"],"names":["WIDTH","large","medium","small","sticker","size","observeIntersection","lastSyncTime","forceLoadPreview","ref","useRef","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useMediaTransition","mediaData","isMediaLoaded","Boolean","playKey","setPlayKey","useState","String","Math","random","handleClick","useCallback","width","style","className","onClick","src","LIKE_STICKER_ID","undefined","alt","key","animationData","quality","play","noLoop","onLoad","lottiePromise","RLottie","async","ensureLottie","default","setTimeout","memo","playSegment","speed","isLowPriority","animation","setAnimation","container","wasPlaying","isFrozen","playRef","current","playSegmentRef","useEffect","exec","newAnimation","setSpeed","then","fastRaf","destroy","playAnimation","shouldRestart","goToAndPlay","pauseAnimation","pause","freezeAnimation","isPlaying","unfreezeAnimation","unfreezeAnimationOnRaf","useHeavyAnimationCheck","useBackgroundMode","fullClassName","buildClassName","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedProgress","seekerRef","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","isDownloading","onPlay","onReadMedia","onCancelUpload","onDateClick","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","playStateBeforeSeeking","lang","useLang","isRtl","dispatch","getDispatch","isActivated","setIsActivated","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","canvasRef","data","spikes","peak","useMemo","waveform","Array","min","fill","durationFactor","spikesCount","round","fitCount","newData","springFactor","length","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","handleDownloadClick","cancelMessageMediaDownload","downloadMessageMedia","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","draggable","renderVoice","chat","user","text","withOnlineStatus","isSavedMessages","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","imageHash","getChatAvatarHash","blobUrl","hasBlobUrl","decoding","userFullName","getUserFullName","getFirstLetters","getChatTitle","isUserId","isOnline","isUserOnline","getUserColorKey","hasImage","senderId","IS_TEST","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","selectChat","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","setGlobal","actions","pick","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","header","isText","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","document","timestamp","extension","getDocumentExtension","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","status","idPrefix","mediaBlobUrl","getMessageVideo","isGif","Keys","activeKey","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","map","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","noStatusOrTyping","fullName","getUserStatus","photo","isFirstPhoto","isRepliesChat","getMediaHash","forceAvatar","hash","photoBlobUrl","avatarMediaHash","avatarBlobUrl","useBlurSync","imageSrc","prevImageSrc","usePrevious","Spinner","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","renderPhoto","isVerifiedIconShown","_","renderPhotoTabs","Transition","type","VerifiedIcon","noAnimate","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isAnimated","markLoaded","unmarkLoaded","canAnimatedPlay","previewTransitionClassNames","emoji","onMouseDown","preventMessageInputBlurWithBubbling","preventDefault","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","messageText","getMessageSummaryText","siteName","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS_PX","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","availableWidth","availableHeight","getAvailableHeight","mediaWidth","calculateDimensions","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","mediaHeight","calculatedWidth","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","rawText","getMessageText","entities","renderTextWithEntities","organizeEntity","index","organizedEntityIndexes","offset","organizedIndexes","Set","has","nestedEntities","filter","parsedEntity","isChanged","organizedIndex","add","organizeEntities","organizedEntities","organizedEntity","shouldRenderAsHtml","renderMessagePart","deleteLineBreakAfterPre","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","substring","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","ApiMessageEntityTypes","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","getLinkUrl","processEntityAsHtml","entityText","handleBotCommandClick","handleHashtagClick","href","target","rel","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","sendBotCommand","command","innerText","setLocalTextSearchQuery","query","searchTextMessagesLocal","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","renderContent","unreadMentionsCount","formatIntegerCompact","ShowTransition","isCustom","lastMessage","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","byId","usersById","users","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","privateChatUser","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","Opacity","opacity","classList","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","contextActions","useChatContextActions","handleDelete","handleChatFolderChange","ListItem","Avatar","LastMessageMeta","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","FolderTypeToListType","chats","listIds","chatsById","orderedPinnedIds","listType","notifySettings","notifyExceptions","isActive","loadMoreChats","preloadTopChatMessages","preloadArchivedChats","openNextChat","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","newChatArrays","prepareChatList","singleList","pinnedChats","otherChats","newOrderedIds","reduce","acc","prevOrderById","orderDiffById","mapValues","order","Infinity","loadMoreOfType","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","chatArrays","getAnimationType","movesUp","movesDown","orderDiffIds","Object","keys","numberOfUp","numberOfDown","None","useChatAnimationType","handleKeyDown","IS_PWA","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","altKey","targetIndexDelta","addEventListener","removeEventListener","InfiniteScroll","preloadBackwards","noFastList","viewportOffset","pinnedOffset","IS_ANDROID","CHAT_HEIGHT_PX","teactFastList","teactOrderKey","getChatOrder","renderChats","Loading","getSenderName","getSenderTitle","isChatGroup","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","from","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","shouldSetFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","closest","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","shiftKey","handleKeyUp","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onContextMenu","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","fragmentEl","createElement","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","updateSelectedRange","getSelectedText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","some","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","addRange","restoreSelection","handler","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RegExp","useEmojiTooltip","isAllowed","recentEmojiIds","onUpdateHtml","baseEmojiKeywords","emojiKeywords","isDisabled","markIsOpen","unmarkIsOpen","setById","keywords","setKeywords","byKeyword","setByKeyword","names","setNames","byName","setByName","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","MEMO_EMPTY_ARRAY","recentEmojis","values","pickTruthy","emojis","uncompressEmoji","ensureEmojiData","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","emojisByName","getEmojiCode","forceSend","endsWith","matched","matchedKeywords","keyword","sort","concat","flatten","matchedNames","unique","insertEmoji","textEmoji","isForce","atIndex","lastIndexOf","messageInput","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","searchUserName","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","topInlineBots","getFilteredUsers","withInlineBots","inlineBots","inlineBot","chatMembers","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","options","selected","disabled","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","onEnter","split","textPart","children","buttonClassName","tabIndex","itemSelector","sensitiveArea","noScrollRestoreOnTop","cacheBuster","stateRef","loadMoreBackwards","loadMoreForwards","noScroll","LoadMoreDirection","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","scrollTop","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","buttonRef","destructive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","positionX","positionY","menuStyle","useContextMenuPosition","handleMouseDown","role","autoClose","hasCloseButton","noBackdrop","shouldSkipHistoryAnimations","modalRef","onEsc","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","trapFocus","forceClose","useHistoryBack","useEffectWithPrevDeps","prevIsOpen","body","dispatchHeavyAnimationEvent","Portal","containerId","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","appendChild","TeactDOM","removeChild","RADIUSES","s","m","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","step","renderValue","trackWidth","parentContainerClassName","focused","autoFocusSearch","onReset","onFocus","onBlur","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","prevChildren","fromChildrenRef","noAnimation","onCheck","active","badgeCount","isBadgeActive","previousActiveTab","tabRef","tab","indicator","prevTab","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","newLeft","fastSmoothScrollHorizontal","CLEANED_UP","Symbol","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","getGlobal","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","childElements","childNodes","isBackwards","prevActiveIndex","activeIndex","node","HTMLElement","dispatchHeavyAnimationStop","onAnimationEnd","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","playbackRate","setPositionState","isFinite","paused","updateMetadata","setCurrentOrigin","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","hasFocus","cache","Map","blurredRef","img","Image","imgToCanvas","fastBlur","toDataURL","blurredAsync","get","onload","blurredDataUri","clear","set","useBlur","noInitiallyBuffered","setIsBuffered","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","buffered","end","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","isInSearch","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionDelete","getCanDeleteChat","isInFolder","compact","stopEvent","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","anchor","extraPaddingX","extraTopPadding","setPositionX","setPositionY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","rootRect","horizontalPostition","menuMaxHeight","useCurrentOrPrev","shouldSkipUndefined","shouldForceCurrent","prev","useDebounce","ms","shouldRunFirst","shouldRunLast","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","deltaX","deltaY","listSlice","forceFullPreload","lastParamsRef","viewportIdsRef","newViewportIds","getViewportSlice","prevListIds","prevIsDisabled","offsetId","areSortedArraysEqual","areSomeLocal","areAllLocal","sourceIds","indexForDirection","to","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","noAutoFreeze","rootCallback","rootCallbackRef","freezeFlagsRef","autoUnfreezeTimeoutRef","onUnfreezeRef","unfreeze","freeze","observer","disconnect","callbacks","observe","targetCallback","entriesAccumulator","observerCallbackSync","entries","entry","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","mediaHash","noLoad","mediaFormat","startedAt","Date","now","spentTime","isMediaReady","store","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","idRef","generateIdFor","useUniqueId","setLoadProgress","startedAtRef","handleProgress","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","track","queue","getTrackQueue","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","safePlay","stopCurrentAudio","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","dataset","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","audioOrigin","fastSeek","muted","rate","shouldRemoveFromQueue","h","el","removeFromQueue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","diff","localeCompare","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","excludedClosestSelector","onMove","pageX","pageY","withCursor","scrollable","overflow","dragOffsetX","dragOffsetY","shouldPreventScroll","innerWidth","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","CLIPBOARD_ITEM_SUPPORTED","navigator","clipboard","ClipboardItem","textCopyEl","str","rangeToRestore","select","copyImageToClipboard","imageUrl","imageEl","toBlob","copyBlobToClipboard","pngBlob","write","DEBUG","console","waitForTransitionEnd","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","FocusDirection","calculateScrollFrom","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","containerWidth","animate","scrollTo","behavior","force","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","fragment","parsedHtml","parseMarkdown","textIndex","recursionDeepness","addEntity","nodeName","entityType","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","audioEl","patchedForSafari","patchForSafariInProgress","once","mediaEl","catch"],"sourceRoot":""}