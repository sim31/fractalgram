{"version":3,"file":"752.a61d6807ba5aa0ed04ae.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://telegram-t/./node_modules/base64-js/index.js","webpack://telegram-t/./node_modules/big-integer/BigInteger.js","webpack://telegram-t/./node_modules/buffer/index.js","webpack://telegram-t/./node_modules/ieee754/index.js"],"sourcesContent":["var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"],"names":["S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","getWords","key","length","i","buf","pos","str","charCodeAt","Error","xor","left","right","to","x2","x4","s","tEnc","tDec","d","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","c","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","offset","incrementCounter","carry","exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","arr","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Array","code","indexOf","start","end","num","output","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","value","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","trim","compareAbs","createArray","truncate","ceil","add","sum","l_a","l_b","r","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","roughLOB","integerLogarithm","p","e","min","gcd","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","digit","toBaseString","stringify","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","obj","isBuffer","checked","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","replace","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","isNaN","LN2"],"sourceRoot":""}