{"version":3,"file":"519.7a6fb19ecda7674c985d.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/helpers/searchUserName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useDebounce.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useMediaTransition.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/forceReflow.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts"],"sourcesContent":["import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n};\n\nconst QUALITY = 1;\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const transitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} className={sticker.id === LIKE_STICKER_ID ? 'like-sticker-thumb' : undefined} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, {\n  FC, memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const playStateBeforeSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n  const dispatch = getDispatch();\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, play, pause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn);\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getDispatch().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [dispatch, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    playStateBeforeSeeking.current = isPlaying;\n    pause();\n    handleSeek(e);\n  }, [handleSeek, pause, isPlaying]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n    if (playStateBeforeSeeking.current) play();\n  }, [play]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(lang, date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {withSeekline && (\n            <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n              <span className=\"duration with-seekline\" dir=\"auto\">\n                {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n              </span>\n              {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n            </div>\n          )}\n          {!withSeekline && renderSecondLine()}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang, audio, duration, isPlaying, playProgress, bufferedProgress, seekerRef,\n        (isDownloading || isUploading), date, transferProgress, onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(voice, seekerRef, waveformCanvasRef, playProgress, isMediaUnread)\n      )}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          <span className=\"bullet\">&bull;</span>\n          <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n) {\n  return (\n    <div className=\"content\">\n      <div\n        className=\"waveform\"\n        draggable={false}\n        ref={seekerRef}\n      >\n        <canvas ref={waveformCanvasRef} />\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [voice]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../modules/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isUserId, isUserRightBanned, selectIsChatMuted,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'updateChatMutedState' | 'showNotification'>;\n\nconst ChatExtra: FC<OwnProps & StateProps & DispatchProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  loadFullUser,\n  showNotification,\n  updateChatMutedState,\n}) => {\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && !!formattedNumber.length && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && !!description.length && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem icon=\"mention\" multiline narrow ripple onClick={() => copy(link, lang('SetUrlPlaceholder'))}>\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadFullUser', 'updateChatMutedState', 'showNotification',\n  ]),\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'leaveChannel' | 'deleteHistory' | 'deleteChannel' | 'deleteChatUser' | 'blockContact'\n)>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n  deleteChatUser,\n  blockContact,\n}) => {\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions,\n    ['leaveChannel', 'deleteHistory', 'deleteChannel', 'deleteChatUser', 'blockContact']),\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport { ApiMediaFormat, ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getDispatch();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress<ApiMediaFormat.BlobUrl>(\n    documentHash, !shouldDownload, undefined, undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const transitionClassNames = useMediaTransition(previewData);\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={thumbnailDataUri}\n              width={width}\n              height={height}\n              className=\"thumbnail\"\n              alt=\"\"\n            />\n            <img\n              src={previewData}\n              className={buildClassName('full-media', transitionClassNames)}\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'openMediaViewer']),\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      <img src={thumbDataUri} alt=\"\" />\n      <img src={mediaBlobUrl} className={buildClassName('full-media', transitionClassNames)} alt=\"\" />\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isUserId } from '../../modules/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isUserId(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus, ApiUserStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  serverTimeOffset,\n  loadFullUser,\n  openMediaViewer,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, userStatus, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const photoBlobUrl = useMedia(getMediaHash('big'), false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const avatarMediaHash = isFirstPhoto && !photoBlobUrl ? getMediaHash('normal', true) : undefined;\n  const avatarBlobUrl = useMedia(avatarMediaHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const thumbDataUri = useBlurSync(!photoBlobUrl && photo && photo.thumbnail && photo.thumbnail.dataUri);\n  const imageSrc = photoBlobUrl || avatarBlobUrl || thumbDataUri;\n  const prevImageSrc = usePrevious(imageSrc);\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" decoding=\"async\" />;\n  } else if (!imageSrc && user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (!imageSrc && chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {prevImageSrc && imageSrc && prevImageSrc !== imageSrc && (\n        <img src={prevImageSrc} className=\"prev-avatar-media\" alt=\"\" decoding=\"async\" />\n      )}\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiChat, ApiUserStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser, selectUserStatus } from '../../modules/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  chat?: ApiChat;\n  isSavedMessages?: boolean;\n  animationLevel: 0 | 1 | 2;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'connectionState'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  forceShowSelf,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  serverTimeOffset,\n  loadFullUser,\n  openMediaViewer,\n}) => {\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1\n    ? (lang.isRtl ? 'slide-optimized-rtl' : 'slide-optimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Support for swipe gestures and closing on click\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user, userStatus) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      isSavedMessages,\n      animationLevel,\n      serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\n\nimport './StickerButton.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  size: number;\n  observeIntersection: ObserveFn;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  onClick?: (arg: any) => void;\n  clickArg?: any;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton: FC<OwnProps> = ({\n  sticker, size, observeIntersection, noAnimate, title, className, onClick, clickArg, onUnfaveClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isAnimated && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isAnimationLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canAnimatedPlay = isAnimationLoaded && shouldPlay;\n\n  const { transitionClassNames: previewTransitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || canAnimatedPlay),\n    undefined,\n    undefined,\n    'slow',\n  );\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  function handleClick() {\n    if (onClick) {\n      onClick(clickArg);\n    }\n  }\n\n  function handleUnfaveClick(e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    sticker.isAnimated && 'animated',\n    stickerSelector,\n    className,\n  );\n\n  const style = thumbDataUri && !canAnimatedPlay ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      // @ts-ignore\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={handleClick}\n    >\n      {!canAnimatedPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      {/* fix for translation \"username _is_ typing\" */}\n      {lang(typingStatus.action).replace('{user}', '').trim()}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(lang, message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {truncatedDescription && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {renderText(truncatedDescription)}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../modules/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS_PX = 240;\nexport const GIF_MIN_WIDTH = 300;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '1258816259753933';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n  const mediaWidth = isGif ? Math.max(GIF_MIN_WIDTH, width) : width;\n  const mediaHeight = isGif ? height * (mediaWidth / width) : height;\n\n  return calculateDimensions(availableWidth, availableHeight, mediaWidth, mediaHeight);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities: IOrganizedEntity[] = [];\n  const parsedNestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  parsedNestedEntities.forEach((parsedEntity) => {\n    let isChanged = false;\n\n    parsedEntity.organizedIndexes.forEach((organizedIndex) => {\n      if (!isChanged && !organizedIndexes.has(organizedIndex)) {\n        isChanged = true;\n      }\n\n      organizedIndexes.add(organizedIndex);\n    });\n\n    if (isChanged) {\n      nestedEntities.push(parsedEntity);\n    }\n  });\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntities = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntities.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntities.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['escape_html', 'emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['escape_html', 'emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<string, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: string): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\n\nimport './ChatCallStatus.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n}) => {\n  return (\n    <div className={buildClassName(\n      'ChatCallStatus',\n      isActive && 'active',\n      isSelected && !IS_SINGLE_COLUMN_LAYOUT && 'selected',\n    )}\n    >\n      <div className=\"indicator\">\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID, ApiUserStatus,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isUserId,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions, selectUserStatus,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  usersById?: Record<string, ApiUser>;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  usersById,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    return actionTargetUserIds\n      ? actionTargetUserIds.map((userId) => usersById?.[userId]).filter<ApiUser>(Boolean as any)\n      : undefined;\n  }, [actionTargetUserIds, usersById]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  function handleChatFolderChange() {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    folderId,\n    isPinned,\n    isMuted,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderText(renderActionMessageText(\n            lang,\n            lastMessage,\n            actionOrigin,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderMessageSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isSelected={isSelected} isActive={animationLevel !== 0} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, user))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(lang, message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(lang, message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { byId: usersById } = global.users;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && {\n        user: selectUser(global, privateChatUserId),\n        userStatus: selectUserStatus(global, privateChatUserId),\n      }),\n      ...(actionTargetUserIds && { usersById }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../modules/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser,\n} from '../../../api/types';\nimport { NotifyException, NotifySettings, SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID, IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport {\n  getChatOrder, prepareChatList, prepareFolderListIds, reduceChatList,\n} from '../../../modules/helpers';\nimport {\n  selectChatFolder, selectNotifyExceptions, selectNotifySettings,\n} from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n  foldersDispatch?: FolderEditDispatch;\n};\n\ntype StateProps = {\n  allListIds: GlobalState['chats']['listIds'];\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  listIds?: string[];\n  orderedPinnedIds?: string[];\n  chatFolder?: ApiChatFolder;\n  lastSyncTime?: number;\n  notifySettings: NotifySettings;\n  notifyExceptions?: Record<number, NotifyException>;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'loadMoreChats' | 'preloadTopChatMessages' | 'preloadArchivedChats' | 'openChat' | 'openNextChat'\n)>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived',\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  allListIds,\n  chatsById,\n  usersById,\n  listIds,\n  orderedPinnedIds,\n  chatFolder,\n  lastSyncTime,\n  notifySettings,\n  notifyExceptions,\n  foldersDispatch,\n  onScreenSelect,\n  loadMoreChats,\n  preloadTopChatMessages,\n  preloadArchivedChats,\n  openChat,\n  openNextChat,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(allListIds, chatsById, usersById, chatFolder, notifySettings, notifyExceptions)\n      : [listIds, orderedPinnedIds];\n  }, [\n    folderType, chatFolder, allListIds, chatsById, usersById,\n    notifySettings, notifyExceptions, listIds, orderedPinnedIds,\n  ]);\n\n  const [orderById, orderedIds, chatArrays] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = ([] as ApiChat[]).concat(newChatArrays.pinnedChats, newChatArrays.otherChats);\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds, newChatArrays];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [orderById, prevOrderById]);\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  const viewportChatArrays = useMemo(() => {\n    if (!viewportIds || !chatArrays) {\n      return undefined;\n    }\n\n    return reduceChatList(chatArrays, viewportIds);\n  }, [chatArrays, viewportIds]);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n      preloadArchivedChats();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages, preloadArchivedChats]);\n\n  // Support <Cmd>+<Digit> and <Alt>+<Up/Down> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (IS_PWA && ((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        const position = Number(digit) - 1;\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n\n      if (e.altKey) {\n        const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n        if (!targetIndexDelta) return;\n\n        e.preventDefault();\n        openNextChat({ targetIndexDelta, orderedIds });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isActive, openChat, openNextChat, orderedIds]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + viewportChatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {viewportChatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {viewportChatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      noScrollRestore\n    >\n      {viewportIds?.length && viewportChatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      allListIds: listIds,\n      chatsById,\n      usersById,\n      lastSyncTime,\n      notifySettings: selectNotifySettings(global),\n      notifyExceptions: selectNotifyExceptions(global),\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadMoreChats',\n    'preloadTopChatMessages',\n    'preloadArchivedChats',\n    'openChat',\n    'openNextChat',\n  ]),\n)(ChatList));\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../modules/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  shouldSetFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: string;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage' | 'replyToNextMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  shouldSetFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n  replyToNextMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (!html.length && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (shouldSetFocus) {\n      focusInput();\n    }\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage', 'replyToNextMessage']),\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = encodeURI(ensureProtocol(linkUrl) || '');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport memoized from '../../../../util/memoized';\nimport useFlag from '../../../../hooks/useFlag';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\p{L}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  html: string,\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || isDisabled) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter, EMOJIS_LIMIT);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched);\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, html, isAllowed, markIsOpen, recentEmojiIds, unmarkIsOpen, setShouldForceInsertEmoji,\n    isDisabled, baseEmojiKeywords, emojiKeywords,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${textEmoji}`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names,\n  } = library;\n\n  let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword!, matchedKeywords))));\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n  matched = unique(matched);\n\n  return matched.slice(0, limit);\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n","import {\n  useCallback, useEffect, useState, useMemo,\n} from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\p{L}\\\\p{M}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n  usersById?: Record<string, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const topInlineBots = useMemo(() => {\n    return (topInlineBotIds || []).map((id) => usersById?.[id]).filter<ApiUser>(Boolean as any);\n  }, [topInlineBotIds, usersById]);\n\n  const getFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n    runThrottled(() => {\n      const inlineBots = (withInlineBots ? topInlineBots : []).filter((inlineBot) => {\n        return !filter || searchUserName(filter, inlineBot);\n      });\n\n      const chatMembers = (groupChatMembers || [])\n        .map(({ userId }) => usersById[userId])\n        .filter((user) => {\n          if (!user || user.id === currentUserId) {\n            return false;\n          }\n\n          return !filter || searchUserName(filter, user);\n        });\n\n      setUsersToMention(unique(inlineBots.concat(chatMembers)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds, topInlineBots, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      getFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredUsers, markIsOpen, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, memo, useState,\n} from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: any;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    buttonRef,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    focus,\n    destructive,\n    multiline,\n    isStatic,\n    contextActions,\n    onMouseDown,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      // @ts-ignore\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role=\"button\"\n        ref={buttonRef}\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, useMemo, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  renderValue?: (value: number) => string;\n  disabled?: boolean;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  renderValue,\n  disabled,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const className = buildClassName(\n    'RangeSlider',\n    disabled && 'disabled',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={className}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          // @ts-ignore\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useRef, memo, useEffect,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      return;\n    }\n\n    const platformEl = tabEl.querySelector('i')!;\n    const prevPlatformEl = prevTabEl.querySelector('i')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    prevPlatformEl.classList.remove('animate');\n    platformEl.classList.remove('animate');\n    platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n    forceReflow(platformEl);\n    platformEl.classList.add('animate');\n    platformEl.style.transform = 'none';\n\n    prevTabEl.classList.remove(classNames.active);\n    tabEl.classList.add(classNames.active);\n  }, [isActive, previousActiveTab]);\n\n  return (\n    <div\n      className={buildClassName('Tab', className)}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/environment';\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const newLeft = activeTabElement.offsetLeft - (offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    fastSmoothScrollHorizontal(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          isActive={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\n\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { waitForAnimationEnd, waitForTransitionEnd } from '../../util/cssAnimationEndListeners';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => any;\nexport type TransitionProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-rtl' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal' | 'slide-optimized' | 'slide-optimized-rtl'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  isDisabled?: boolean;\n  id?: string;\n  className?: string;\n  onStart?: NoneToVoidFunction;\n  onStop?: NoneToVoidFunction;\n  children: ChildrenFn;\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst classNames = {\n  active: 'Transition__slide--active',\n};\n\nconst Transition: FC<TransitionProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup || (cleanupExceptionKey !== undefined && cleanupExceptionKey === prevActiveKey)) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      if (name.startsWith('slide-optimized')) {\n        (childElements[0] as HTMLElement).style.transform = 'translate3d(0, 0, 0)';\n      }\n\n      childElements[0].classList.add(classNames.active);\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    currentKeyRef.current = activeKey;\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'slide-optimized' || name === 'slide-optimized-rtl') {\n      performSlideOptimized(\n        name,\n        isBackwards,\n        cleanup,\n        activeKey,\n        currentKeyRef,\n        container,\n        shouldRestoreHeight,\n        onStart,\n        onStop,\n        childNodes[activeIndex] as HTMLElement,\n        childNodes[prevActiveIndex] as HTMLElement,\n      );\n\n      return;\n    }\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle(classNames.active, i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove(classNames.active);\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      onStart?.();\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle(classNames.active, i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>(`.${classNames.active}`);\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          onStop?.();\n          dispatchHeavyAnimationStop();\n          cleanup();\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      if (watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>(`.${classNames.active}`)\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function' ? (\n        <div key={key} teactOrderKey={key}>{render(key === activeKey, key === prevActiveKey, activeKey)}</div>\n      ) : undefined\n    );\n  });\n\n  return (\n    <div\n      ref={containerRef}\n      id={id}\n      className={buildClassName('Transition', className, name)}\n      teactFastList={!renderCount && !shouldCleanup}\n    >\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n\nfunction performSlideOptimized(\n  name: 'slide-optimized' | 'slide-optimized-rtl',\n  isBackwards: boolean,\n  cleanup: NoneToVoidFunction,\n  activeKey: number,\n  currentKeyRef: { current: number | undefined },\n  container: HTMLElement,\n  shouldRestoreHeight?: boolean,\n  onStart?: NoneToVoidFunction,\n  onStop?: NoneToVoidFunction,\n  currentSlide?: HTMLElement,\n  prevSlide?: HTMLElement,\n) {\n  if (!prevSlide || !currentSlide) {\n    return;\n  }\n\n  if (name === 'slide-optimized-rtl') {\n    isBackwards = !isBackwards;\n  }\n\n  const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  requestAnimationFrame(() => {\n    onStart?.();\n\n    prevSlide.style.transition = 'none';\n    prevSlide.style.transform = 'translate3d(0, 0, 0)';\n\n    currentSlide.style.transition = 'none';\n    currentSlide.style.transform = `translate3d(${isBackwards ? '-' : ''}100%, 0, 0)`;\n\n    forceReflow(currentSlide);\n\n    prevSlide.style.transition = '';\n    prevSlide.style.transform = `translate3d(${isBackwards ? '' : '-'}100%, 0, 0)`;\n\n    currentSlide.style.transition = '';\n    currentSlide.style.transform = 'translate3d(0, 0, 0)';\n\n    prevSlide.classList.remove(classNames.active);\n    currentSlide.classList.add(classNames.active);\n\n    waitForTransitionEnd(prevSlide, () => {\n      if (activeKey !== currentKeyRef.current) {\n        return;\n      }\n\n      prevSlide.style.transition = 'none';\n      prevSlide.style.transform = '';\n\n      if (shouldRestoreHeight) {\n        currentSlide.style.height = 'auto';\n        container.style.height = `${currentSlide.clientHeight}px`;\n      }\n\n      onStop?.();\n      dispatchHeavyAnimationStop();\n      cleanup();\n    });\n  });\n}\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getDispatch, getGlobal } from '../lib/teact/teactn';\n\nimport { register, Track, TrackId } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nexport default (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          setVolume(getGlobal().audioPlayer.volume);\n          toggleMuted(!!getGlobal().audioPlayer.isMuted);\n          if (trackType === 'voice') {\n            setPlaybackRate(getGlobal().audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getDispatch().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel,\n} from '../modules/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nexport default ({\n  chat,\n  user,\n  handleDelete,\n  handleChatFolderChange,\n  folderId,\n  isPinned,\n  isMuted,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getDispatch();\n\n    const actionAddToFolder = {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return [actionPin, actionAddToFolder];\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isInFolder && actionArchive,\n      actionDelete,\n    ]);\n  }, [chat, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, handleDelete, folderId, isSelf]);\n};\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction checkIsDisabledForMobile() {\n  return IS_SINGLE_COLUMN_LAYOUT\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    document.body.classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    let horizontalPostition: 'left' | 'right';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPostition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPostition = 'right';\n      x -= 3;\n    } else {\n      horizontalPostition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPostition);\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n\n    const left = horizontalPostition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : Math.max((x - triggerRect.left), menuRect.width + MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    const top = Math.min(\n      rootRect.height - triggerRect.top + triggerRect.height - MENU_POSITION_BOTTOM_MARGIN,\n      y - triggerRect.top,\n    );\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN;\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n};\n","import { useMemo } from '../lib/teact/teact';\n\nimport { debounce } from '../util/schedulers';\n\nexport default function useDebounce(ms: number, shouldRunFirst?: boolean, shouldRunLast?: boolean) {\n  return useMemo(() => {\n    return debounce((cb) => cb(), ms, shouldRunFirst, shouldRunLast);\n  }, [ms, shouldRunFirst, shouldRunLast]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n  }, []);\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T, debugKey?: string) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n","import useShowTransition from './useShowTransition';\n\nexport default function useMediaTransition(mediaData?: any) {\n  const isMediaReady = Boolean(mediaData);\n  const { transitionClassNames } = useShowTransition(isMediaReady, undefined, isMediaReady, 'slow');\n\n  return transitionClassNames;\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nexport default () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress<T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getDispatch, getGlobal } from '../lib/teact/teactn';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, MessageKey, parseMessageKey } from '../modules/helpers';\nimport { fastRaf } from './schedulers';\nimport { selectCurrentMessageList } from '../modules/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = getGlobal().audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getDispatch().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, getGlobal().audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (getGlobal().globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent, params: {\n    // Relative zoom factor\n    zoomFactor: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  maxZoom?: number;\n  minZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nconst IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.sqrt((b.pageX - a.pageX) ** 2 + (b.pageY - a.pageY) ** 2);\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialDistance = 0;\n  let initialTouchCenter = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n      if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n        options.onDoubleClick(e, {\n          centerX: e.pageX!,\n          centerY: e.pageY!,\n        });\n      }\n      lastClickTime = Date.now();\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialDistance = 0;\n    initialSwipeAxis = undefined;\n    initialTouchCenter = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n    const currentPath = path * (1 - transition(t));\n\n    container.scrollTop = Math.round(target - currentPath);\n\n    isAnimating = t < 1;\n\n    if (!isAnimating) {\n      onHeavyAnimationStop();\n    }\n\n    return isAnimating;\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  scrollWithJs(container, left, duration);\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","// Used before applying CSS transition\nexport default function forceReflow(element: HTMLElement) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  element.offsetWidth;\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  mediaSession?.setMicrophoneActive?.(active);\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  mediaSession?.setCameraActive?.(active);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../api/types';\nimport { IS_EMOJI_SUPPORTED } from './environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[_]{2}([^*\\n]+)[_]{2}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: string | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = (node as HTMLAnchorElement).dataset.userId;\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n"],"names":["WIDTH","large","medium","small","sticker","size","observeIntersection","lastSyncTime","forceLoadPreview","ref","useRef","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useMediaTransition","mediaData","isMediaLoaded","Boolean","playKey","setPlayKey","useState","String","Math","random","handleClick","useCallback","width","style","className","onClick","src","LIKE_STICKER_ID","undefined","alt","key","animationData","quality","play","noLoop","onLoad","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedProgress","seekerRef","memo","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","isDownloading","onPlay","onReadMedia","onCancelUpload","onDateClick","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","playStateBeforeSeeking","lang","useLang","isRtl","dispatch","getDispatch","isActivated","setIsActivated","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","pause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","canvasRef","data","spikes","peak","useMemo","waveform","Array","min","fill","durationFactor","spikesCount","round","fitCount","newData","springFactor","length","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","useEffect","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","cancelMessageMediaDownload","downloadMessageMedia","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","buildClassName","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","draggable","renderVoice","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","chat","selectChat","user","isUserId","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","setGlobal","actions","pick","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","text","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","header","isSavedMessages","isText","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","document","timestamp","extension","getDocumentExtension","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","status","idPrefix","mediaBlobUrl","getMessageVideo","isGif","Keys","activeKey","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","setTimeout","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","map","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","userStatus","selectUserStatus","noStatusOrTyping","fullName","getUserFullName","isUserOnline","getUserStatus","photo","isFirstPhoto","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","getMediaHash","forceAvatar","hash","getChatAvatarHash","photoBlobUrl","avatarMediaHash","avatarBlobUrl","useBlurSync","imageSrc","prevImageSrc","usePrevious","decoding","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","renderPhoto","isVerifiedIconShown","_","renderPhotoTabs","Transition","type","VerifiedIcon","noAnimate","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isAnimated","markLoaded","unmarkLoaded","canAnimatedPlay","previewTransitionClassNames","emoji","onMouseDown","preventMessageInputBlurWithBubbling","isLowPriority","preventDefault","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","messageText","getMessageSummaryText","siteName","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS_PX","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","availableWidth","availableHeight","getAvailableHeight","mediaWidth","calculateDimensions","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","mediaHeight","calculatedWidth","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","rawText","getMessageText","entities","renderTextWithEntities","organizeEntity","index","organizedEntityIndexes","offset","organizedIndexes","Set","has","nestedEntities","filter","parsedEntity","isChanged","organizedIndex","add","organizeEntities","organizedEntities","organizedEntity","shouldRenderAsHtml","renderMessagePart","deleteLineBreakAfterPre","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","substring","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","ApiMessageEntityTypes","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","getLinkUrl","processEntityAsHtml","entityText","handleBotCommandClick","handleHashtagClick","href","target","rel","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","sendBotCommand","command","innerText","setLocalTextSearchQuery","query","searchTextMessagesLocal","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","renderContent","unreadMentionsCount","formatIntegerCompact","ShowTransition","isCustom","isActive","lastMessage","senderId","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","byId","usersById","users","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","Opacity","opacity","fastRaf","classList","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","contextActions","useChatContextActions","handleDelete","handleChatFolderChange","ListItem","Avatar","isCallActive","isCallNotEmpty","LastMessageMeta","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","blobUrl","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","FolderTypeToListType","chats","listIds","chatsById","orderedPinnedIds","listType","allListIds","notifySettings","notifyExceptions","loadMoreChats","preloadTopChatMessages","preloadArchivedChats","openNextChat","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","chatArrays","newChatArrays","prepareChatList","singleList","concat","pinnedChats","otherChats","newOrderedIds","reduce","acc","prevOrderById","orderDiffById","mapValues","order","loadMoreOfType","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","viewportChatArrays","reduceChatList","addEventListener","handleKeyDown","removeEventListener","IS_PWA","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","Number","altKey","targetIndexDelta","getAnimationType","orderDiffs","Object","values","numberOfUp","diff","numberOfDown","None","Infinity","useChatAnimationType","InfiniteScroll","preloadBackwards","noFastList","viewportOffset","pinnedOffset","IS_ANDROID","CHAT_HEIGHT_PX","teactFastList","teactOrderKey","getChatOrder","renderChats","Loading","getSenderName","getSenderTitle","isChatGroup","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","from","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","shouldSetFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","exec","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","shiftKey","handleKeyUp","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onContextMenu","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","fragmentEl","createElement","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","updateSelectedRange","getSelectedText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","keys","some","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","ensureProtocol","addRange","restoreSelection","handler","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","cache","WeakMap","memoized","fn","args","cached","get","areSortedArraysEqual","lastArgs","lastResult","set","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","prepareRecentEmojisMemo","recentEmojiIds","limit","pickTruthy","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","searchInLibraryMemo","library","matched","matchedKeywords","keyword","sort","flatten","matchedNames","unique","RegExp","useEmojiTooltip","isAllowed","onUpdateHtml","isDisabled","markIsOpen","unmarkIsOpen","setById","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","async","default","uncompressEmoji","ensureEmojiData","then","getEmojiCode","forceSend","endsWith","insertEmoji","textEmoji","isForce","atIndex","lastIndexOf","messageInput","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","searchUserName","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","topInlineBots","getFilteredUsers","withInlineBots","inlineBots","inlineBot","chatMembers","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","options","selected","disabled","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","children","buttonClassName","tabIndex","buttonRef","destructive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","menuStyle","useContextMenuPosition","handleMouseDown","role","autoClose","containerId","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","s","m","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","container","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","step","renderValue","trackWidth","parentContainerClassName","focused","autoFocusSearch","onReset","onFocus","onBlur","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","prevIsOpen","prevChildren","fromChildrenRef","noAnimation","onCheck","classNames","badgeCount","isBadgeActive","previousActiveTab","tabRef","tabEl","prevTabEl","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","newLeft","fastSmoothScrollHorizontal","tab","CLEANED_UP","Symbol","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","getGlobal","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","childElements","isBackwards","prevActiveIndex","activeIndex","currentSlide","prevSlide","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","transition","waitForTransitionEnd","clientHeight","performSlideOptimized","node","HTMLElement","onAnimationEnd","activeElement","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","playbackRate","setPositionState","isFinite","paused","updateMetadata","destroy","isSafariPatchInProgress","useEffectWithPrevDeps","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","Map","blurredRef","img","Image","imgToCanvas","fastBlur","toDataURL","blurredAsync","onload","blurredDataUri","clear","useBlur","noInitiallyBuffered","setIsBuffered","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","buffered","end","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","isInSearch","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionDelete","getCanDeleteChat","isInFolder","compact","stopEvent","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","body","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","anchor","extraPaddingX","extraTopPadding","setPositionX","setPositionY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","offsetHeight","rootRect","horizontalPostition","menuMaxHeight","useDebounce","ms","shouldRunFirst","shouldRunLast","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","handleScroll","deltaX","deltaY","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","rootCallback","rootCallbackRef","freezeFlagsRef","onUnfreezeRef","freeze","unfreeze","useHeavyAnimationCheck","observer","disconnect","callbacks","observe","targetCallback","entriesAccumulator","observerCallbackSync","entries","entry","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","isMediaReady","store","mediaHash","noLoad","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","idRef","generateIdFor","useUniqueId","setLoadProgress","startedAtRef","handleProgress","Date","now","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","safePlay","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","dataset","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","muted","rate","shouldRemoveFromQueue","h","trackIdFilter","el","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","getMessageKey","split","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","getDistance","a","sqrt","pageX","pageY","getTouchCenter","lastClickTime","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","initialDistance","initialTouchCenter","innerWidth","innerHeight","excludedClosestSelector","onMove","onDoubleClick","centerX","centerY","withCursor","querySelectorAll","scrollable","overflow","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","isNotPassive","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","offsetTop","elementTop","scrollTop","FocusDirection","calculateScrollFrom","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","containerWidth","animate","force","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","fragment","parsedHtml","parseMarkdown","textIndex","recursionDeepness","addEntity","nodeName","entityType","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","audioEl","patchedForSafari","patchForSafariInProgress","once"],"sourceRoot":""}