{"version":3,"file":"74.34f79939fc74cfbc88b0.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/AnimatedSticker.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/parseMessageInput.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/helpers/searchUserName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBackgroundMode.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useCurrentOrPrev.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useMedia.ts","webpack://telegram-t/./src/hooks/useMediaDownload.ts","webpack://telegram-t/./src/hooks/useMediaWithDownloadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useTransitionForMedia.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/clipboard.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/resetScroll.ts","webpack://telegram-t/./src/util/safePlay.ts"],"sourcesContent":["import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n};\n\nconst QUALITY = 1;\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const { transitionClassNames } = useTransitionForMedia(previewBlobUrl, 'slow');\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} className={sticker.id === LIKE_STICKER_ID ? 'like-sticker-thumb' : undefined} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, {\n  FC, useEffect, useRef, memo, useCallback, useState,\n} from '../../lib/teact/teact';\n\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useHeavyAnimationCheck from '../../hooks/useHeavyAnimationCheck';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\n\ntype OwnProps = {\n  className?: string;\n  id: string;\n  animationData: AnyLiteral;\n  play?: boolean | string;\n  playSegment?: [number, number];\n  speed?: number;\n  noLoop?: boolean;\n  size: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  onLoad?: NoneToVoidFunction;\n};\n\ntype RLottieClass = typeof import('../../lib/rlottie/RLottie').default;\ntype RLottieInstance = import('../../lib/rlottie/RLottie').default;\nlet lottiePromise: Promise<RLottieClass>;\nlet RLottie: RLottieClass;\n\n// Time supposed for judges to measure \"Transferred Size\" in Dev Tools\nconst LOTTIE_LOAD_DELAY = 5000;\n\nasync function ensureLottie() {\n  if (!lottiePromise) {\n    lottiePromise = import('../../lib/rlottie/RLottie') as unknown as Promise<RLottieClass>;\n    RLottie = (await lottiePromise as any).default;\n  }\n\n  return lottiePromise;\n}\n\nsetTimeout(ensureLottie, LOTTIE_LOAD_DELAY);\n\nconst AnimatedSticker: FC<OwnProps> = ({\n  className,\n  id,\n  animationData,\n  play,\n  playSegment,\n  speed,\n  noLoop,\n  size,\n  quality,\n  isLowPriority,\n  onLoad,\n}) => {\n  const [animation, setAnimation] = useState<RLottieInstance>();\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n  const wasPlaying = useRef(false);\n  const isFrozen = useRef(false);\n\n  const playRef = useRef();\n  playRef.current = play;\n  const playSegmentRef = useRef<[number, number]>();\n  playSegmentRef.current = playSegment;\n\n  useEffect(() => {\n    if (animation || !animationData) {\n      return;\n    }\n\n    const exec = () => {\n      if (!container.current) {\n        return;\n      }\n\n      const newAnimation = new RLottie(\n        id,\n        container.current,\n        animationData,\n        {\n          noLoop,\n          size,\n          quality,\n          isLowPriority,\n        },\n        onLoad,\n      );\n\n      if (speed) {\n        newAnimation.setSpeed(speed);\n      }\n\n      setAnimation(newAnimation);\n    };\n\n    if (RLottie) {\n      exec();\n    } else {\n      ensureLottie().then(() => {\n        fastRaf(() => {\n          if (container.current) {\n            exec();\n          }\n        });\n      });\n    }\n  }, [animation, animationData, id, isLowPriority, noLoop, onLoad, quality, size, speed]);\n\n  useEffect(() => {\n    return () => {\n      if (animation) {\n        animation.destroy();\n      }\n    };\n  }, [animation]);\n\n  const playAnimation = useCallback((shouldRestart = false) => {\n    if (animation && (playRef.current || playSegmentRef.current)) {\n      if (playSegmentRef.current) {\n        animation.playSegment(playSegmentRef.current);\n      } else if (shouldRestart) {\n        animation.goToAndPlay(0);\n      } else {\n        animation.play();\n      }\n    }\n  }, [animation]);\n\n  const pauseAnimation = useCallback(() => {\n    if (!animation) {\n      return;\n    }\n\n    animation.pause();\n  }, [animation]);\n\n  const freezeAnimation = useCallback(() => {\n    isFrozen.current = true;\n\n    if (!animation) {\n      return;\n    }\n\n    if (!wasPlaying.current) {\n      wasPlaying.current = animation.isPlaying();\n    }\n\n    pauseAnimation();\n  }, [animation, pauseAnimation]);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (wasPlaying.current) {\n      playAnimation();\n    }\n\n    wasPlaying.current = false;\n    isFrozen.current = false;\n  }, [playAnimation]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  useEffect(() => {\n    if (!animation) {\n      return;\n    }\n\n    if (play || playSegment) {\n      if (isFrozen.current) {\n        wasPlaying.current = true;\n      } else {\n        playAnimation(noLoop);\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isFrozen.current) {\n        wasPlaying.current = false;\n      } else {\n        pauseAnimation();\n      }\n    }\n  }, [animation, play, playSegment, noLoop, playAnimation, pauseAnimation]);\n\n  useHeavyAnimationCheck(freezeAnimation, unfreezeAnimation);\n  // Pausing frame may not happen in background\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n\n  const fullClassName = buildClassName('AnimatedSticker', className);\n\n  const style = size ? `width: ${size}px; height: ${size}px;` : undefined;\n\n  return (\n    <div\n      ref={container}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    />\n  );\n};\n\nexport default memo(AnimatedSticker);\n","import React, {\n  FC, memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageAudioCaption,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { renderWaveformToDataUri } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useMediaDownload from '../../hooks/useMediaDownload';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  onPlay: (messageId: number, chatId: number) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const playStateBeforeSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldDownload = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const { mediaData, downloadProgress } = useMediaWithDownloadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldDownload,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, play, pause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    origin,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const {\n    isDownloadStarted,\n    downloadProgress: directDownloadProgress,\n    handleDownloadClick,\n  } = useMediaDownload(getMessageMediaHash(message, 'download'), getMessageAudioCaption(message));\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    isDownloadStarted ? directDownloadProgress : (uploadProgress || downloadProgress),\n    isLoadingForPlaying || isDownloadStarted,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isPlaying, isUploading, message.id, message.chatId, onCancelUpload, onPlay, playPause, isActivated]);\n\n  useEffect(() => {\n    if (isPlaying && onReadMedia && isMediaUnread) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    playStateBeforeSeeking.current = isPlaying;\n    pause();\n    handleSeek(e);\n  }, [handleSeek, pause, isPlaying]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n    if (playStateBeforeSeeking.current) play();\n  }, [play]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function getFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function getSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const isOwn = isOwnMessage(message);\n  const renderedWaveform = useMemo(\n    () => voice && renderWaveform(\n      voice,\n      (isMediaUnread && !isOwn) ? 1 : playProgress,\n      isOwn,\n      theme,\n      seekerRef,\n    ),\n    [voice, isMediaUnread, isOwn, playProgress, theme],\n  );\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\" dir=\"auto\" title={getFirstLine()}>{renderText(getFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(lang, date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {withSeekline && (\n            <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n              <span className=\"duration with-seekline\" dir=\"auto\">\n                {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n              </span>\n              {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n            </div>\n          )}\n          {!withSeekline && getSecondLine()}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloadStarted ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloadStarted ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang, audio, duration, isPlaying, playProgress, bufferedProgress, seekerRef, (isDownloadStarted || isUploading),\n        date, transferProgress, onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && renderVoice(voice, renderedWaveform, playProgress, isMediaUnread)}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          <span className=\"bullet\">&bull;</span>\n          <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>{formatMediaDateTime(lang, date * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(voice: ApiVoice, renderedWaveform: any, playProgress: number, isMediaUnread?: boolean) {\n  return (\n    <div className=\"content\">\n      {renderedWaveform}\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction renderWaveform(\n  voice: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  theme: ISettings['theme'],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  const { waveform, duration } = voice;\n\n  if (!waveform) {\n    return undefined;\n  }\n\n  const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n  const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n  const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n  const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n  const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n  const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n  const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n  const { data: spikes, peak } = interpolateArray(decodedWaveform, spikesCount);\n  const { src, width, height } = renderWaveformToDataUri(spikes, playProgress, {\n    peak,\n    fillStyle: isOwn ? fillOwnColor : fillColor,\n    progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <img\n      src={src}\n      alt=\"\"\n      width={width}\n      height={height}\n      className=\"waveform\"\n      draggable={false}\n      ref={seekerRef as React.Ref<HTMLImageElement>}\n    />\n  );\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveformToDataUri(\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  const canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n\n  return {\n    src: canvas.toDataURL(),\n    width,\n    height,\n  };\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport { ApiUser, ApiChat, ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash, getChatTitle, isChatPrivate,\n  getUserFullName, isUserOnline, isDeletedUser, getUserColorKey, isChatWithRepliesBot,\n} from '../../modules/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useLang from '../../hooks/useLang';\n\nimport './Avatar.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  withOnlineStatus?: boolean;\n  chat?: ApiChat;\n  user?: ApiUser;\n  text?: string;\n  isSavedMessages?: boolean;\n  lastSyncTime?: number;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  text,\n  withOnlineStatus,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  let imageHash: string | undefined;\n\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat);\n    }\n  }\n\n  const dataUri = useMedia(imageHash, false, ApiMediaFormat.DataUri, lastSyncTime);\n  const { shouldRenderFullMedia, transitionClassNames } = useTransitionForMedia(dataUri, 'slow');\n\n  const lang = useLang();\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isReplies) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (shouldRenderFullMedia) {\n    content = <img src={dataUri} className={`${transitionClassNames} avatar-media`} alt=\"\" decoding=\"async\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && isUserOnline(user);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    withOnlineStatus && isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !shouldRenderFullMedia) && 'no-photo',\n  );\n\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, isSavedMessages || shouldRenderFullMedia);\n    }\n  }, [onClick, isSavedMessages, shouldRenderFullMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div className={fullClassName} onClick={handleClick} data-test-sender-id={IS_TEST ? senderId : undefined}>\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../modules/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isChatPrivate, isUserRightBanned, selectIsChatMuted,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'updateChatMutedState' | 'showNotification'>;\n\nconst ChatExtra: FC<OwnProps & StateProps & DispatchProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  loadFullUser,\n  showNotification,\n  updateChatMutedState,\n}) => {\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && !!formattedNumber.length && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && !!description.length && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem icon=\"mention\" multiline narrow ripple onClick={() => copy(link, lang('SetUrlPlaceholder'))}>\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadFullUser', 'updateChatMutedState', 'showNotification',\n  ]),\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isChatPrivate,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: number | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'leaveChannel' | 'deleteHistory' | 'deleteChannel' | 'deleteChatUser' | 'blockContact'\n)>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n  deleteChatUser,\n  blockContact,\n}) => {\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isChatPrivate(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions,\n    ['leaveChannel', 'deleteHistory', 'deleteChannel', 'deleteChatUser', 'blockContact']),\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, useEffect, useState, memo, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport download from '../../util/download';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const extension = getDocumentExtension(document) || '';\n  const { fileName, size, timestamp } = document;\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isDownloadAllowed, setIsDownloadAllowed] = useState(false);\n  const {\n    mediaData, downloadProgress,\n  } = useMediaWithDownloadProgress<ApiMediaFormat.BlobUrl>(\n    getMessageMediaHash(message, 'download'), !isDownloadAllowed, undefined, undefined, undefined, true,\n  );\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, isDownloadAllowed);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const handleClick = useCallback(() => {\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n    } else {\n      setIsDownloadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [withMediaViewer, isUploading, onCancelUpload, onMediaClick]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (isDownloadAllowed && mediaData) {\n      download(mediaData, fileName);\n      setIsDownloadAllowed(false);\n    }\n  }, [fileName, mediaData, isDownloadAllowed]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(previewData, 'slow');\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            {shouldRenderThumb && (\n              <img\n                src={thumbnailDataUri}\n                width={width}\n                height={height}\n                className=\"thumbnail\"\n                alt=\"\"\n              />\n            )}\n            {shouldRenderFullMedia && (\n              <img\n                src={previewData}\n                className={`full-media ${transitionClassNames}`}\n                width={width}\n                height={height}\n                alt=\"\"\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'openMediaViewer']),\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(mediaBlobUrl, 'slow');\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      {shouldRenderThumb && (\n        <img src={thumbDataUri} alt=\"\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img src={mediaBlobUrl} className={`${transitionClassNames} full-media`} alt=\"\" />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isChatPrivate } from '../../modules/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: number[];\n  selectedIds: number[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: number[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: number) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isChatPrivate(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isChatPrivate } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: number;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiUser, ApiChat, ApiMediaFormat, ApiPhoto,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash, isDeletedUser, getUserColorKey, getChatTitle, isChatPrivate, getUserFullName, isChatWithRepliesBot,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big' = 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const imageHash = getMediaHash();\n  const fullMediaData = useMedia(\n    imageHash,\n    false,\n    imageHash?.startsWith('avatar') ? ApiMediaFormat.DataUri : ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const avatarThumbnailData = useMedia(\n    !fullMediaData && isFirstPhoto ? getMediaHash('normal', true) : undefined,\n    false,\n    ApiMediaFormat.DataUri,\n    lastSyncTime,\n  );\n  const thumbDataUri = useBlurSync(!fullMediaData && photo && photo.thumbnail && photo.thumbnail.dataUri);\n  const imageSrc = fullMediaData || avatarThumbnailData || thumbDataUri;\n  const prevImageSrc = usePrevious(imageSrc);\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" decoding=\"async\" />;\n  } else if (!imageSrc && user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (!imageSrc && chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {prevImageSrc && imageSrc && prevImageSrc !== imageSrc && (\n        <img src={prevImageSrc} className=\"prev-avatar-media\" alt=\"\" decoding=\"async\" />\n      )}\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiChat } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  isSavedMessages?: boolean;\n  animationLevel: 0 | 1 | 2;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'connectionState'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  forceShowSelf,\n  user,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1 ? 'slide' : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Support for swipe gestures and closing on click\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState, user, chat, isSavedMessages, animationLevel, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\n\nimport './StickerButton.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  size: number;\n  observeIntersection: ObserveFn;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  onClick?: (arg: any) => void;\n  clickArg?: any;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton: FC<OwnProps> = ({\n  sticker, size, observeIntersection, noAnimate, title, className, onClick, clickArg, onUnfaveClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isAnimated && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isAnimationLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canAnimatedPlay = isAnimationLoaded && shouldPlay;\n\n  const {\n    shouldRenderThumb,\n    shouldRenderFullMedia: shouldRenderPreview,\n    transitionClassNames: previewTransitionClassNames,\n  } = useTransitionForMedia(previewBlobUrl || canAnimatedPlay, 'slow');\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  function handleClick() {\n    if (onClick) {\n      onClick(clickArg);\n    }\n  }\n\n  function handleUnfaveClick(e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    sticker.isAnimated && 'animated',\n    stickerSelector,\n    className,\n  );\n\n  const style = shouldRenderThumb && thumbDataUri ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      // @ts-ignore\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={handleClick}\n    >\n      {shouldRenderPreview && !canAnimatedPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      {/* fix for translation \"username _is_ typing\" */}\n      {lang(typingStatus.action).replace('{user}', '').trim()}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: number) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({ message, senderTitle, onMessageClick }) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(lang, message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {truncatedDescription && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {renderText(truncatedDescription)}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../modules/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS = 200;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '1258816259753933';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities: IOrganizedEntity[] = [];\n  const parsedNestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  parsedNestedEntities.forEach((parsedEntity) => {\n    let isChanged = false;\n\n    parsedEntity.organizedIndexes.forEach((organizedIndex) => {\n      if (!isChanged && !organizedIndexes.has(organizedIndex)) {\n        isChanged = true;\n      }\n\n      organizedIndexes.add(organizedIndex);\n    });\n\n    if (isChanged) {\n      nestedEntities.push(parsedEntity);\n    }\n  });\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntities = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntities.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntities.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['escape_html', 'emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['escape_html', 'emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useCallback } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<number, number>) {\n  const movesUp = useCallback((id: number) => orderDiffById[id] < 0, [orderDiffById]);\n  const movesDown = useCallback((id: number) => orderDiffById[id] > 0, [orderDiffById]);\n\n  const orderDiffIds = Object.keys(orderDiffById).map(Number);\n  const numberOfUp = orderDiffIds.filter(movesUp).length;\n  const numberOfDown = orderDiffIds.filter(movesDown).length;\n\n  return useCallback((chatId: number): ChatAnimationTypes => {\n    const orderDiff = orderDiffById[chatId];\n\n    if (orderDiff === 0) {\n      return ChatAnimationTypes.None;\n    }\n\n    if (\n      orderDiff === Infinity\n      || orderDiff === -Infinity\n      || (movesUp(chatId) && numberOfUp <= numberOfDown)\n      || (movesDown(chatId) && numberOfDown < numberOfUp)\n    ) {\n      return ChatAnimationTypes.Opacity;\n    }\n\n    return ChatAnimationTypes.Move;\n  }, [movesDown, movesUp, numberOfDown, numberOfUp, orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isChatPrivate,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: number;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  privateChatUser?: ApiUser;\n  actionTargetUserIds?: number[];\n  usersById?: Record<number, ApiUser>;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: number;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  privateChatUser,\n  actionTargetUserIds,\n  usersById,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    return actionTargetUserIds\n      ? actionTargetUserIds.map((userId) => usersById?.[userId]).filter<ApiUser>(Boolean as any)\n      : undefined;\n  }, [actionTargetUserIds, usersById]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  function handleChatFolderChange() {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    privateChatUser,\n    handleDelete,\n    handleChatFolderChange,\n    folderId,\n    isPinned,\n    isMuted,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderText(renderActionMessageText(\n            lang,\n            lastMessage,\n            actionOrigin,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderMessageSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isChatPrivate(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={privateChatUser}\n          withOnlineStatus\n          isSavedMessages={privateChatUser?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, privateChatUser))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted-chat\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta message={chat.lastMessage} outgoingStatus={lastMessageOutgoingStatus} />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(lang, message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(lang, message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { byId: usersById } = global.users;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n      ...(actionTargetUserIds && { usersById }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../modules/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser,\n} from '../../../api/types';\nimport { NotifyException, NotifySettings, SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID, IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport { getChatOrder, prepareChatList, prepareFolderListIds } from '../../../modules/helpers';\nimport {\n  selectChatFolder, selectNotifyExceptions, selectNotifySettings,\n} from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n  foldersDispatch?: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatsById: Record<number, ApiChat>;\n  usersById: Record<number, ApiUser>;\n  chatFolder?: ApiChatFolder;\n  listIds?: number[];\n  orderedPinnedIds?: number[];\n  lastSyncTime?: number;\n  notifySettings: NotifySettings;\n  notifyExceptions?: Record<number, NotifyException>;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'loadMoreChats' | 'preloadTopChatMessages' | 'preloadArchivedChats' | 'openChat' | 'openNextChat'\n)>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived',\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  chatFolder,\n  chatsById,\n  usersById,\n  listIds,\n  orderedPinnedIds,\n  lastSyncTime,\n  foldersDispatch,\n  notifySettings,\n  notifyExceptions,\n  onScreenSelect,\n  loadMoreChats,\n  preloadTopChatMessages,\n  preloadArchivedChats,\n  openChat,\n  openNextChat,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(chatsById, usersById, chatFolder, notifySettings, notifyExceptions)\n      : [listIds, orderedPinnedIds];\n  }, [folderType, chatFolder, chatsById, usersById, notifySettings, notifyExceptions, listIds, orderedPinnedIds]);\n\n  const [orderById, orderedIds] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = [...newChatArrays.pinnedChats, ...newChatArrays.otherChats];\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return order - (prevOrderById[id] !== undefined ? prevOrderById[id] : Infinity);\n    });\n  }, [orderById, prevOrderById]);\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  // TODO Refactor to not call `prepareChatList` twice\n  const chatArrays = viewportIds && prepareChatList(chatsById, viewportIds, currentPinnedIds, folderType);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n      preloadArchivedChats();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages, preloadArchivedChats]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + chatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {chatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {chatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isActive && orderedIds) {\n        if (IS_PWA && ((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n          const [, digit] = e.code.match(/Digit(\\d)/) || [];\n          if (!digit) return;\n\n          const position = Number(digit) - 1;\n          if (position > orderedIds.length - 1) return;\n\n          openChat({ id: orderedIds[position], shouldReplaceHistory: true });\n        }\n\n        if (e.altKey) {\n          const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n          if (!targetIndexDelta) return;\n\n          e.preventDefault();\n          openNextChat({ targetIndexDelta, orderedIds });\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      noScrollRestore\n    >\n      {viewportIds?.length && chatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      chatsById,\n      usersById,\n      lastSyncTime,\n      notifySettings: selectNotifySettings(global),\n      notifyExceptions: selectNotifyExceptions(global),\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadMoreChats',\n    'preloadTopChatMessages',\n    'preloadArchivedChats',\n    'openChat',\n    'openNextChat',\n  ]),\n)(ChatList));\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatPrivate,\n  isChatGroup,\n} from '../../../../modules/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<number, ApiChat>, usersById: Record<number, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isChatPrivate(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isChatPrivate(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  shouldSetFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: number;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage' | 'replyToNextMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  shouldSetFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n  replyToNextMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    // Avoid focusing during animation\n    if (inputRef.current!.closest('.from, .to')) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (e.metaKey && !html.length) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (!IS_TOUCH_ENV && (!textContent || !textContent.length)) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (shouldSetFocus) {\n      focusInput();\n    }\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage', 'replyToNextMessage']),\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, []);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, []);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, []);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = encodeURI(linkUrl.includes('://') ? linkUrl : `http://${linkUrl}`);\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../../../../api/types';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[_]{2}([^*\\n]+)[_]{2}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: number | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = Number((node as HTMLAnchorElement).dataset.userId);\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport useFlag from '../../../../hooks/useFlag';\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\ntry {\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\p{L}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  html: string,\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [keywords, setKeywords] = useState<string[]>();\n  const [byKeyword, setByKeyword] = useState<Record<string, Emoji[]>>({});\n  const [names, setNames] = useState<string[]>();\n  const [byName, setByName] = useState<Record<string, Emoji[]>>({});\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  const recentEmojis = useMemo(\n    () => {\n      if (!byId || !recentEmojiIds.length) {\n        return [];\n      }\n\n      return Object.values(pickTruthy(byId, recentEmojiIds));\n    },\n    [byId, recentEmojiIds],\n  );\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (!byId || isDisabled) {\n      return;\n    }\n\n    const emojis = Object.values(byId);\n\n    const byNative = buildCollectionByKey(emojis, 'native');\n    const baseEmojisByKeyword = baseEmojiKeywords\n      ? mapValues(baseEmojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n    const emojisByKeyword = emojiKeywords\n      ? mapValues(emojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n\n    setByKeyword({ ...baseEmojisByKeyword, ...emojisByKeyword });\n    setKeywords([...Object.keys(baseEmojisByKeyword), ...Object.keys(emojisByKeyword)]);\n\n    const emojisByName = emojis.reduce((result, emoji) => {\n      emoji.names.forEach((name) => {\n        if (!result[name]) {\n          result[name] = [];\n        }\n\n        result[name].push(emoji);\n      });\n\n      return result;\n    }, {} as Record<string, Emoji[]>);\n    setByName(emojisByName);\n    setNames(Object.keys(emojisByName));\n  }, [isDisabled, baseEmojiKeywords, byId, emojiKeywords]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || !keywords || !keywords.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = [];\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = recentEmojis;\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n      matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword, matchedKeywords))));\n\n      // Also search by names, which is useful for non-English languages\n      const matchedNames = names.filter((name) => name.startsWith(filter));\n      matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n      matched = unique(matched);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched.slice(0, EMOJIS_LIMIT));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, byKeyword, keywords, byName, names, html, isAllowed, markIsOpen,\n    recentEmojis, unmarkIsOpen, setShouldForceInsertEmoji,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${textEmoji}`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n","import {\n  useCallback, useEffect, useState, useMemo,\n} from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\p{L}\\\\p{M}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: number[],\n  currentUserId?: number,\n  usersById?: Record<number, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const topInlineBots = useMemo(() => {\n    return (topInlineBotIds || []).map((id) => usersById?.[id]).filter<ApiUser>(Boolean as any);\n  }, [topInlineBotIds, usersById]);\n\n  const getFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n    runThrottled(() => {\n      const inlineBots = (withInlineBots ? topInlineBots : []).filter((inlineBot) => {\n        return !filter || searchUserName(filter, inlineBot);\n      });\n\n      const chatMembers = (groupChatMembers || [])\n        .map(({ userId }) => usersById[userId])\n        .filter((user) => {\n          if (!user || user.id === currentUserId) {\n            return false;\n          }\n\n          return !filter || searchUserName(filter, user);\n        });\n\n      setUsersToMention(unique(inlineBots.concat(chatMembers)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds, topInlineBots, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      getFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredUsers, markIsOpen, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, memo, useState,\n} from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={confirmHandler}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: any;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport React, {\n  FC, useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: any;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    buttonRef,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    focus,\n    destructive,\n    multiline,\n    isStatic,\n    contextActions,\n    onMouseDown,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      // @ts-ignore\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role=\"button\"\n        ref={buttonRef}\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: any;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: any;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  title,\n  className,\n  isOpen,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  children,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  const { forceClose } = useHistoryBack(isOpen, onClose);\n\n  // For modals that are closed by unmounting without changing `isOpen` to `false`\n  useEffect(() => {\n    return () => {\n      if (isOpen) {\n        forceClose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\">\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import { FC, useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: any;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useLayoutEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  active?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  active,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (!active || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tab = tabRef.current!;\n    const indicator = tab.querySelector('i')!;\n    const prevTab = tab.parentElement!.children[previousActiveTab];\n    if (!prevTab) {\n      return;\n    }\n    const currentIndicator = prevTab.querySelector('i')!;\n\n    currentIndicator.classList.remove('animate');\n    indicator.classList.remove('animate');\n\n    // We move and resize our indicator so it repeats the position and size of the previous one.\n    const shiftLeft = currentIndicator.parentElement!.offsetLeft - indicator.parentElement!.offsetLeft;\n    const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n    indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n    // 3 AFs needed here to synchronize animations with Transition component\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          // Now we remove the transform to let it animate to its own position and size.\n          indicator.classList.add('animate');\n          indicator.style.transform = 'none';\n        });\n      });\n    });\n  }, [active, previousActiveTab]);\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName('Tab', className, active && 'active')}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && 'active')}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </button>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    if (container.scrollWidth <= container.offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.querySelector('.Tab.active') as HTMLElement | null;\n    if (activeTabElement) {\n      const newLeft = activeTabElement.offsetLeft - (container.offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n      // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n      if (Math.abs(newLeft - container.scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n        return;\n      }\n\n      fastSmoothScrollHorizontal(container, newLeft);\n    }\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          active={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { waitForAnimationEnd } from '../../util/cssAnimationEndListeners';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => any;\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-reversed' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  id?: string;\n  className?: string;\n  onStart?: () => void;\n  onStop?: () => void;\n  children: ChildrenFn;\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst Transition: FC<OwnProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup || (cleanupExceptionKey !== undefined && cleanupExceptionKey === prevActiveKey)) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      childElements[0].classList.add('active');\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle('active', i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove('active');\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    let dispatchHeavyAnimationStop: NoneToVoidFunction;\n    if (animationLevel > 0) {\n      dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n    }\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      if (onStart) {\n        onStart();\n      }\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle('active', i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>('.active');\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          if (dispatchHeavyAnimationStop) {\n            dispatchHeavyAnimationStop();\n          }\n\n          cleanup();\n\n          if (onStop) {\n            onStop();\n          }\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      currentKeyRef.current = activeKey;\n\n      if (animationLevel > 0 && watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>('.active')\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function'\n        ? <div key={key}>{render(key === activeKey, key === prevActiveKey, activeKey)}</div>\n        : undefined\n    );\n  });\n\n  const fullClassName = buildClassName(\n    'Transition',\n    className,\n    name,\n  );\n\n  return (\n    <div ref={containerRef} id={id} className={fullClassName}>\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: number[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\n\nimport { register, Track } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nexport default (\n  trackId: string,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, origin, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay':\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          break;\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          setPositionState({\n            duration: proxy.duration,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play, pause, setCurrentTime, proxy, destroy, setVolume, setCurrentOrigin, stop,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      setCurrentOrigin(origin);\n      play(src);\n    }\n  }, [src, origin, play, setCurrentOrigin]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getDispatch().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useBackgroundMode(\n  onBlur?: AnyToVoidFunction,\n  onFocus?: AnyToVoidFunction,\n) {\n  useEffect(() => {\n    if (onBlur && !document.hasFocus()) {\n      onBlur();\n    }\n\n    if (onBlur) {\n      window.addEventListener('blur', onBlur);\n    }\n\n    if (onFocus) {\n      window.addEventListener('focus', onFocus);\n    }\n\n    return () => {\n      if (onFocus) {\n        window.removeEventListener('focus', onFocus);\n      }\n\n      if (onBlur) {\n        window.removeEventListener('blur', onBlur);\n      }\n    };\n  }, [onBlur, onFocus]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport {\n  isChatArchived, getCanDeleteChat, isChatPrivate, isChatChannel,\n} from '../modules/helpers';\nimport useLang from './useLang';\n\nexport default ({\n  chat,\n  privateChatUser,\n  handleDelete,\n  handleChatFolderChange,\n  folderId,\n  isPinned,\n  isMuted,\n}: {\n  chat: ApiChat | undefined;\n  privateChatUser: ApiUser | undefined;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getDispatch();\n\n    const actionAddToFolder = {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return [actionPin, actionAddToFolder];\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isChatPrivate(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    return [\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      ...(!privateChatUser?.isSelf ? [\n        actionMute,\n        actionArchive,\n      ] : []),\n      actionDelete,\n    ];\n  }, [\n    chat, isPinned, lang, isInSearch, isMuted, handleDelete, handleChatFolderChange, privateChatUser?.isSelf, folderId,\n  ]);\n};\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport { IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction checkIsDisabledForMobile() {\n  return IS_SINGLE_COLUMN_LAYOUT\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    document.body.classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        e.stopPropagation();\n      }, true);\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    let horizontalPostition: 'left' | 'right';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPostition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPostition = 'right';\n      x -= 3;\n    } else {\n      horizontalPostition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPostition);\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n\n    const left = horizontalPostition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : Math.max((x - triggerRect.left), menuRect.width + MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    const top = Math.min(\n      rootRect.height - triggerRect.top + triggerRect.height - MENU_POSITION_BOTTOM_MARGIN,\n      y - triggerRect.top,\n    );\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN;\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n};\n","import usePrevious from './usePrevious';\n\nexport default function useCurrentOrPrev<T extends any>(\n  current: T, shouldSkipUndefined = false, shouldForceCurrent = false,\n): T | undefined {\n  const prev = usePrevious(current, shouldSkipUndefined);\n\n  // eslint-disable-next-line no-null/no-null\n  return shouldForceCurrent || (current !== null && current !== undefined) ? current : prev;\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: number,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nexport default (\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: number[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n  forceFullPreload = false,\n): [number[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: number;\n  }>();\n\n  const viewportIdsRef = useRef<number[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, listIds[0], LoadMoreDirection.Forwards, listSlice);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  }\n\n  useEffect(() => {\n    if (listIds && !isDisabled && loadMoreBackwards && forceFullPreload) {\n      const viewportIds = viewportIdsRef.current!;\n      loadMoreBackwards({ offsetId: viewportIds[viewportIds.length - 1] });\n    }\n  }, [listIds, isDisabled, loadMoreBackwards, forceFullPreload]);\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice(\n  sourceIds: number[],\n  offsetId = 0,\n  direction: LoadMoreDirection,\n  listSlice: number,\n) {\n  const { length } = sourceIds;\n  const index = sourceIds.indexOf(offsetId);\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nconst AUTO_UNFREEZE_TIMEOUT = 2000;\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n  noAutoFreeze = false,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n  noAutoFreeze?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const autoUnfreezeTimeoutRef = useRef<number>();\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n\n    if (noAutoFreeze) {\n      return;\n    }\n\n    if (autoUnfreezeTimeoutRef.current) {\n      clearTimeout(autoUnfreezeTimeoutRef.current);\n      autoUnfreezeTimeoutRef.current = undefined;\n    }\n\n    // Make sure to unfreeze even if unfreeze callback was not called (which was some hardly-reproducible bug)\n    autoUnfreezeTimeoutRef.current = window.setTimeout(() => {\n      autoUnfreezeTimeoutRef.current = undefined;\n\n      if (!freezeFlagsRef.current) {\n        return;\n      }\n\n      freezeFlagsRef.current = 1;\n      unfreeze();\n    }, AUTO_UNFREEZE_TIMEOUT);\n  }, [noAutoFreeze, unfreeze]);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T, debugKey?: string) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n","import { useEffect } from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | false | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!noLoad && mediaHash && !mediaData) {\n      const startedAt = Date.now();\n\n      mediaLoader.fetch(mediaHash, mediaFormat).then(() => {\n        const spentTime = Date.now() - startedAt;\n        if (!delay || spentTime >= delay) {\n          forceUpdate();\n        } else {\n          setTimeout(forceUpdate, delay - spentTime);\n        }\n      });\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, delay]);\n\n  return mediaData;\n};\n","import React, { useCallback, useEffect, useState } from '../lib/teact/teact';\n\nimport useMediaWithDownloadProgress from './useMediaWithDownloadProgress';\nimport download from '../util/download';\n\nexport default function useMediaDownload(\n  mediaHash?: string,\n  fileName?: string,\n) {\n  const [isDownloadStarted, setIsDownloadStarted] = useState(false);\n\n  const { mediaData, downloadProgress } = useMediaWithDownloadProgress(mediaHash, !isDownloadStarted);\n\n  // Download with browser when fully loaded\n  useEffect(() => {\n    if (isDownloadStarted && mediaData) {\n      download(mediaData, fileName!);\n      setIsDownloadStarted(false);\n    }\n  }, [fileName, mediaData, isDownloadStarted]);\n\n  // Cancel download on source change\n  useEffect(() => {\n    setIsDownloadStarted(false);\n  }, [mediaHash]);\n\n  const handleDownloadClick = useCallback((e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    setIsDownloadStarted((isAllowed) => !isAllowed);\n  }, []);\n\n  return {\n    isDownloadStarted,\n    downloadProgress,\n    handleDownloadClick,\n  };\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const [downloadProgress, setDownloadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (!delay || (Date.now() - startedAtRef.current! > delay)) {\n        setDownloadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setDownloadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setDownloadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setDownloadProgress(0);\n    }\n  }, [handleProgress, noLoad]);\n\n  return { mediaData, downloadProgress };\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(true);\n\n  useEffect(() => {\n    if (isOpen) {\n      isMouseInside.current = true;\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\n\nimport useShowTransition from './useShowTransition';\n\nconst SPEED = {\n  fast: 200,\n  slow: 350,\n};\n\nexport default (mediaData?: any, speed: keyof typeof SPEED = 'fast', noAnimate = false) => {\n  const isMediaLoaded = Boolean(mediaData);\n  const willAnimate = !useRef(isMediaLoaded).current && !noAnimate;\n  const [shouldRenderThumb, setShouldRenderThumb] = useState(!isMediaLoaded);\n\n  const {\n    shouldRender: shouldRenderFullMedia,\n    transitionClassNames,\n  } = useShowTransition(isMediaLoaded, undefined, !willAnimate, speed);\n\n  useEffect(() => {\n    if (shouldRenderFullMedia) {\n      if (willAnimate) {\n        setTimeout(() => {\n          setShouldRenderThumb(false);\n        }, SPEED[speed]);\n      } else {\n        setShouldRenderThumb(false);\n      }\n    }\n  }, [willAnimate, shouldRenderFullMedia, speed]);\n\n  return {\n    shouldRenderThumb,\n    shouldRenderFullMedia,\n    transitionClassNames,\n  };\n};\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, parseMessageKey } from '../modules/helpers';\nimport { fastRaf } from './schedulers';\n\ntype Handler = (eventName: string, e: Event) => void;\ntype TrackId = string; // `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  origin: AudioOrigin;\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<string, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: string | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  origin: AudioOrigin,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    origin,\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const track = tracks.get(trackId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return;\n\n  const nextTrackId = findNextInQueue(queue, trackId, track.origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getDispatch().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (currentTrack) nextTrack.origin = currentTrack.origin; // Preserve origin\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: string,\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, origin, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n    },\n\n    setCurrentOrigin(audioOrigin: AudioOrigin) {\n      tracks.get(trackId)!.origin = audioOrigin;\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin);\n    },\n\n    isFirst() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  if (track.type === 'audio') {\n    return musicQueue;\n  }\n\n  if (track.type === 'voice') {\n    return voiceQueue;\n  }\n  return undefined;\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter((el) => el !== trackId);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter((el) => el !== trackId);\n  }\n}\n\nfunction findNextInQueue(queue: TrackId[], current: TrackId, origin: AudioOrigin, isReverseOrder?: boolean) {\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(current);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(current).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(current);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0];\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nconst IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialSwipeAxis = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: true });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","import { DEBUG } from '../config';\n\nexport const CLIPBOARD_ITEM_SUPPORTED = navigator.clipboard && window.ClipboardItem;\n\nconst textCopyEl = document.createElement('textarea');\ntextCopyEl.setAttribute('readonly', '');\ntextCopyEl.tabIndex = -1;\ntextCopyEl.className = 'visually-hidden';\n\nexport const copyTextToClipboard = (str: string): void => {\n  textCopyEl.value = str;\n  document.body.appendChild(textCopyEl);\n  const selection = document.getSelection();\n\n  if (selection) {\n    // Store previous selection\n    const rangeToRestore = selection.rangeCount > 0 && selection.getRangeAt(0);\n    textCopyEl.select();\n    document.execCommand('copy');\n    // Restore the original selection\n    if (rangeToRestore) {\n      selection.removeAllRanges();\n      selection.addRange(rangeToRestore);\n    }\n  }\n\n  document.body.removeChild(textCopyEl);\n};\n\nexport const copyImageToClipboard = (imageUrl?: string) => {\n  if (!imageUrl) return;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const imageEl = new Image();\n  imageEl.onload = (e: Event) => {\n    if (ctx && e.currentTarget) {\n      const img = e.currentTarget as HTMLImageElement;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob(copyBlobToClipboard, 'image/png', 1);\n    }\n  };\n\n  imageEl.src = imageUrl;\n};\n\nasync function copyBlobToClipboard(pngBlob: Blob | null) {\n  if (!pngBlob || !CLIPBOARD_ITEM_SUPPORTED) {\n    return;\n  }\n\n  try {\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [pngBlob.type]: pngBlob,\n      }),\n    ]);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","export default function download(url: string, filename: string) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  link.click();\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n    const currentPath = path * (1 - transition(t));\n\n    container.scrollTop = Math.round(target - currentPath);\n\n    isAnimating = t < 1;\n\n    if (!isAnimating) {\n      onHeavyAnimationStop();\n    }\n\n    return isAnimating;\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { IS_IOS } from './environment';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  // Native way seems to be smoother in Chrome\n  if (!IS_IOS) {\n    container.scrollTo({\n      left,\n      ...(duration && { behavior: 'smooth' }),\n    });\n  } else {\n    scrollWithJs(container, left, duration);\n  }\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata !== undefined ? metadata : null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    if (mediaSession.setPositionState) mediaSession.setPositionState(undefined);\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || !state.position || !state.duration) return;\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.setPositionState) {\n    mediaSession.setPositionState(state);\n  }\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setMicrophoneActive) {\n    // @ts-ignore\n    mediaSession.setMicrophoneActive(active);\n  }\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setCameraActive) {\n    // @ts-ignore\n    mediaSession.setCameraActive(active);\n  }\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import { IS_IOS } from './environment';\n\nexport default (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n","import { DEBUG } from '../config';\n\nexport default (mediaEl: HTMLMediaElement) => {\n  mediaEl.play().catch((err) => {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn(err);\n    }\n  });\n};\n"],"names":["WIDTH","large","medium","small","sticker","size","observeIntersection","lastSyncTime","forceLoadPreview","ref","useRef","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useTransitionForMedia","mediaData","isMediaLoaded","Boolean","playKey","setPlayKey","useState","String","Math","random","handleClick","useCallback","width","style","className","onClick","src","LIKE_STICKER_ID","undefined","alt","key","animationData","quality","play","noLoop","onLoad","lottiePromise","RLottie","async","ensureLottie","default","setTimeout","memo","playSegment","speed","isLowPriority","animation","setAnimation","container","wasPlaying","isFrozen","playRef","current","playSegmentRef","useEffect","exec","newAnimation","setSpeed","then","fastRaf","destroy","playAnimation","shouldRestart","goToAndPlay","pauseAnimation","pause","freezeAnimation","isPlaying","unfreezeAnimation","unfreezeAnimationOnRaf","useHeavyAnimationCheck","useBackgroundMode","fullClassName","buildClassName","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedProgress","seekerRef","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","onPlay","onReadMedia","onCancelUpload","onDateClick","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","playStateBeforeSeeking","lang","useLang","isRtl","isActivated","setIsActivated","shouldDownload","coverHash","getMessageMediaHash","coverBlobUrl","downloadProgress","useMediaWithDownloadProgress","getMessageMediaFormat","handleForcePlay","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","withSeekline","isDownloadStarted","directDownloadProgress","handleDownloadClick","useMediaDownload","getMessageAudioCaption","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","max","min","handleStartSeek","button","handleStopSeek","handleDateClick","getFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","isOwn","isOwnMessage","renderedWaveform","useMemo","waveform","fillColor","fillOwnColor","progressFillColor","progressFillOwnColor","durationFactor","spikesCount","round","decodedWaveform","encoded5bit","bitsCount","length","valuesCount","floor","result","Array","bitsData","i","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","data","spikes","peak","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","interpolateArray","height","progress","fillStyle","progressFillStyle","canvas","document","createElement","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","toDataURL","renderWaveformToDataUri","draggable","renderWaveform","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","getSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","renderVoice","chat","user","text","withOnlineStatus","isSavedMessages","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","imageHash","getChatAvatarHash","shouldRenderFullMedia","decoding","userFullName","getUserFullName","getFirstLetters","getChatTitle","isChatPrivate","isOnline","isUserOnline","getUserColorKey","senderId","IS_TEST","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","selectChat","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","setGlobal","actions","pick","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","header","isText","smaller","withDate","datetime","sender","onMediaClick","extension","getDocumentExtension","timestamp","withMediaViewer","mediaType","isDownloadAllowed","setIsDownloadAllowed","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","isAllowed","download","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","shouldRenderThumb","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","status","idPrefix","mediaBlobUrl","getMessageVideo","isGif","Keys","activeKey","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","map","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","noStatusOrTyping","fullName","getUserStatus","photo","isFirstPhoto","isRepliesChat","getMediaHash","forceAvatar","hash","fullMediaData","startsWith","avatarThumbnailData","useBlurSync","imageSrc","prevImageSrc","usePrevious","Spinner","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","renderPhoto","isVerifiedIconShown","_","renderPhotoTabs","Transition","type","VerifiedIcon","noAnimate","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isAnimated","markLoaded","unmarkLoaded","canAnimatedPlay","shouldRenderPreview","previewTransitionClassNames","emoji","onMouseDown","preventMessageInputBlurWithBubbling","preventDefault","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","messageText","getMessageSummaryText","siteName","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","calculateDimensions","getAvailableHeight","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","availableWidth","availableHeight","mediaWidth","mediaHeight","calculatedWidth","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","rawText","getMessageText","entities","renderTextWithEntities","organizeEntity","index","organizedEntityIndexes","offset","organizedIndexes","Set","has","nestedEntities","filter","parsedEntity","isChanged","organizedIndex","add","organizeEntities","organizedEntities","organizedEntity","shouldRenderAsHtml","renderMessagePart","deleteLineBreakAfterPre","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","substring","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","ApiMessageEntityTypes","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","getLinkUrl","processEntityAsHtml","entityText","handleBotCommandClick","handleHashtagClick","href","target","rel","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","getDispatch","sendBotCommand","command","innerText","setLocalTextSearchQuery","query","searchTextMessagesLocal","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","renderContent","unreadMentionsCount","formatIntegerCompact","ShowTransition","isCustom","lastMessage","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","byId","usersById","users","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","privateChatUser","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","useLayoutEffect","Opacity","opacity","classList","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","contextActions","useChatContextActions","handleDelete","handleChatFolderChange","ListItem","Avatar","LastMessageMeta","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","blobUrl","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","FolderTypeToListType","chats","listIds","chatsById","orderedPinnedIds","listType","notifySettings","notifyExceptions","isActive","loadMoreChats","preloadTopChatMessages","preloadArchivedChats","openNextChat","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","newChatArrays","prepareChatList","singleList","pinnedChats","otherChats","newOrderedIds","reduce","acc","prevOrderById","orderDiffById","mapValues","order","Infinity","loadMoreOfType","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","chatArrays","getAnimationType","movesUp","movesDown","orderDiffIds","Object","keys","Number","numberOfUp","numberOfDown","None","useChatAnimationType","handleKeyDown","IS_PWA","IS_MAC_OS","metaKey","ctrlKey","code","digit","match","position","altKey","targetIndexDelta","addEventListener","removeEventListener","InfiniteScroll","preloadBackwards","noFastList","viewportOffset","pinnedOffset","IS_ANDROID","CHAT_HEIGHT_PX","teactFastList","teactOrderKey","getChatOrder","renderChats","Loading","getSenderName","getSenderTitle","isChatGroup","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","from","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","shouldSetFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","closest","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","onKeyDown","shiftKey","handleKeyUp","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onContextMenu","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","fragmentEl","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","getSelectedText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","some","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","addRange","restoreSelection","handler","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","textIndex","recursionDeepness","addEntity","node","nodeName","anchor","dataset","entityType","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","childNodes","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RegExp","useEmojiTooltip","recentEmojiIds","onUpdateHtml","baseEmojiKeywords","emojiKeywords","isDisabled","markIsOpen","unmarkIsOpen","setById","keywords","setKeywords","byKeyword","setByKeyword","names","setNames","byName","setByName","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","MEMO_EMPTY_ARRAY","recentEmojis","values","pickTruthy","emojis","uncompressEmoji","ensureEmojiData","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","emojisByName","getEmojiCode","forceSend","endsWith","matched","matchedKeywords","keyword","sort","concat","flatten","matchedNames","unique","insertEmoji","textEmoji","isForce","atIndex","lastIndexOf","messageInput","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","searchUserName","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","topInlineBots","getFilteredUsers","withInlineBots","inlineBots","inlineBot","chatMembers","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","options","selected","disabled","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","onEnter","split","textPart","children","buttonClassName","tabIndex","itemSelector","sensitiveArea","noScrollRestoreOnTop","cacheBuster","stateRef","loadMoreBackwards","loadMoreForwards","noScroll","LoadMoreDirection","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","scrollTop","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","buttonRef","destructive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","positionX","positionY","menuStyle","useContextMenuPosition","handleMouseDown","role","autoClose","hasCloseButton","noBackdrop","shouldSkipHistoryAnimations","modalRef","onEsc","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","trapFocus","forceClose","useHistoryBack","useEffectWithPrevDeps","prevIsOpen","body","dispatchHeavyAnimationEvent","Portal","containerId","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","appendChild","TeactDOM","removeChild","RADIUSES","s","m","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","parentContainerClassName","focused","onReset","onFocus","onBlur","isInputFocused","markInputFocused","unmarkInputFocused","prevChildren","fromChildrenRef","noAnimation","onCheck","active","badgeCount","isBadgeActive","previousActiveTab","tabRef","tab","indicator","prevTab","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","newLeft","fastSmoothScrollHorizontal","CLEANED_UP","Symbol","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","getGlobal","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","childElements","isBackwards","prevActiveIndex","activeIndex","HTMLElement","dispatchHeavyAnimationStop","onAnimationEnd","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","registerMediaSession","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","isFinite","setPositionState","playbackRate","paused","updateMetadata","setVolume","setCurrentOrigin","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","hasFocus","cache","Map","blurredRef","img","Image","imgToCanvas","fastBlur","blurredAsync","get","onload","blurredDataUri","clear","set","useBlur","noInitiallyBuffered","setIsBuffered","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","buffered","end","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","canvasRef","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","isInSearch","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionDelete","getCanDeleteChat","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","touches","cancelClickOnce","stopImmediatePropagation","emulateContextMenuEvent","passive","extraPaddingX","extraTopPadding","setPositionX","setPositionY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","rootRect","horizontalPostition","menuMaxHeight","useCurrentOrPrev","shouldSkipUndefined","shouldForceCurrent","prev","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","deltaX","deltaY","listSlice","forceFullPreload","lastParamsRef","viewportIdsRef","newViewportIds","getViewportSlice","prevListIds","prevIsDisabled","offsetId","areSortedArraysEqual","areSomeLocal","areAllLocal","sourceIds","indexForDirection","to","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","noAutoFreeze","rootCallback","rootCallbackRef","freezeFlagsRef","autoUnfreezeTimeoutRef","onUnfreezeRef","unfreeze","freeze","observer","disconnect","callbacks","observe","targetCallback","entriesAccumulator","observerCallbackSync","entries","entry","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","mediaHash","noLoad","mediaFormat","startedAt","Date","now","spentTime","setIsDownloadStarted","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setDownloadProgress","startedAtRef","handleProgress","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","SPEED","fast","slow","willAnimate","setShouldRenderThumb","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","track","queue","getTrackQueue","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","safePlay","stopCurrentAudio","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","audioOrigin","fastSeek","volume","shouldRemoveFromQueue","h","el","removeFromQueue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","diff","localeCompare","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","excludedClosestSelector","onMove","pageX","pageY","withCursor","scrollable","overflow","dragOffsetX","dragOffsetY","shouldPreventScroll","innerWidth","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","CLIPBOARD_ITEM_SUPPORTED","navigator","clipboard","ClipboardItem","textCopyEl","str","rangeToRestore","select","copyImageToClipboard","imageUrl","imageEl","toBlob","copyBlobToClipboard","pngBlob","write","DEBUG","console","waitForTransitionEnd","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","filename","click","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","FocusDirection","calculateScrollFrom","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","containerWidth","animate","scrollTo","behavior","force","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","audioEl","patchedForSafari","patchForSafariInProgress","once","mediaEl","catch"],"sourceRoot":""}