{"version":3,"file":"1989.b922d3d8db8619e598df.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useVideoAutoPause.ts","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInterval.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/util/resetScroll.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { AnimationLevel } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { ANIMATION_LEVEL_MAX, IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLang from '../../hooks/useLang';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useVideoAutoPause from '../middle/message/hooks/useVideoAutoPause';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\n\nimport './Avatar.scss';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  noLoop?: boolean;\n  animationLevel?: AnimationLevel;\n  lastSyncTime?: number;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  noLoop,\n  lastSyncTime,\n  animationLevel,\n  observeIntersection,\n  onClick,\n}) => {\n  const { loadFullUser } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const shouldShowVideo = isIntersecting && animationLevel === ANIMATION_LEVEL_MAX && withVideo && user?.isPremium\n    && user?.hasVideoAvatar;\n  const profilePhoto = user?.fullInfo?.profilePhoto;\n  const shouldLoadVideo = shouldShowVideo && profilePhoto?.isVideo;\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n    }\n\n    if (shouldLoadVideo) {\n      videoHash = getChatAvatarHash(user!, undefined, 'video');\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  const shouldPlayVideo = Boolean(isIntersecting && videoBlobUrl);\n\n  const { transitionClassNames } = useShowTransition(hasBlobUrl, undefined, hasBlobUrl, 'slow');\n\n  useVideoAutoPause(videoRef, shouldPlayVideo);\n  useVideoCleanup(videoRef, [shouldPlayVideo]);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video || !videoBlobUrl) return undefined;\n\n    const returnToStart = () => {\n      videoLoopCountRef.current += 1;\n      if (videoLoopCountRef.current >= LOOP_COUNT || noLoop) {\n        video.style.display = 'none';\n      } else {\n        video.play();\n      }\n    };\n\n    video.addEventListener('ended', returnToStart);\n    return () => video.removeEventListener('ended', returnToStart);\n  }, [noLoop, videoBlobUrl]);\n\n  const userId = user?.id;\n  useEffect(() => {\n    if (shouldShowVideo && !profilePhoto) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, profilePhoto, userId, shouldShowVideo]);\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-saved-messages')} aria-label={author} />;\n  } else if (isDeleted) {\n    content = <i className={buildClassName(cn.icon, 'icon-avatar-deleted-account')} aria-label={author} />;\n  } else if (isReplies) {\n    content = <i className={buildClassName(cn.icon, 'icon-reply-filled')} aria-label={author} />;\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <video\n            ref={videoRef}\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media')}\n            muted\n            autoPlay\n            disablePictureInPicture\n            playsInline\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  }, [onClick, hasMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import { useCallback, useRef } from '../../../../lib/teact/teact';\n\nimport { fastRaf } from '../../../../util/schedulers';\nimport safePlay from '../../../../util/safePlay';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useHeavyAnimationCheck from '../../../../hooks/useHeavyAnimationCheck';\n\nexport default function useVideoAutoPause(playerRef: { current: HTMLVideoElement | null }, canPlay: boolean) {\n  const wasPlaying = useRef(playerRef.current?.paused);\n  const canPlayRef = useRef();\n  canPlayRef.current = canPlay;\n\n  const freezePlaying = useCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    wasPlaying.current = !playerRef.current.paused;\n\n    if (wasPlaying.current) {\n      playerRef.current.pause();\n    }\n  }, [playerRef]);\n\n  const unfreezePlaying = useCallback(() => {\n    if (\n      playerRef.current && wasPlaying.current && canPlayRef.current\n      // At this point HTMLVideoElement can be unmounted from the DOM\n      && document.body.contains(playerRef.current)\n    ) {\n      safePlay(playerRef.current);\n    }\n  }, [playerRef]);\n\n  const unfreezePlayingOnRaf = useCallback(() => {\n    fastRaf(unfreezePlaying);\n  }, [unfreezePlaying]);\n\n  useBackgroundMode(freezePlaying, unfreezePlayingOnRaf);\n  useHeavyAnimationCheck(freezePlaying, unfreezePlaying);\n}\n","import type { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/environment';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (withAbsolutePositioning || noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n    >\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit(global: GlobalState, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  const value = limits[limit][isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit(global: GlobalState, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    lastParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  } else if (!listIds) {\n    viewportIdsRef.current = undefined;\n  }\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","import { IS_IOS } from './environment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n"],"names":["cn","createClassNameBuilder","media","icon","memo","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","noLoop","lastSyncTime","animationLevel","observeIntersection","onClick","loadFullUser","getActions","ref","useRef","videoRef","videoLoopCountRef","isIntersecting","useIsIntersecting","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","imageHash","videoHash","shouldShowVideo","ANIMATION_LEVEL_MAX","isPremium","hasVideoAvatar","profilePhoto","fullInfo","shouldLoadVideo","isVideo","shouldFetchBig","getChatAvatarHash","undefined","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useShowTransition","useVideoAutoPause","useVideoCleanup","useEffect","video","current","returnToStart","style","display","play","addEventListener","removeEventListener","userId","lang","useLang","content","author","getUserFullName","getChatTitle","buildClassName","src","alt","decoding","muted","autoPlay","disablePictureInPicture","playsInline","userFullName","getFirstLetters","title","isUserId","isOnline","isUserOnline","fullClassName","getUserColorKey","hasMedia","handleClick","useCallback","e","senderId","IS_TEST","renderText","playerRef","canPlay","wasPlaying","paused","canPlayRef","freezePlaying","pause","unfreezePlaying","document","body","contains","safePlay","unfreezePlayingOnRaf","fastRaf","useBackgroundMode","useHeavyAnimationCheck","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","children","onLoadMore","onScroll","onKeyDown","onDragOver","onDragLeave","containerRef","stateRef","loadMoreBackwards","loadMoreForwards","useMemo","debounce","noScroll","direction","LoadMoreDirection","length","scrollHeight","clientHeight","useLayoutEffect","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","dialogRef","isOpen","header","hasCloseButton","noBackdrop","onClose","onCloseAnimationEnd","onEnter","shouldSkipHistoryAnimations","shouldRender","modalRef","captureKeyboardListeners","onEsc","element","handleKeyDown","key","preventDefault","stopPropagation","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","shiftKey","focus","trapFocus","useHistoryBack","isActive","onBack","useEffectWithPrevDeps","prevIsOpen","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","tabIndex","role","Button","round","color","ariaLabel","containerId","elementRef","createElement","querySelector","add","appendChild","TeactDOM","removeChild","selectCurrentLimit","global","limit","appConfig","DEFAULT_LIMITS","selectIsCurrentUserPremium","limits","value","selectPremiumLimit","getViewportSlice","sourceIds","listSlice","offsetId","index","indexOf","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","listIds","isDisabled","lastParamsRef","viewportIdsRef","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","areSortedArraysEqual","getMore","viewportIds","callback","delay","noFirst","savedCallback","setInterval","clearInterval","dependencies","videoEl","load","patchChromiumScroll","forceReflow","IS_IOS","overflow"],"sourceRoot":""}