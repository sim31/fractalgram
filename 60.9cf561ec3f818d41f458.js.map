{"version":3,"file":"60.9cf561ec3f818d41f458.js","mappings":"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G,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAE5qlgC,SAAS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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/AnimatedSticker.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/parseMessageInput.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/helpers/searchUserName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBackgroundMode.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useCurrentOrPrev.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useMedia.ts","webpack://telegram-t/./src/hooks/useMediaDownload.ts","webpack://telegram-t/./src/hooks/useMediaWithDownloadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useTransitionForMedia.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/clipboard.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/resetScroll.ts","webpack://telegram-t/./src/util/safePlay.ts"],"sourcesContent":["import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n};\n\nconst QUALITY = 1;\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const { transitionClassNames } = useTransitionForMedia(previewBlobUrl, 'slow');\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} className={sticker.id === LIKE_STICKER_ID ? 'like-sticker-thumb' : undefined} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, {\n  FC, useEffect, useRef, memo, useCallback, useState,\n} from '../../lib/teact/teact';\n\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useHeavyAnimationCheck from '../../hooks/useHeavyAnimationCheck';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\n\ntype OwnProps = {\n  className?: string;\n  id: string;\n  animationData: AnyLiteral;\n  play?: boolean | string;\n  playSegment?: [number, number];\n  speed?: number;\n  noLoop?: boolean;\n  size: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  onLoad?: NoneToVoidFunction;\n};\n\ntype RLottieClass = typeof import('../../lib/rlottie/RLottie').default;\ntype RLottieInstance = import('../../lib/rlottie/RLottie').default;\nlet lottiePromise: Promise<RLottieClass>;\nlet RLottie: RLottieClass;\n\n// Time supposed for judges to measure \"Transferred Size\" in Dev Tools\nconst LOTTIE_LOAD_DELAY = 5000;\n\nasync function ensureLottie() {\n  if (!lottiePromise) {\n    lottiePromise = import('../../lib/rlottie/RLottie') as unknown as Promise<RLottieClass>;\n    RLottie = (await lottiePromise as any).default;\n  }\n\n  return lottiePromise;\n}\n\nsetTimeout(ensureLottie, LOTTIE_LOAD_DELAY);\n\nconst AnimatedSticker: FC<OwnProps> = ({\n  className,\n  id,\n  animationData,\n  play,\n  playSegment,\n  speed,\n  noLoop,\n  size,\n  quality,\n  isLowPriority,\n  onLoad,\n}) => {\n  const [animation, setAnimation] = useState<RLottieInstance>();\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n  const wasPlaying = useRef(false);\n  const isFrozen = useRef(false);\n\n  const playRef = useRef();\n  playRef.current = play;\n  const playSegmentRef = useRef<[number, number]>();\n  playSegmentRef.current = playSegment;\n\n  useEffect(() => {\n    if (animation || !animationData) {\n      return;\n    }\n\n    const exec = () => {\n      if (!container.current) {\n        return;\n      }\n\n      const newAnimation = new RLottie(\n        id,\n        container.current,\n        animationData,\n        {\n          noLoop,\n          size,\n          quality,\n          isLowPriority,\n        },\n        onLoad,\n      );\n\n      if (speed) {\n        newAnimation.setSpeed(speed);\n      }\n\n      setAnimation(newAnimation);\n    };\n\n    if (RLottie) {\n      exec();\n    } else {\n      ensureLottie().then(() => {\n        fastRaf(() => {\n          if (container.current) {\n            exec();\n          }\n        });\n      });\n    }\n  }, [animation, animationData, id, isLowPriority, noLoop, onLoad, quality, size, speed]);\n\n  useEffect(() => {\n    return () => {\n      if (animation) {\n        animation.destroy();\n      }\n    };\n  }, [animation]);\n\n  const playAnimation = useCallback((shouldRestart = false) => {\n    if (animation && (playRef.current || playSegmentRef.current)) {\n      if (playSegmentRef.current) {\n        animation.playSegment(playSegmentRef.current);\n      } else if (shouldRestart) {\n        animation.goToAndPlay(0);\n      } else {\n        animation.play();\n      }\n    }\n  }, [animation]);\n\n  const pauseAnimation = useCallback(() => {\n    if (!animation) {\n      return;\n    }\n\n    animation.pause();\n  }, [animation]);\n\n  const freezeAnimation = useCallback(() => {\n    isFrozen.current = true;\n\n    if (!animation) {\n      return;\n    }\n\n    if (!wasPlaying.current) {\n      wasPlaying.current = animation.isPlaying();\n    }\n\n    pauseAnimation();\n  }, [animation, pauseAnimation]);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (wasPlaying.current) {\n      playAnimation();\n    }\n\n    wasPlaying.current = false;\n    isFrozen.current = false;\n  }, [playAnimation]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  useEffect(() => {\n    if (!animation) {\n      return;\n    }\n\n    if (play || playSegment) {\n      if (isFrozen.current) {\n        wasPlaying.current = true;\n      } else {\n        playAnimation(noLoop);\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isFrozen.current) {\n        wasPlaying.current = false;\n      } else {\n        pauseAnimation();\n      }\n    }\n  }, [animation, play, playSegment, noLoop, playAnimation, pauseAnimation]);\n\n  useHeavyAnimationCheck(freezeAnimation, unfreezeAnimation);\n  // Pausing frame may not happen in background\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n\n  const fullClassName = buildClassName('AnimatedSticker', className);\n\n  const style = size ? `width: ${size}px; height: ${size}px;` : undefined;\n\n  return (\n    <div\n      ref={container}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    />\n  );\n};\n\nexport default memo(AnimatedSticker);\n","import React, {\n  FC, memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageAudioCaption,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { renderWaveformToDataUri } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useMediaDownload from '../../hooks/useMediaDownload';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  onPlay: (messageId: number, chatId: number) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst AVG_VOICE_DURATION = 30;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice }, isMediaUnread } = message;\n  const isVoice = Boolean(voice);\n  const isSeeking = useRef<boolean>(false);\n  const playStateBeforeSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldDownload = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const { mediaData, downloadProgress } = useMediaWithDownloadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldDownload,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, play, pause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    origin,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const {\n    isDownloadStarted,\n    downloadProgress: directDownloadProgress,\n    handleDownloadClick,\n  } = useMediaDownload(getMessageMediaHash(message, 'download'), getMessageAudioCaption(message));\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    isDownloadStarted ? directDownloadProgress : (uploadProgress || downloadProgress),\n    isLoadingForPlaying || isDownloadStarted,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isPlaying, isUploading, message.id, message.chatId, onCancelUpload, onPlay, playPause, isActivated]);\n\n  useEffect(() => {\n    if (isPlaying && onReadMedia && isMediaUnread) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    playStateBeforeSeeking.current = isPlaying;\n    pause();\n    handleSeek(e);\n  }, [handleSeek, pause, isPlaying]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n    if (playStateBeforeSeeking.current) play();\n  }, [play]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function getFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function getSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration(voice!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const isOwn = isOwnMessage(message);\n  const renderedWaveform = useMemo(\n    () => voice && renderWaveform(\n      voice,\n      (isMediaUnread && !isOwn) ? 1 : playProgress,\n      isOwn,\n      theme,\n      seekerRef,\n    ),\n    [voice, isMediaUnread, isOwn, playProgress, theme],\n  );\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\" dir=\"auto\" title={getFirstLine()}>{renderText(getFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(lang, date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {withSeekline && (\n            <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n              <span className=\"duration with-seekline\" dir=\"auto\">\n                {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n              </span>\n              {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n            </div>\n          )}\n          {!withSeekline && getSecondLine()}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloadStarted ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloadStarted ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang, audio, duration, isPlaying, playProgress, bufferedProgress, seekerRef, (isDownloadStarted || isUploading),\n        date, transferProgress, onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && voice && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && renderVoice(voice, renderedWaveform, playProgress, isMediaUnread)}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          <span className=\"bullet\">&bull;</span>\n          <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>{formatMediaDateTime(lang, date * 1000)}</Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(voice: ApiVoice, renderedWaveform: any, playProgress: number, isMediaUnread?: boolean) {\n  return (\n    <div className=\"content\">\n      {renderedWaveform}\n      <p className=\"voice-duration\" dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n        {isMediaUnread && <span className=\"unread\" />}\n      </p>\n    </div>\n  );\n}\n\nfunction renderWaveform(\n  voice: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  theme: ISettings['theme'],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  const { waveform, duration } = voice;\n\n  if (!waveform) {\n    return undefined;\n  }\n\n  const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n  const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n  const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n  const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n  const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n  const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n  const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n  const { data: spikes, peak } = interpolateArray(decodedWaveform, spikesCount);\n  const { src, width, height } = renderWaveformToDataUri(spikes, playProgress, {\n    peak,\n    fillStyle: isOwn ? fillOwnColor : fillColor,\n    progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <img\n      src={src}\n      alt=\"\"\n      width={width}\n      height={height}\n      className=\"waveform\"\n      draggable={false}\n      ref={seekerRef as React.Ref<HTMLImageElement>}\n    />\n  );\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveformToDataUri(\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  const canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n\n  return {\n    src: canvas.toDataURL(),\n    width,\n    height,\n  };\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport { ApiUser, ApiChat, ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash, getChatTitle, isChatPrivate,\n  getUserFullName, isUserOnline, isDeletedUser, getUserColorKey, isChatWithRepliesBot,\n} from '../../modules/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useLang from '../../hooks/useLang';\n\nimport './Avatar.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  withOnlineStatus?: boolean;\n  chat?: ApiChat;\n  user?: ApiUser;\n  text?: string;\n  isSavedMessages?: boolean;\n  lastSyncTime?: number;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  text,\n  withOnlineStatus,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  let imageHash: string | undefined;\n\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat);\n    }\n  }\n\n  const dataUri = useMedia(imageHash, false, ApiMediaFormat.DataUri, lastSyncTime);\n  const { shouldRenderFullMedia, transitionClassNames } = useTransitionForMedia(dataUri, 'slow');\n\n  const lang = useLang();\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isReplies) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (shouldRenderFullMedia) {\n    content = <img src={dataUri} className={`${transitionClassNames} avatar-media`} alt=\"\" decoding=\"async\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && isUserOnline(user);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    withOnlineStatus && isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !shouldRenderFullMedia) && 'no-photo',\n  );\n\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, isSavedMessages || shouldRenderFullMedia);\n    }\n  }, [onClick, isSavedMessages, shouldRenderFullMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div className={fullClassName} onClick={handleClick} data-test-sender-id={IS_TEST ? senderId : undefined}>\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../modules/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isChatPrivate, isUserRightBanned, selectIsChatMuted,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'updateChatMutedState' | 'showNotification'>;\n\nconst ChatExtra: FC<OwnProps & StateProps & DispatchProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  loadFullUser,\n  showNotification,\n  updateChatMutedState,\n}) => {\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && !!formattedNumber.length && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && !!description.length && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem icon=\"mention\" multiline narrow ripple onClick={() => copy(link, lang('SetUrlPlaceholder'))}>\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadFullUser', 'updateChatMutedState', 'showNotification',\n  ]),\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isChatPrivate,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: number | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'leaveChannel' | 'deleteHistory' | 'deleteChannel' | 'deleteChatUser' | 'blockContact'\n)>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n  deleteChatUser,\n  blockContact,\n}) => {\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isChatPrivate(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions,\n    ['leaveChannel', 'deleteHistory', 'deleteChannel', 'deleteChatUser', 'blockContact']),\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, useEffect, useState, memo, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport download from '../../util/download';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const extension = getDocumentExtension(document) || '';\n  const { fileName, size, timestamp } = document;\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isDownloadAllowed, setIsDownloadAllowed] = useState(false);\n  const {\n    mediaData, downloadProgress,\n  } = useMediaWithDownloadProgress<ApiMediaFormat.BlobUrl>(\n    getMessageMediaHash(message, 'download'), !isDownloadAllowed, undefined, undefined, undefined, true,\n  );\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, isDownloadAllowed);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const handleClick = useCallback(() => {\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n    } else {\n      setIsDownloadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [withMediaViewer, isUploading, onCancelUpload, onMediaClick]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (isDownloadAllowed && mediaData) {\n      download(mediaData, fileName);\n      setIsDownloadAllowed(false);\n    }\n  }, [fileName, mediaData, isDownloadAllowed]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(previewData, 'slow');\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            {shouldRenderThumb && (\n              <img\n                src={thumbnailDataUri}\n                width={width}\n                height={height}\n                className=\"thumbnail\"\n                alt=\"\"\n              />\n            )}\n            {shouldRenderFullMedia && (\n              <img\n                src={previewData}\n                className={`full-media ${transitionClassNames}`}\n                width={width}\n                height={height}\n                alt=\"\"\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              {' '}\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'openMediaViewer']),\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(mediaBlobUrl, 'slow');\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      {shouldRenderThumb && (\n        <img src={thumbDataUri} alt=\"\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img src={mediaBlobUrl} className={`${transitionClassNames} full-media`} alt=\"\" />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isChatPrivate } from '../../modules/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: number[];\n  selectedIds: number[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: number[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: number) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isChatPrivate(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isChatPrivate } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: number;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiUser, ApiChat, ApiMediaFormat, ApiPhoto,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash, isDeletedUser, getUserColorKey, getChatTitle, isChatPrivate, getUserFullName, isChatWithRepliesBot,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big' = 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const imageHash = getMediaHash();\n  const fullMediaData = useMedia(\n    imageHash,\n    false,\n    imageHash?.startsWith('avatar') ? ApiMediaFormat.DataUri : ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const avatarThumbnailData = useMedia(\n    !fullMediaData && isFirstPhoto ? getMediaHash('normal', true) : undefined,\n    false,\n    ApiMediaFormat.DataUri,\n    lastSyncTime,\n  );\n  const thumbDataUri = useBlurSync(!fullMediaData && photo && photo.thumbnail && photo.thumbnail.dataUri);\n  const imageSrc = fullMediaData || avatarThumbnailData || thumbDataUri;\n  const prevImageSrc = usePrevious(imageSrc);\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" decoding=\"async\" />;\n  } else if (!imageSrc && user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (!imageSrc && chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {prevImageSrc && imageSrc && prevImageSrc !== imageSrc && (\n        <img src={prevImageSrc} className=\"prev-avatar-media\" alt=\"\" decoding=\"async\" />\n      )}\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiChat } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  isSavedMessages?: boolean;\n  animationLevel: 0 | 1 | 2;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'connectionState'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  forceShowSelf,\n  user,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1 ? 'slide' : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Support for swipe gestures and closing on click\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState, user, chat, isSavedMessages, animationLevel, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\n\nimport './StickerButton.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  size: number;\n  observeIntersection: ObserveFn;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  onClick?: (arg: any) => void;\n  clickArg?: any;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton: FC<OwnProps> = ({\n  sticker, size, observeIntersection, noAnimate, title, className, onClick, clickArg, onUnfaveClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isAnimated && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isAnimationLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canAnimatedPlay = isAnimationLoaded && shouldPlay;\n\n  const {\n    shouldRenderThumb,\n    shouldRenderFullMedia: shouldRenderPreview,\n    transitionClassNames: previewTransitionClassNames,\n  } = useTransitionForMedia(previewBlobUrl || canAnimatedPlay, 'slow');\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  function handleClick() {\n    if (onClick) {\n      onClick(clickArg);\n    }\n  }\n\n  function handleUnfaveClick(e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    sticker.isAnimated && 'animated',\n    stickerSelector,\n    className,\n  );\n\n  const style = shouldRenderThumb && thumbDataUri ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      // @ts-ignore\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={handleClick}\n    >\n      {shouldRenderPreview && !canAnimatedPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      {/* fix for translation \"username _is_ typing\" */}\n      {lang(typingStatus.action).replace('{user}', '').trim()}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: number) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({ message, senderTitle, onMessageClick }) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(lang, message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {truncatedDescription && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {renderText(truncatedDescription)}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../modules/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS = 200;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '1258816259753933';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities: IOrganizedEntity[] = [];\n  const parsedNestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  parsedNestedEntities.forEach((parsedEntity) => {\n    let isChanged = false;\n\n    parsedEntity.organizedIndexes.forEach((organizedIndex) => {\n      if (!isChanged && !organizedIndexes.has(organizedIndex)) {\n        isChanged = true;\n      }\n\n      organizedIndexes.add(organizedIndex);\n    });\n\n    if (isChanged) {\n      nestedEntities.push(parsedEntity);\n    }\n  });\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntities = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntities.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntities.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['escape_html', 'emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['escape_html', 'emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import { useCallback } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<number, number>) {\n  const movesUp = useCallback((id: number) => orderDiffById[id] < 0, [orderDiffById]);\n  const movesDown = useCallback((id: number) => orderDiffById[id] > 0, [orderDiffById]);\n\n  const orderDiffIds = Object.keys(orderDiffById).map(Number);\n  const numberOfUp = orderDiffIds.filter(movesUp).length;\n  const numberOfDown = orderDiffIds.filter(movesDown).length;\n\n  return useCallback((chatId: number): ChatAnimationTypes => {\n    const orderDiff = orderDiffById[chatId];\n\n    if (orderDiff === 0) {\n      return ChatAnimationTypes.None;\n    }\n\n    if (\n      orderDiff === Infinity\n      || orderDiff === -Infinity\n      || (movesUp(chatId) && numberOfUp <= numberOfDown)\n      || (movesDown(chatId) && numberOfDown < numberOfUp)\n    ) {\n      return ChatAnimationTypes.Opacity;\n    }\n\n    return ChatAnimationTypes.Move;\n  }, [movesDown, movesUp, numberOfDown, numberOfUp, orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isChatPrivate,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: number;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  privateChatUser?: ApiUser;\n  actionTargetUserIds?: number[];\n  usersById?: Record<number, ApiUser>;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: number;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  privateChatUser,\n  actionTargetUserIds,\n  usersById,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    return actionTargetUserIds\n      ? actionTargetUserIds.map((userId) => usersById?.[userId]).filter<ApiUser>(Boolean as any)\n      : undefined;\n  }, [actionTargetUserIds, usersById]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    privateChatUser,\n    handleDelete,\n    folderId,\n    isPinned,\n    isMuted,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderText(renderActionMessageText(\n            lang,\n            lastMessage,\n            actionOrigin,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderMessageSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isChatPrivate(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={privateChatUser}\n          withOnlineStatus\n          isSavedMessages={privateChatUser?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, privateChatUser))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted-chat\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta message={chat.lastMessage} outgoingStatus={lastMessageOutgoingStatus} />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(lang, message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(lang, message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { byId: usersById } = global.users;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n      ...(actionTargetUserIds && { usersById }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../modules/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser,\n} from '../../../api/types';\nimport { NotifyException, NotifySettings, SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID, IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport { getChatOrder, prepareChatList, prepareFolderListIds } from '../../../modules/helpers';\nimport {\n  selectChatFolder, selectNotifyExceptions, selectNotifySettings,\n} from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n  foldersDispatch?: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatsById: Record<number, ApiChat>;\n  usersById: Record<number, ApiUser>;\n  chatFolder?: ApiChatFolder;\n  listIds?: number[];\n  orderedPinnedIds?: number[];\n  lastSyncTime?: number;\n  notifySettings: NotifySettings;\n  notifyExceptions?: Record<number, NotifyException>;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'loadMoreChats' | 'preloadTopChatMessages' | 'openChat' | 'openNextChat'>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived',\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  chatFolder,\n  chatsById,\n  usersById,\n  listIds,\n  orderedPinnedIds,\n  lastSyncTime,\n  foldersDispatch,\n  notifySettings,\n  notifyExceptions,\n  onScreenSelect,\n  loadMoreChats,\n  preloadTopChatMessages,\n  openChat,\n  openNextChat,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(chatsById, usersById, chatFolder, notifySettings, notifyExceptions)\n      : [listIds, orderedPinnedIds];\n  }, [folderType, chatFolder, chatsById, usersById, notifySettings, notifyExceptions, listIds, orderedPinnedIds]);\n\n  const [orderById, orderedIds] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = [...newChatArrays.pinnedChats, ...newChatArrays.otherChats];\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return order - (prevOrderById[id] !== undefined ? prevOrderById[id] : Infinity);\n    });\n  }, [orderById, prevOrderById]);\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  // TODO Refactor to not call `prepareChatList` twice\n  const chatArrays = viewportIds && prepareChatList(chatsById, viewportIds, currentPinnedIds, folderType);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + chatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {chatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {chatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isActive && orderedIds) {\n        if (IS_PWA && ((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n          const [, digit] = e.code.match(/Digit(\\d)/) || [];\n          if (!digit) return;\n\n          const position = Number(digit) - 1;\n          if (position > orderedIds.length - 1) return;\n\n          openChat({ id: orderedIds[position], shouldReplaceHistory: true });\n        }\n\n        if (e.altKey) {\n          const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n          if (!targetIndexDelta) return;\n\n          e.preventDefault();\n          openNextChat({ targetIndexDelta, orderedIds });\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      noScrollRestore\n    >\n      {viewportIds?.length && chatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      chatsById,\n      usersById,\n      lastSyncTime,\n      notifySettings: selectNotifySettings(global),\n      notifyExceptions: selectNotifyExceptions(global),\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadMoreChats',\n    'preloadTopChatMessages',\n    'openChat',\n    'openNextChat',\n  ]),\n)(ChatList));\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatPrivate,\n  isChatGroup,\n} from '../../../../modules/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<number, ApiChat>, usersById: Record<number, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isChatPrivate(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isChatPrivate(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  shouldSetFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: number;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage' | 'replyToNextMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  shouldSetFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n  replyToNextMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    // Avoid focusing during animation\n    if (inputRef.current!.closest('.from, .to')) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (e.metaKey && !html.length) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (!IS_TOUCH_ENV && (!textContent || !textContent.length)) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (shouldSetFocus) {\n      focusInput();\n    }\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage', 'replyToNextMessage']),\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, []);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, []);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, []);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = encodeURI(linkUrl.includes('://') ? linkUrl : `http://${linkUrl}`);\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../../../../api/types';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[_]{2}([^*\\n]+)[_]{2}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: number | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = Number((node as HTMLAnchorElement).dataset.userId);\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport useFlag from '../../../../hooks/useFlag';\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\ntry {\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\p{L}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  html: string,\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [keywords, setKeywords] = useState<string[]>();\n  const [byKeyword, setByKeyword] = useState<Record<string, Emoji[]>>({});\n  const [names, setNames] = useState<string[]>();\n  const [byName, setByName] = useState<Record<string, Emoji[]>>({});\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  const recentEmojis = useMemo(\n    () => {\n      if (!byId || !recentEmojiIds.length) {\n        return [];\n      }\n\n      return Object.values(pickTruthy(byId, recentEmojiIds));\n    },\n    [byId, recentEmojiIds],\n  );\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (!byId || isDisabled) {\n      return;\n    }\n\n    const emojis = Object.values(byId);\n\n    const byNative = buildCollectionByKey(emojis, 'native');\n    const baseEmojisByKeyword = baseEmojiKeywords\n      ? mapValues(baseEmojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n    const emojisByKeyword = emojiKeywords\n      ? mapValues(emojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n\n    setByKeyword({ ...baseEmojisByKeyword, ...emojisByKeyword });\n    setKeywords([...Object.keys(baseEmojisByKeyword), ...Object.keys(emojisByKeyword)]);\n\n    const emojisByName = emojis.reduce((result, emoji) => {\n      emoji.names.forEach((name) => {\n        if (!result[name]) {\n          result[name] = [];\n        }\n\n        result[name].push(emoji);\n      });\n\n      return result;\n    }, {} as Record<string, Emoji[]>);\n    setByName(emojisByName);\n    setNames(Object.keys(emojisByName));\n  }, [isDisabled, baseEmojiKeywords, byId, emojiKeywords]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || !keywords || !keywords.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = [];\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = recentEmojis;\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n      matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword, matchedKeywords))));\n\n      // Also search by names, which is useful for non-English languages\n      const matchedNames = names.filter((name) => name.startsWith(filter));\n      matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n      matched = unique(matched);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched.slice(0, EMOJIS_LIMIT));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, byKeyword, keywords, byName, names, html, isAllowed, markIsOpen,\n    recentEmojis, unmarkIsOpen, setShouldForceInsertEmoji,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${textEmoji}`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n","import {\n  useCallback, useEffect, useState, useMemo,\n} from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\p{L}\\\\p{M}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: number[],\n  currentUserId?: number,\n  usersById?: Record<number, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const topInlineBots = useMemo(() => {\n    return (topInlineBotIds || []).map((id) => usersById?.[id]).filter<ApiUser>(Boolean as any);\n  }, [topInlineBotIds, usersById]);\n\n  const getFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n    runThrottled(() => {\n      const inlineBots = (withInlineBots ? topInlineBots : []).filter((inlineBot) => {\n        return !filter || searchUserName(filter, inlineBot);\n      });\n\n      const chatMembers = (groupChatMembers || [])\n        .map(({ userId }) => usersById[userId])\n        .filter((user) => {\n          if (!user || user.id === currentUserId) {\n            return false;\n          }\n\n          return !filter || searchUserName(filter, user);\n        });\n\n      setUsersToMention(unique(inlineBots.concat(chatMembers)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds, topInlineBots, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      getFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredUsers, markIsOpen, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={confirmHandler}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: any;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport React, {\n  FC, useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: any;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    buttonRef,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    focus,\n    destructive,\n    multiline,\n    isStatic,\n    contextActions,\n    onMouseDown,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      // @ts-ignore\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role=\"button\"\n        ref={buttonRef}\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: any;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: any;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  title,\n  className,\n  isOpen,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  children,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  const { forceClose } = useHistoryBack(isOpen, onClose);\n\n  // For modals that are closed by unmounting without changing `isOpen` to `false`\n  useEffect(() => {\n    return () => {\n      if (isOpen) {\n        forceClose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\">\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import { FC, useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: any;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useLayoutEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  active?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  active,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (!active || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tab = tabRef.current!;\n    const indicator = tab.querySelector('i')!;\n    const prevTab = tab.parentElement!.children[previousActiveTab];\n    if (!prevTab) {\n      return;\n    }\n    const currentIndicator = prevTab.querySelector('i')!;\n\n    currentIndicator.classList.remove('animate');\n    indicator.classList.remove('animate');\n\n    // We move and resize our indicator so it repeats the position and size of the previous one.\n    const shiftLeft = currentIndicator.parentElement!.offsetLeft - indicator.parentElement!.offsetLeft;\n    const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n    indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n    // 3 AFs needed here to synchronize animations with Transition component\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          // Now we remove the transform to let it animate to its own position and size.\n          indicator.classList.add('animate');\n          indicator.style.transform = 'none';\n        });\n      });\n    });\n  }, [active, previousActiveTab]);\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName('Tab', className, active && 'active')}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && 'active')}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </button>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    if (container.scrollWidth <= container.offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.querySelector('.Tab.active') as HTMLElement | null;\n    if (activeTabElement) {\n      const newLeft = activeTabElement.offsetLeft - (container.offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n      // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n      if (Math.abs(newLeft - container.scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n        return;\n      }\n\n      fastSmoothScrollHorizontal(container, newLeft);\n    }\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          active={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { waitForAnimationEnd } from '../../util/cssAnimationEndListeners';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => any;\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-reversed' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  id?: string;\n  className?: string;\n  onStart?: () => void;\n  onStop?: () => void;\n  children: ChildrenFn;\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst Transition: FC<OwnProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup || (cleanupExceptionKey !== undefined && cleanupExceptionKey === prevActiveKey)) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      childElements[0].classList.add('active');\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle('active', i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove('active');\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    let dispatchHeavyAnimationStop: NoneToVoidFunction;\n    if (animationLevel > 0) {\n      dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n    }\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      if (onStart) {\n        onStart();\n      }\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle('active', i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>('.active');\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          if (dispatchHeavyAnimationStop) {\n            dispatchHeavyAnimationStop();\n          }\n\n          cleanup();\n\n          if (onStop) {\n            onStop();\n          }\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      currentKeyRef.current = activeKey;\n\n      if (animationLevel > 0 && watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>('.active')\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function'\n        ? <div key={key}>{render(key === activeKey, key === prevActiveKey, activeKey)}</div>\n        : undefined\n    );\n  });\n\n  const fullClassName = buildClassName(\n    'Transition',\n    className,\n    name,\n  );\n\n  return (\n    <div ref={containerRef} id={id} className={fullClassName}>\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: number[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\n\nimport { register, Track } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nexport default (\n  trackId: string,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, origin, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay':\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          break;\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          setPositionState({\n            duration: proxy.duration,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play, pause, setCurrentTime, proxy, destroy, setVolume, setCurrentOrigin, stop,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      setCurrentOrigin(origin);\n      play(src);\n    }\n  }, [src, origin, play, setCurrentOrigin]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getDispatch().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useBackgroundMode(\n  onBlur?: AnyToVoidFunction,\n  onFocus?: AnyToVoidFunction,\n) {\n  useEffect(() => {\n    if (onBlur && !document.hasFocus()) {\n      onBlur();\n    }\n\n    if (onBlur) {\n      window.addEventListener('blur', onBlur);\n    }\n\n    if (onFocus) {\n      window.addEventListener('focus', onFocus);\n    }\n\n    return () => {\n      if (onFocus) {\n        window.removeEventListener('focus', onFocus);\n      }\n\n      if (onBlur) {\n        window.removeEventListener('blur', onBlur);\n      }\n    };\n  }, [onBlur, onFocus]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport {\n  isChatArchived, getCanDeleteChat, isChatPrivate, isChatChannel,\n} from '../modules/helpers';\nimport useLang from './useLang';\n\nexport default ({\n  chat,\n  privateChatUser,\n  handleDelete,\n  folderId,\n  isPinned,\n  isMuted,\n}: {\n  chat: ApiChat | undefined;\n  privateChatUser: ApiUser | undefined;\n  handleDelete: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getDispatch();\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return [actionPin];\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isChatPrivate(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    return [\n      actionUnreadMark,\n      actionPin,\n      ...(!privateChatUser?.isSelf ? [\n        actionMute,\n        actionArchive,\n      ] : []),\n      actionDelete,\n    ];\n  }, [chat, isPinned, lang, isInSearch, isMuted, handleDelete, privateChatUser?.isSelf, folderId]);\n};\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport { IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction checkIsDisabledForMobile() {\n  return IS_SINGLE_COLUMN_LAYOUT\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    document.body.classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        e.stopPropagation();\n      }, true);\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    let horizontalPostition: 'left' | 'right';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPostition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPostition = 'right';\n      x -= 3;\n    } else {\n      horizontalPostition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPostition);\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n\n    const left = horizontalPostition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : Math.max((x - triggerRect.left), menuRect.width + MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    const top = Math.min(\n      rootRect.height - triggerRect.top + triggerRect.height - MENU_POSITION_BOTTOM_MARGIN,\n      y - triggerRect.top,\n    );\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN;\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n};\n","import usePrevious from './usePrevious';\n\nexport default function useCurrentOrPrev<T extends any>(\n  current: T, shouldSkipUndefined = false, shouldForceCurrent = false,\n): T | undefined {\n  const prev = usePrevious(current, shouldSkipUndefined);\n\n  // eslint-disable-next-line no-null/no-null\n  return shouldForceCurrent || (current !== null && current !== undefined) ? current : prev;\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: number,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nexport default (\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: number[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n  forceFullPreload = false,\n): [number[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: number;\n  }>();\n\n  const viewportIdsRef = useRef<number[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, listIds[0], LoadMoreDirection.Forwards, listSlice);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  }\n\n  useEffect(() => {\n    if (listIds && !isDisabled && loadMoreBackwards && forceFullPreload) {\n      const viewportIds = viewportIdsRef.current!;\n      loadMoreBackwards({ offsetId: viewportIds[viewportIds.length - 1] });\n    }\n  }, [listIds, isDisabled, loadMoreBackwards, forceFullPreload]);\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice(\n  sourceIds: number[],\n  offsetId = 0,\n  direction: LoadMoreDirection,\n  listSlice: number,\n) {\n  const { length } = sourceIds;\n  const index = sourceIds.indexOf(offsetId);\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nconst AUTO_UNFREEZE_TIMEOUT = 2000;\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const autoUnfreezeTimeoutRef = useRef<number>();\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n\n    if (autoUnfreezeTimeoutRef.current) {\n      clearTimeout(autoUnfreezeTimeoutRef.current);\n      autoUnfreezeTimeoutRef.current = undefined;\n    }\n\n    // Make sure to unfreeze even if unfreeze callback was not called (which was some hardly-reproducible bug)\n    autoUnfreezeTimeoutRef.current = window.setTimeout(() => {\n      autoUnfreezeTimeoutRef.current = undefined;\n\n      if (!freezeFlagsRef.current) {\n        return;\n      }\n\n      freezeFlagsRef.current = 1;\n      unfreeze();\n    }, AUTO_UNFREEZE_TIMEOUT);\n  }, [unfreeze]);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T, debugKey?: string) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n","import { useEffect } from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | false | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!noLoad && mediaHash && !mediaData) {\n      const startedAt = Date.now();\n\n      mediaLoader.fetch(mediaHash, mediaFormat).then(() => {\n        const spentTime = Date.now() - startedAt;\n        if (!delay || spentTime >= delay) {\n          forceUpdate();\n        } else {\n          setTimeout(forceUpdate, delay - spentTime);\n        }\n      });\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, delay]);\n\n  return mediaData;\n};\n","import React, { useCallback, useEffect, useState } from '../lib/teact/teact';\n\nimport useMediaWithDownloadProgress from './useMediaWithDownloadProgress';\nimport download from '../util/download';\n\nexport default function useMediaDownload(\n  mediaHash?: string,\n  fileName?: string,\n) {\n  const [isDownloadStarted, setIsDownloadStarted] = useState(false);\n\n  const { mediaData, downloadProgress } = useMediaWithDownloadProgress(mediaHash, !isDownloadStarted);\n\n  // Download with browser when fully loaded\n  useEffect(() => {\n    if (isDownloadStarted && mediaData) {\n      download(mediaData, fileName!);\n      setIsDownloadStarted(false);\n    }\n  }, [fileName, mediaData, isDownloadStarted]);\n\n  // Cancel download on source change\n  useEffect(() => {\n    setIsDownloadStarted(false);\n  }, [mediaHash]);\n\n  const handleDownloadClick = useCallback((e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    setIsDownloadStarted((isAllowed) => !isAllowed);\n  }, []);\n\n  return {\n    isDownloadStarted,\n    downloadProgress,\n    handleDownloadClick,\n  };\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const [downloadProgress, setDownloadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (!delay || (Date.now() - startedAtRef.current! > delay)) {\n        setDownloadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setDownloadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setDownloadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setDownloadProgress(0);\n    }\n  }, [handleProgress, noLoad]);\n\n  return { mediaData, downloadProgress };\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(true);\n\n  useEffect(() => {\n    if (isOpen) {\n      isMouseInside.current = true;\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\n\nimport useShowTransition from './useShowTransition';\n\nconst SPEED = {\n  fast: 200,\n  slow: 350,\n};\n\nexport default (mediaData?: any, speed: keyof typeof SPEED = 'fast', noAnimate = false) => {\n  const isMediaLoaded = Boolean(mediaData);\n  const willAnimate = !useRef(isMediaLoaded).current && !noAnimate;\n  const [shouldRenderThumb, setShouldRenderThumb] = useState(!isMediaLoaded);\n\n  const {\n    shouldRender: shouldRenderFullMedia,\n    transitionClassNames,\n  } = useShowTransition(isMediaLoaded, undefined, !willAnimate, speed);\n\n  useEffect(() => {\n    if (shouldRenderFullMedia) {\n      if (willAnimate) {\n        setTimeout(() => {\n          setShouldRenderThumb(false);\n        }, SPEED[speed]);\n      } else {\n        setShouldRenderThumb(false);\n      }\n    }\n  }, [willAnimate, shouldRenderFullMedia, speed]);\n\n  return {\n    shouldRenderThumb,\n    shouldRenderFullMedia,\n    transitionClassNames,\n  };\n};\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, parseMessageKey } from '../modules/helpers';\nimport { fastRaf } from './schedulers';\n\ntype Handler = (eventName: string, e: Event) => void;\ntype TrackId = string; // `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  origin: AudioOrigin;\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<string, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: string | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  origin: AudioOrigin,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    origin,\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const track = tracks.get(trackId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return;\n\n  const nextTrackId = findNextInQueue(queue, trackId, track.origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getDispatch().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (currentTrack) nextTrack.origin = currentTrack.origin; // Preserve origin\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: string,\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, origin, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n    },\n\n    setCurrentOrigin(audioOrigin: AudioOrigin) {\n      tracks.get(trackId)!.origin = audioOrigin;\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin);\n    },\n\n    isFirst() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  if (track.type === 'audio') {\n    return musicQueue;\n  }\n\n  if (track.type === 'voice') {\n    return voiceQueue;\n  }\n  return undefined;\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter((el) => el !== trackId);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter((el) => el !== trackId);\n  }\n}\n\nfunction findNextInQueue(queue: TrackId[], current: TrackId, origin: AudioOrigin, isReverseOrder?: boolean) {\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(current);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(current).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(current);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0];\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nconst IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialSwipeAxis = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: true });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","import { DEBUG } from '../config';\n\nexport const CLIPBOARD_ITEM_SUPPORTED = navigator.clipboard && window.ClipboardItem;\n\nconst textCopyEl = document.createElement('textarea');\ntextCopyEl.setAttribute('readonly', '');\ntextCopyEl.tabIndex = -1;\ntextCopyEl.className = 'visually-hidden';\n\nexport const copyTextToClipboard = (str: string): void => {\n  textCopyEl.value = str;\n  document.body.appendChild(textCopyEl);\n  const selection = document.getSelection();\n\n  if (selection) {\n    // Store previous selection\n    const rangeToRestore = selection.rangeCount > 0 && selection.getRangeAt(0);\n    textCopyEl.select();\n    document.execCommand('copy');\n    // Restore the original selection\n    if (rangeToRestore) {\n      selection.removeAllRanges();\n      selection.addRange(rangeToRestore);\n    }\n  }\n\n  document.body.removeChild(textCopyEl);\n};\n\nexport const copyImageToClipboard = (imageUrl?: string) => {\n  if (!imageUrl) return;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const imageEl = new Image();\n  imageEl.onload = (e: Event) => {\n    if (ctx && e.currentTarget) {\n      const img = e.currentTarget as HTMLImageElement;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob(copyBlobToClipboard, 'image/png', 1);\n    }\n  };\n\n  imageEl.src = imageUrl;\n};\n\nasync function copyBlobToClipboard(pngBlob: Blob | null) {\n  if (!pngBlob || !CLIPBOARD_ITEM_SUPPORTED) {\n    return;\n  }\n\n  try {\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [pngBlob.type]: pngBlob,\n      }),\n    ]);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","export default function download(url: string, filename: string) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  link.click();\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n    const currentPath = path * (1 - transition(t));\n\n    container.scrollTop = Math.round(target - currentPath);\n\n    isAnimating = t < 1;\n\n    if (!isAnimating) {\n      onHeavyAnimationStop();\n    }\n\n    return isAnimating;\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { IS_IOS } from './environment';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  // Native way seems to be smoother in Chrome\n  if (!IS_IOS) {\n    container.scrollTo({\n      left,\n      ...(duration && { behavior: 'smooth' }),\n    });\n  } else {\n    scrollWithJs(container, left, duration);\n  }\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata !== undefined ? metadata : null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    if (mediaSession.setPositionState) mediaSession.setPositionState(undefined);\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || !state.position || !state.duration) return;\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.setPositionState) {\n    mediaSession.setPositionState(state);\n  }\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setMicrophoneActive) {\n    // @ts-ignore\n    mediaSession.setMicrophoneActive(active);\n  }\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setCameraActive) {\n    // @ts-ignore\n    mediaSession.setCameraActive(active);\n  }\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import { IS_IOS } from './environment';\n\nexport default (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n","import { DEBUG } from '../config';\n\nexport default (mediaEl: HTMLMediaElement) => {\n  mediaEl.play().catch((err) => {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn(err);\n    }\n  });\n};\n"],"names":["WIDTH","large","medium","small","sticker","size","observeIntersection","lastSyncTime","forceLoadPreview","ref","useRef","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useTransitionForMedia","mediaData","isMediaLoaded","Boolean","playKey","setPlayKey","useState","String","Math","random","handleClick","useCallback","width","style","className","onClick","src","LIKE_STICKER_ID","undefined","alt","key","animationData","quality","play","noLoop","onLoad","lottiePromise","RLottie","async","ensureLottie","default","setTimeout","memo","playSegment","speed","isLowPriority","animation","setAnimation","container","wasPlaying","isFrozen","playRef","current","playSegmentRef","useEffect","exec","newAnimation","setSpeed","then","fastRaf","destroy","playAnimation","shouldRestart","goToAndPlay","pauseAnimation","pause","freezeAnimation","isPlaying","unfreezeAnimation","unfreezeAnimationOnRaf","useHeavyAnimationCheck","useBackgroundMode","fullClassName","buildClassName","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedProgress","seekerRef","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","onPlay","onReadMedia","onCancelUpload","onDateClick","content","audio","voice","isMediaUnread","isVoice","isSeeking","playStateBeforeSeeking","lang","useLang","isRtl","isActivated","setIsActivated","shouldDownload","coverHash","getMessageMediaHash","coverBlobUrl","downloadProgress","useMediaWithDownloadProgress","getMessageMediaFormat","handleForcePlay","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","withSeekline","isDownloadStarted","directDownloadProgress","handleDownloadClick","useMediaDownload","getMessageAudioCaption","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","max","min","handleStartSeek","button","handleStopSeek","handleDateClick","getFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","isOwn","isOwnMessage","renderedWaveform","useMemo","waveform","fillColor","fillOwnColor","progressFillColor","progressFillOwnColor","durationFactor","spikesCount","round","decodedWaveform","encoded5bit","bitsCount","length","valuesCount","floor","result","Array","bitsData","i","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","data","spikes","peak","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","interpolateArray","height","progress","fillStyle","progressFillStyle","canvas","document","createElement","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","toDataURL","renderWaveformToDataUri","draggable","renderWaveform","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","getSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","renderVoice","chat","user","text","withOnlineStatus","isSavedMessages","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","imageHash","getChatAvatarHash","shouldRenderFullMedia","decoding","userFullName","getUserFullName","getFirstLetters","getChatTitle","isChatPrivate","isOnline","isUserOnline","getUserColorKey","senderId","IS_TEST","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","selectChat","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","setGlobal","actions","pick","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","header","isText","smaller","withDate","datetime","sender","onMediaClick","extension","getDocumentExtension","timestamp","withMediaViewer","mediaType","isDownloadAllowed","setIsDownloadAllowed","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","isAllowed","download","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","shouldRenderThumb","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","status","idPrefix","mediaBlobUrl","video","getMessageVideo","isGif","Keys","activeKey","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","map","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","noStatusOrTyping","fullName","getUserStatus","photo","isFirstPhoto","isRepliesChat","getMediaHash","forceAvatar","hash","fullMediaData","startsWith","avatarThumbnailData","useBlurSync","imageSrc","prevImageSrc","usePrevious","Spinner","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","renderPhoto","isVerifiedIconShown","_","renderPhotoTabs","Transition","type","VerifiedIcon","noAnimate","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isAnimated","markLoaded","unmarkLoaded","canAnimatedPlay","shouldRenderPreview","previewTransitionClassNames","emoji","onMouseDown","preventMessageInputBlurWithBubbling","preventDefault","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","messageText","getMessageSummaryText","siteName","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","calculateDimensions","getAvailableHeight","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","availableWidth","availableHeight","mediaWidth","mediaHeight","calculatedWidth","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","rawText","getMessageText","entities","renderTextWithEntities","organizeEntity","index","organizedEntityIndexes","offset","organizedIndexes","Set","has","nestedEntities","filter","parsedEntity","isChanged","organizedIndex","add","organizeEntities","organizedEntities","organizedEntity","shouldRenderAsHtml","renderMessagePart","deleteLineBreakAfterPre","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","substring","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","ApiMessageEntityTypes","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","getLinkUrl","processEntityAsHtml","entityText","handleBotCommandClick","handleHashtagClick","href","target","rel","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","getDispatch","sendBotCommand","command","innerText","setLocalTextSearchQuery","query","searchTextMessagesLocal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","renderContent","unreadMentionsCount","formatIntegerCompact","ShowTransition","isCustom","lastMessage","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","byId","usersById","users","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","privateChatUser","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","useLayoutEffect","Opacity","opacity","classList","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","contextActions","useChatContextActions","handleDelete","ListItem","Avatar","LastMessageMeta","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","blobUrl","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","FolderTypeToListType","chats","listIds","chatsById","orderedPinnedIds","listType","notifySettings","notifyExceptions","isActive","loadMoreChats","preloadTopChatMessages","openNextChat","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","newChatArrays","prepareChatList","singleList","pinnedChats","otherChats","newOrderedIds","reduce","acc","prevOrderById","orderDiffById","mapValues","order","Infinity","loadMoreOfType","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","chatArrays","getAnimationType","movesUp","movesDown","orderDiffIds","Object","keys","Number","numberOfUp","numberOfDown","None","useChatAnimationType","handleKeyDown","IS_PWA","IS_MAC_OS","metaKey","ctrlKey","code","digit","match","position","altKey","targetIndexDelta","addEventListener","removeEventListener","InfiniteScroll","preloadBackwards","noFastList","viewportOffset","pinnedOffset","IS_ANDROID","CHAT_HEIGHT_PX","teactFastList","teactOrderKey","getChatOrder","renderChats","Loading","getSenderName","getSenderTitle","isChatGroup","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","from","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","shouldSetFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","closest","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","onKeyDown","shiftKey","handleKeyUp","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onContextMenu","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","fragmentEl","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","getSelectedText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","some","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","addRange","restoreSelection","handler","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","textIndex","recursionDeepness","addEntity","node","nodeName","anchor","dataset","entityType","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","childNodes","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RegExp","useEmojiTooltip","recentEmojiIds","onUpdateHtml","baseEmojiKeywords","emojiKeywords","isDisabled","markIsOpen","unmarkIsOpen","setById","keywords","setKeywords","byKeyword","setByKeyword","names","setNames","byName","setByName","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","MEMO_EMPTY_ARRAY","recentEmojis","values","pickTruthy","emojis","uncompressEmoji","ensureEmojiData","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","emojisByName","getEmojiCode","forceSend","endsWith","matched","matchedKeywords","keyword","sort","concat","flatten","matchedNames","unique","insertEmoji","textEmoji","isForce","atIndex","lastIndexOf","messageInput","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","searchUserName","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","topInlineBots","getFilteredUsers","withInlineBots","inlineBots","inlineBot","chatMembers","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","onEnter","split","textPart","disabled","children","buttonClassName","tabIndex","itemSelector","sensitiveArea","noScrollRestoreOnTop","cacheBuster","stateRef","loadMoreBackwards","loadMoreForwards","noScroll","LoadMoreDirection","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","scrollTop","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","buttonRef","destructive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","positionX","positionY","menuStyle","useContextMenuPosition","handleMouseDown","role","autoClose","hasCloseButton","noBackdrop","shouldSkipHistoryAnimations","modalRef","onEsc","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","trapFocus","forceClose","useHistoryBack","useEffectWithPrevDeps","prevIsOpen","body","dispatchHeavyAnimationEvent","Portal","containerId","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","appendChild","TeactDOM","removeChild","RADIUSES","s","m","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","subLabel","hidden","options","selected","loadingOption","handleChange","option","parentContainerClassName","focused","onReset","onFocus","onBlur","isInputFocused","markInputFocused","unmarkInputFocused","prevChildren","fromChildrenRef","noAnimation","onCheck","active","badgeCount","isBadgeActive","previousActiveTab","tabRef","tab","indicator","prevTab","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","newLeft","fastSmoothScrollHorizontal","CLEANED_UP","Symbol","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","getGlobal","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","childElements","isBackwards","prevActiveIndex","activeIndex","HTMLElement","dispatchHeavyAnimationStop","onAnimationEnd","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","registerMediaSession","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","isFinite","setPositionState","playbackRate","paused","updateMetadata","setVolume","setCurrentOrigin","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","hasFocus","cache","Map","blurredRef","img","Image","imgToCanvas","fastBlur","blurredAsync","get","onload","blurredDataUri","clear","set","useBlur","noInitiallyBuffered","setIsBuffered","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","buffered","end","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","canvasRef","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","isInSearch","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionPin","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionDelete","getCanDeleteChat","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","touches","cancelClickOnce","stopImmediatePropagation","emulateContextMenuEvent","passive","extraPaddingX","extraTopPadding","setPositionX","setPositionY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","rootRect","horizontalPostition","menuMaxHeight","useCurrentOrPrev","shouldSkipUndefined","shouldForceCurrent","prev","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","deltaX","deltaY","listSlice","forceFullPreload","lastParamsRef","viewportIdsRef","newViewportIds","getViewportSlice","prevListIds","prevIsDisabled","offsetId","areSortedArraysEqual","areSomeLocal","areAllLocal","sourceIds","indexForDirection","to","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","rootCallback","rootCallbackRef","freezeFlagsRef","autoUnfreezeTimeoutRef","onUnfreezeRef","unfreeze","freeze","observer","disconnect","callbacks","observe","targetCallback","entriesAccumulator","observerCallbackSync","entries","entry","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","mediaHash","noLoad","mediaFormat","startedAt","Date","now","spentTime","setIsDownloadStarted","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setDownloadProgress","startedAtRef","handleProgress","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","SPEED","fast","slow","willAnimate","setShouldRenderThumb","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","track","queue","getTrackQueue","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","safePlay","stopCurrentAudio","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","audioOrigin","fastSeek","volume","shouldRemoveFromQueue","h","el","removeFromQueue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","diff","localeCompare","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","excludedClosestSelector","onMove","pageX","pageY","withCursor","scrollable","overflow","dragOffsetX","dragOffsetY","shouldPreventScroll","innerWidth","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","CLIPBOARD_ITEM_SUPPORTED","navigator","clipboard","ClipboardItem","textCopyEl","str","rangeToRestore","select","copyImageToClipboard","imageUrl","imageEl","toBlob","copyBlobToClipboard","pngBlob","write","DEBUG","console","waitForTransitionEnd","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","filename","click","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","FocusDirection","calculateScrollFrom","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","containerWidth","animate","scrollTo","behavior","force","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","audioEl","patchedForSafari","patchForSafariInProgress","once","mediaEl","catch"],"sourceRoot":""}