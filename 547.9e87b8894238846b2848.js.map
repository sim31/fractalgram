{"version":3,"file":"547.9e87b8894238846b2848.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/AnimatedSticker.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.async.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/left/main/Badge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/helpers/searchUserName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/Transition.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBackgroundMode.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/hooks/useBuffering.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useContextMenuPosition.ts","webpack://telegram-t/./src/hooks/useCurrentOrPrev.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useIntersectionObserver.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useMedia.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useTransitionForMedia.ts","webpack://telegram-t/./src/hooks/useVideoCleanup.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/clipboard.ts","webpack://telegram-t/./src/util/cssAnimationEndListeners.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/fastSmoothScroll.ts","webpack://telegram-t/./src/util/fastSmoothScrollHorizontal.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/patchSafariProgressiveAudio.ts","webpack://telegram-t/./src/util/resetScroll.ts","webpack://telegram-t/./src/util/safePlay.ts"],"sourcesContent":["import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { LIKE_STICKER_ID } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  size?: 'large' | 'medium' | 'small';\n  lastSyncTime?: number;\n  forceLoadPreview?: boolean;\n};\n\nconst QUALITY = 1;\nconst WIDTH = {\n  large: 160,\n  medium: 128,\n  small: 104,\n};\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker,\n  size = 'medium',\n  observeIntersection,\n  lastSyncTime,\n  forceLoadPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail?.dataUri;\n  const previewBlobUrl = useMedia(\n    `${localMediaHash}?size=m`,\n    !isIntersecting && !forceLoadPreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const { transitionClassNames } = useTransitionForMedia(previewBlobUrl, 'slow');\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  const width = WIDTH[size];\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {!isAnimationLoaded && thumbDataUri && (\n        <img src={thumbDataUri} className={sticker.id === LIKE_STICKER_ID ? 'like-sticker-thumb' : undefined} alt=\"\" />\n      )}\n      {!isAnimationLoaded && previewBlobUrl && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, {\n  FC, useEffect, useRef, memo, useCallback, useState,\n} from '../../lib/teact/teact';\n\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useHeavyAnimationCheck from '../../hooks/useHeavyAnimationCheck';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\n\ntype OwnProps = {\n  className?: string;\n  id: string;\n  animationData: AnyLiteral;\n  play?: boolean | string;\n  playSegment?: [number, number];\n  speed?: number;\n  noLoop?: boolean;\n  size: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  onLoad?: NoneToVoidFunction;\n};\n\ntype RLottieClass = typeof import('../../lib/rlottie/RLottie').default;\ntype RLottieInstance = import('../../lib/rlottie/RLottie').default;\nlet lottiePromise: Promise<RLottieClass>;\nlet RLottie: RLottieClass;\n\n// Time supposed for judges to measure \"Transferred Size\" in Dev Tools\nconst LOTTIE_LOAD_DELAY = 5000;\n\nasync function ensureLottie() {\n  if (!lottiePromise) {\n    lottiePromise = import('../../lib/rlottie/RLottie') as unknown as Promise<RLottieClass>;\n    RLottie = (await lottiePromise as any).default;\n  }\n\n  return lottiePromise;\n}\n\nsetTimeout(ensureLottie, LOTTIE_LOAD_DELAY);\n\nconst AnimatedSticker: FC<OwnProps> = ({\n  className,\n  id,\n  animationData,\n  play,\n  playSegment,\n  speed,\n  noLoop,\n  size,\n  quality,\n  isLowPriority,\n  onLoad,\n}) => {\n  const [animation, setAnimation] = useState<RLottieInstance>();\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n  const wasPlaying = useRef(false);\n  const isFrozen = useRef(false);\n\n  const playRef = useRef();\n  playRef.current = play;\n  const playSegmentRef = useRef<[number, number]>();\n  playSegmentRef.current = playSegment;\n\n  useEffect(() => {\n    if (animation || !animationData) {\n      return;\n    }\n\n    const exec = () => {\n      if (!container.current) {\n        return;\n      }\n\n      const newAnimation = new RLottie(\n        id,\n        container.current,\n        animationData,\n        {\n          noLoop,\n          size,\n          quality,\n          isLowPriority,\n        },\n        onLoad,\n      );\n\n      if (speed) {\n        newAnimation.setSpeed(speed);\n      }\n\n      setAnimation(newAnimation);\n    };\n\n    if (RLottie) {\n      exec();\n    } else {\n      ensureLottie().then(() => {\n        fastRaf(() => {\n          if (container.current) {\n            exec();\n          }\n        });\n      });\n    }\n  }, [animation, animationData, id, isLowPriority, noLoop, onLoad, quality, size, speed]);\n\n  useEffect(() => {\n    return () => {\n      if (animation) {\n        animation.destroy();\n      }\n    };\n  }, [animation]);\n\n  const playAnimation = useCallback((shouldRestart = false) => {\n    if (animation && (playRef.current || playSegmentRef.current)) {\n      if (playSegmentRef.current) {\n        animation.playSegment(playSegmentRef.current);\n      } else if (shouldRestart) {\n        animation.goToAndPlay(0);\n      } else {\n        animation.play();\n      }\n    }\n  }, [animation]);\n\n  const pauseAnimation = useCallback(() => {\n    if (!animation) {\n      return;\n    }\n\n    animation.pause();\n  }, [animation]);\n\n  const freezeAnimation = useCallback(() => {\n    isFrozen.current = true;\n\n    if (!animation) {\n      return;\n    }\n\n    if (!wasPlaying.current) {\n      wasPlaying.current = animation.isPlaying();\n    }\n\n    pauseAnimation();\n  }, [animation, pauseAnimation]);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (wasPlaying.current) {\n      playAnimation();\n    }\n\n    wasPlaying.current = false;\n    isFrozen.current = false;\n  }, [playAnimation]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  useEffect(() => {\n    if (!animation) {\n      return;\n    }\n\n    if (play || playSegment) {\n      if (isFrozen.current) {\n        wasPlaying.current = true;\n      } else {\n        playAnimation(noLoop);\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isFrozen.current) {\n        wasPlaying.current = false;\n      } else {\n        pauseAnimation();\n      }\n    }\n  }, [animation, play, playSegment, noLoop, playAnimation, pauseAnimation]);\n\n  useHeavyAnimationCheck(freezeAnimation, unfreezeAnimation);\n  // Pausing frame may not happen in background\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n\n  const fullClassName = buildClassName('AnimatedSticker', className);\n\n  const style = size ? `width: ${size}px; height: ${size}px;` : undefined;\n\n  return (\n    <div\n      ref={container}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    />\n  );\n};\n\nexport default memo(AnimatedSticker);\n","import React, {\n  FC, memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport {\n  ApiAudio, ApiMediaFormat, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { AudioOrigin, ISettings } from '../../types';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { renderWaveformToDataUri } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang, { LangFn } from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport { getTranslation } from '../../util/langProvider';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  onPlay: (messageId: number, chatId: number) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst AVG_VOICE_DURATION = 10;\nconst MIN_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 20 : 25;\nconst MAX_SPIKES = IS_SINGLE_COLUMN_LAYOUT ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const playStateBeforeSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n  const dispatch = getDispatch();\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, play, pause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    origin,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isPlaying, isUploading, message.id, message.chatId, onCancelUpload, onPlay, playPause, isActivated]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [dispatch, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    playStateBeforeSeeking.current = isPlaying;\n    pause();\n    handleSeek(e);\n  }, [handleSeek, pause, isPlaying]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n    if (playStateBeforeSeeking.current) play();\n  }, [play]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function getFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function getSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const isOwn = isOwnMessage(message);\n  const renderedWaveform = useMemo(\n    () => voice && renderWaveform(\n      voice,\n      (isMediaUnread && !isOwn) ? 1 : playProgress,\n      isOwn,\n      theme,\n      seekerRef,\n    ),\n    [voice, isMediaUnread, isOwn, playProgress, theme],\n  );\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\" dir=\"auto\" title={getFirstLine()}>{renderText(getFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(lang, date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {withSeekline && (\n            <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n              <span className=\"duration with-seekline\" dir=\"auto\">\n                {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n              </span>\n              {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n            </div>\n          )}\n          {!withSeekline && getSecondLine()}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_SINGLE_COLUMN_LAYOUT}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={isDownloading ? 'icon-close' : 'icon-arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang, audio, duration, isPlaying, playProgress, bufferedProgress, seekerRef, (isDownloading || isUploading),\n        date, transferProgress, onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && renderVoice(voice, renderedWaveform, playProgress, isMediaUnread)}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = getTranslation;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedProgress, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          <span className=\"bullet\">&bull;</span>\n          <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>{formatMediaDateTime(lang, date * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(voice: ApiVoice, renderedWaveform: any, playProgress: number, isMediaUnread?: boolean) {\n  return (\n    <div className=\"content\">\n      {renderedWaveform}\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction renderWaveform(\n  voice: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  theme: ISettings['theme'],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  const { waveform, duration } = voice;\n\n  if (!waveform) {\n    return undefined;\n  }\n\n  const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n  const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n  const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n  const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n  const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n  const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n  const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n  const { data: spikes, peak } = interpolateArray(decodedWaveform, spikesCount);\n  const { src, width, height } = renderWaveformToDataUri(spikes, playProgress, {\n    peak,\n    fillStyle: isOwn ? fillOwnColor : fillColor,\n    progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <img\n      src={src}\n      alt=\"\"\n      width={width}\n      height={height}\n      className=\"waveform\"\n      draggable={false}\n      ref={seekerRef as React.Ref<HTMLImageElement>}\n    />\n  );\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveformToDataUri(\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  const canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n\n  return {\n    src: canvas.toDataURL(),\n    width,\n    height,\n  };\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiChat, ApiMediaFormat, ApiUser } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isChatPrivate,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../modules/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useLang from '../../hooks/useLang';\n\nimport './Avatar.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  withOnlineStatus?: boolean;\n  chat?: ApiChat;\n  user?: ApiUser;\n  text?: string;\n  isSavedMessages?: boolean;\n  lastSyncTime?: number;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  text,\n  withOnlineStatus,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  let imageHash: string | undefined;\n\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat);\n    }\n  }\n\n  const blobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const { shouldRenderFullMedia, transitionClassNames } = useTransitionForMedia(blobUrl, 'slow');\n\n  const lang = useLang();\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isReplies) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (shouldRenderFullMedia) {\n    content = <img src={blobUrl} className={`${transitionClassNames} avatar-media`} alt=\"\" decoding=\"async\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && isUserOnline(user);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    withOnlineStatus && isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !shouldRenderFullMedia) && 'no-photo',\n  );\n\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, isSavedMessages || shouldRenderFullMedia);\n    }\n  }, [onClick, isSavedMessages, shouldRenderFullMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div className={fullClassName} onClick={handleClick} data-test-sender-id={IS_TEST ? senderId : undefined}>\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import React, {\n  FC, memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { ApiChat, ApiCountryCode, ApiUser } from '../../api/types';\n\nimport {\n  selectChat, selectNotifyExceptions, selectNotifySettings, selectUser,\n} from '../../modules/selectors';\nimport {\n  getChatDescription, getChatLink, getHasAdminRight, isChatChannel, isChatPrivate, isUserRightBanned, selectIsChatMuted,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'updateChatMutedState' | 'showNotification'>;\n\nconst ChatExtra: FC<OwnProps & StateProps & DispatchProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  loadFullUser,\n  showNotification,\n  updateChatMutedState,\n}) => {\n  const {\n    id: userId,\n    fullInfo,\n    username,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId } = chat || {};\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const handleNotificationChange = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: !isMuted });\n  }, [chatId, isMuted, updateChatMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n  const link = getChatLink(chat);\n  const description = (fullInfo?.bio) || getChatDescription(chat);\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && !!formattedNumber.length && (\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {username && (\n        <ListItem\n          icon=\"mention\"\n          multiline\n          narrow\n          ripple\n          onClick={() => copy(`@${username}`, lang('Username'))}\n        >\n          <span className=\"title\" dir=\"auto\">{renderText(username)}</span>\n          <span className=\"subtitle\">{lang('Username')}</span>\n        </ListItem>\n      )}\n      {description && !!description.length && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {(canInviteUsers || !username) && link && (\n        <ListItem icon=\"mention\" multiline narrow ripple onClick={() => copy(link, lang('SetUrlPlaceholder'))}>\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime, phoneCodeList, chat, user, canInviteUsers, isMuted,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadFullUser', 'updateChatMutedState', 'showNotification',\n  ]),\n)(ChatExtra));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isChatPrivate,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: number | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'leaveChannel' | 'deleteHistory' | 'deleteChannel' | 'deleteChatUser' | 'blockContact'\n)>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n  deleteChatUser,\n  blockContact,\n}) => {\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderMessage() {\n    if (isChannel && chat.isCreator) {\n      return <p>{renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderMessage()}\n      {isBot && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n          {lang('DeleteAndStop')}\n        </Button>\n      )}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {lang(renderActionText())}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isChatPrivate(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions,\n    ['leaveChannel', 'deleteHistory', 'deleteChannel', 'deleteChatUser', 'blockContact']),\n)(DeleteChatModal));\n","import React, {\n  FC, useCallback, memo, useRef,\n} from '../../lib/teact/teact';\nimport { getDispatch } from '../../lib/teact/teactn';\n\nimport { ApiMediaFormat, ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const extension = getDocumentExtension(document) || '';\n  const { fileName, size, timestamp } = document;\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const dispatch = getDispatch();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress<ApiMediaFormat.BlobUrl>(\n    getMessageMediaHash(message, 'download'), !isDownloading, undefined, undefined, undefined, true,\n  );\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, isDownloading);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const handleClick = useCallback(() => {\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [withMediaViewer, isUploading, isDownloading, onMediaClick, onCancelUpload, dispatch, message]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(previewData, 'slow');\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            {shouldRenderThumb && (\n              <img\n                src={thumbnailDataUri}\n                width={width}\n                height={height}\n                className=\"thumbnail\"\n                alt=\"\"\n              />\n            )}\n            {shouldRenderFullMedia && (\n              <img\n                src={previewData}\n                className={`full-media ${transitionClassNames}`}\n                width={width}\n                height={height}\n                alt=\"\"\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\">{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withUsername ? chat.username : undefined;\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3 dir=\"auto\">{renderText(getChatTitle(lang, chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'openMediaViewer']),\n)(GroupChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(mediaBlobUrl, 'slow');\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      {shouldRenderThumb && (\n        <img src={thumbDataUri} alt=\"\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img src={mediaBlobUrl} className={`${transitionClassNames} full-media`} alt=\"\" />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  FC, useCallback, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport { isChatPrivate } from '../../modules/helpers';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: number[];\n  selectedIds: number[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  onSelectedIdsChange: (ids: number[]) => void;\n  onFilterChange: (value: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  onSelectedIdsChange,\n  onFilterChange,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: number) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange(newSelectedIds);\n    onFilterChange('');\n  }, [selectedIds, onSelectedIdsChange, onFilterChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, itemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          id={searchInputId}\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={filterPlaceholder || lang('SelectChat')}\n        />\n      </div>\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable picker-list-item\"\n              onClick={() => handleItemClick(id)}\n              ripple\n            >\n              <Checkbox label=\"\" checked={selectedIds.includes(id)} />\n              {isChatPrivate(id) ? (\n                <PrivateChatInfo userId={id} />\n              ) : (\n                <GroupChatInfo chatId={id} />\n              )}\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isChatPrivate } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: number;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  const lang = useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n        {withUsername && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {user?.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, isSavedMessages, areMessagesLoaded, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isChatPrivate,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useBlurSync from '../../hooks/useBlurSync';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isFirstPhoto?: boolean;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isFirstPhoto,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const lang = useLang();\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n\n  function getMediaHash(size: 'normal' | 'big', forceAvatar?: boolean) {\n    if (photo && !forceAvatar) {\n      return `photo${photo.id}?size=c`;\n    }\n\n    let hash: string | undefined;\n    if (!isSavedMessages && !isDeleted && !isRepliesChat) {\n      if (user) {\n        hash = getChatAvatarHash(user, size);\n      } else if (chat) {\n        hash = getChatAvatarHash(chat, size);\n      }\n    }\n\n    return hash;\n  }\n\n  const photoBlobUrl = useMedia(getMediaHash('big'), false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const avatarMediaHash = isFirstPhoto && !photoBlobUrl ? getMediaHash('normal', true) : undefined;\n  const avatarBlobUrl = useMedia(avatarMediaHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const thumbDataUri = useBlurSync(!photoBlobUrl && photo && photo.thumbnail && photo.thumbnail.dataUri);\n  const imageSrc = photoBlobUrl || avatarBlobUrl || thumbDataUri;\n  const prevImageSrc = usePrevious(imageSrc);\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon-reply-filled\" />;\n  } else if (imageSrc) {\n    content = <img src={imageSrc} className=\"avatar-media\" alt=\"\" decoding=\"async\" />;\n  } else if (!imageSrc && user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (!imageSrc && chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !(imageSrc)) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={imageSrc ? onClick : undefined}>\n      {prevImageSrc && imageSrc && prevImageSrc !== imageSrc && (\n        <img src={prevImageSrc} className=\"prev-avatar-media\" alt=\"\" decoding=\"async\" />\n      )}\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","import React, {\n  FC, useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiChat } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport {\n  getUserFullName, getUserStatus, isChatChannel, isUserOnline,\n} from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\n\nimport './ProfileInfo.scss';\n\ntype OwnProps = {\n  userId: number;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  isSavedMessages?: boolean;\n  animationLevel: 0 | 1 | 2;\n  serverTimeOffset: number;\n} & Pick<GlobalState, 'connectionState'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst ProfileInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  forceShowSelf,\n  user,\n  chat,\n  isSavedMessages,\n  connectionState,\n  animationLevel,\n  loadFullUser,\n  openMediaViewer,\n  serverTimeOffset,\n}) => {\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const fullName = user ? getUserFullName(user) : (chat ? chat.title : '');\n  const photos = user?.photos || chat?.photos || [];\n  const slideAnimation = animationLevel >= 1 ? 'slide' : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      profilePhotoIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  // Support for swipe gestures and closing on click\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>('.photo-wrapper');\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"photo-dashes\">\n        {photos.map((_, i) => (\n          <span className={`photo-dash ${i === currentPhotoIndex ? 'current' : ''}`} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto() {\n    const photo = !isSavedMessages && photos && photos.length > 0 ? photos[currentPhotoIndex] : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        isSavedMessages={isSavedMessages}\n        isFirstPhoto={isFirst}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, serverTimeOffset)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"status\" dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  const isVerifiedIconShown = (user || chat)?.isVerified;\n\n  return (\n    <div className={buildClassName('ProfileInfo', forceShowSelf && 'self')} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"photo-wrapper\">\n        {renderPhotoTabs()}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation} className=\"profile-slide-container\">\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            className=\"navigation prev\"\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            className=\"navigation next\"\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className=\"info\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3 dir=\"auto\">{fullName && renderText(fullName)}</h3>\n            {isVerifiedIconShown && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState, serverTimeOffset } = global;\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { animationLevel } = global.settings.byKey;\n\n    return {\n      connectionState, user, chat, isSavedMessages, animationLevel, serverTimeOffset,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(ProfileInfo));\n","import {\n  ApiChat, ApiMediaFormat, ApiPhoto, ApiUser,\n} from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { useIsIntersecting, ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport AnimatedSticker from './AnimatedSticker';\nimport Button from '../ui/Button';\n\nimport './StickerButton.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  size: number;\n  observeIntersection: ObserveFn;\n  noAnimate?: boolean;\n  title?: string;\n  className?: string;\n  onClick?: (arg: any) => void;\n  clickArg?: any;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n};\n\nconst StickerButton: FC<OwnProps> = ({\n  sticker, size, observeIntersection, noAnimate, title, className, onClick, clickArg, onUnfaveClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const localMediaHash = `sticker${sticker.id}`;\n  const stickerSelector = `sticker-button-${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const thumbDataUri = sticker.thumbnail ? sticker.thumbnail.dataUri : undefined;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl);\n\n  const shouldPlay = isIntersecting && !noAnimate;\n  const lottieData = useMedia(sticker.isAnimated && localMediaHash, !shouldPlay, ApiMediaFormat.Lottie);\n  const [isAnimationLoaded, markLoaded, unmarkLoaded] = useFlag(Boolean(lottieData));\n  const canAnimatedPlay = isAnimationLoaded && shouldPlay;\n\n  const {\n    shouldRenderThumb,\n    shouldRenderFullMedia: shouldRenderPreview,\n    transitionClassNames: previewTransitionClassNames,\n  } = useTransitionForMedia(previewBlobUrl || canAnimatedPlay, 'slow');\n\n  // To avoid flickering\n  useEffect(() => {\n    if (!shouldPlay) {\n      unmarkLoaded();\n    }\n  }, [unmarkLoaded, shouldPlay]);\n\n  function handleClick() {\n    if (onClick) {\n      onClick(clickArg);\n    }\n  }\n\n  function handleUnfaveClick(e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onUnfaveClick!(sticker);\n  }\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    sticker.isAnimated && 'animated',\n    stickerSelector,\n    className,\n  );\n\n  const style = shouldRenderThumb && thumbDataUri ? `background-image: url('${thumbDataUri}');` : '';\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      // @ts-ignore\n      style={style}\n      data-sticker-id={sticker.id}\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={handleClick}\n    >\n      {shouldRenderPreview && !canAnimatedPlay && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={previewBlobUrl} className={previewTransitionClassNames} />\n      )}\n      {shouldPlay && lottieData && (\n        <AnimatedSticker\n          id={localMediaHash}\n          animationData={lottieData}\n          play\n          size={size}\n          isLowPriority\n          onLoad={markLoaded}\n        />\n      )}\n      {onUnfaveClick && (\n        <Button\n          className=\"sticker-unfave-button\"\n          color=\"dark\"\n          round\n          onClick={handleUnfaveClick}\n        >\n          <i className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default memo(StickerSetModalAsync);\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      {/* fix for translation \"username _is_ typing\" */}\n      {lang(typingStatus.action).replace('{user}', '').trim()}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: number) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({ message, senderTitle, onMessageClick }) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(lang, message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {truncatedDescription && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {renderText(truncatedDescription)}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n          isRtl={lang.isRtl}\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import {\n  ApiPhoto, ApiVideo, ApiSticker, ApiDimensions,\n} from '../../../api/types';\n\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport windowSize from '../../../util/windowSize';\nimport { getPhotoInlineDimensions, getVideoDimensions } from '../../../modules/helpers';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS_PX = 240;\nexport const GIF_MIN_WIDTH = 300;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\nexport const LIKE_STICKER_ID = '1258816259753933';\n\nconst DEFAULT_MEDIA_DIMENSIONS: ApiDimensions = { width: 100, height: 100 };\nconst MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM = 4.5;\nconst MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM = 7;\nconst MESSAGE_MAX_WIDTH_REM = 29;\nconst MESSAGE_OWN_MAX_WIDTH_REM = 30;\n\nlet cachedMaxWidthOwn: number | undefined;\nlet cachedMaxWidth: number | undefined;\nlet cachedMaxWidthNoAvatar: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean, noAvatars?: boolean) {\n  const regularMaxWidth = fromOwnMessage ? MESSAGE_OWN_MAX_WIDTH_REM : MESSAGE_MAX_WIDTH_REM;\n  if (!IS_SINGLE_COLUMN_LAYOUT) {\n    return regularMaxWidth;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidthOwn) {\n    cachedMaxWidthOwn = Math.min(\n      MESSAGE_OWN_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n  if (!cachedMaxWidthNoAvatar) {\n    cachedMaxWidthNoAvatar = Math.min(\n      MESSAGE_MAX_WIDTH_REM,\n      windowWidth / REM - MOBILE_SCREEN_NO_AVATARS_MESSAGE_EXTRA_WIDTH_REM,\n    );\n  }\n\n  return fromOwnMessage\n    ? cachedMaxWidthOwn\n    : (noAvatars ? cachedMaxWidthNoAvatar : cachedMaxWidth);\n}\n\nexport function getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage, noAvatars) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n  noAvatars,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n  noAvatars?: boolean;\n}): ApiDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto, noAvatars);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n  const mediaWidth = isGif ? Math.max(GIF_MIN_WIDTH, width) : width;\n  const mediaHeight = isGif ? height * (mediaWidth / width) : height;\n\n  return calculateDimensions(availableWidth, availableHeight, mediaWidth, mediaHeight);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): ApiDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n    noAvatars,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  noAvatars?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n    noAvatars,\n  });\n}\n\nexport function getPictogramDimensions(): ApiDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): ApiDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): ApiDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = REM * (\n    IS_SINGLE_COLUMN_LAYOUT\n      ? STICKER_SIZE_INLINE_MOBILE_FACTOR\n      : STICKER_SIZE_INLINE_DESKTOP_FACTOR\n  );\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: ApiDimensions, withFooter: boolean, isVideo: boolean = false,\n): ApiDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): ApiDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities: IOrganizedEntity[] = [];\n  const parsedNestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  parsedNestedEntities.forEach((parsedEntity) => {\n    let isChanged = false;\n\n    parsedEntity.organizedIndexes.forEach((organizedIndex) => {\n      if (!isChanged && !organizedIndexes.has(organizedIndex)) {\n        isChanged = true;\n      }\n\n      organizedIndexes.add(organizedIndex);\n    });\n\n    if (isChanged) {\n      nestedEntities.push(parsedEntity);\n    }\n  });\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntities = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntities.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntities.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n          dir=\"auto\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['escape_html', 'emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['escape_html', 'emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n        dir=\"auto\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import { useCallback } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<number, number>) {\n  const movesUp = useCallback((id: number) => orderDiffById[id] < 0, [orderDiffById]);\n  const movesDown = useCallback((id: number) => orderDiffById[id] > 0, [orderDiffById]);\n\n  const orderDiffIds = Object.keys(orderDiffById).map(Number);\n  const numberOfUp = orderDiffIds.filter(movesUp).length;\n  const numberOfDown = orderDiffIds.filter(movesDown).length;\n\n  return useCallback((chatId: number): ChatAnimationTypes => {\n    const orderDiff = orderDiffById[chatId];\n\n    if (orderDiff === 0) {\n      return ChatAnimationTypes.None;\n    }\n\n    if (\n      orderDiff === Infinity\n      || orderDiff === -Infinity\n      || (movesUp(chatId) && numberOfUp <= numberOfDown)\n      || (movesDown(chatId) && numberOfDown < numberOfUp)\n    ) {\n      return ChatAnimationTypes.Opacity;\n    }\n\n    return ChatAnimationTypes.Move;\n  }, [movesDown, movesUp, numberOfDown, numberOfUp, orderDiffById]);\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n  isMuted?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned, isMuted }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang, { LangFn } from '../../../hooks/useLang';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isChatPrivate,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n  selectIsChatMuted,\n  getMessageRoundVideo,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n  selectNotifySettings, selectNotifyExceptions,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\nimport ChatFolderModal from '../ChatFolderModal.async';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: number;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  privateChatUser?: ApiUser;\n  actionTargetUserIds?: number[];\n  usersById?: Record<number, ApiUser>;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: number;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  animationLevel?: number;\n  isSelected?: boolean;\n  canScrollDown?: boolean;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  chat,\n  isMuted,\n  privateChatUser,\n  actionTargetUserIds,\n  usersById,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  animationLevel,\n  isSelected,\n  canScrollDown,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    return actionTargetUserIds\n      ? actionTargetUserIds.map((userId) => usersById?.[userId]).filter<ApiUser>(Boolean as any)\n      : undefined;\n  }, [actionTargetUserIds, usersById]);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (animationLevel === 0 || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId, shouldReplaceHistory: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    canScrollDown,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  function handleDelete() {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }\n\n  function handleChatFolderChange() {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }\n\n  const contextActions = useChatContextActions({\n    chat,\n    privateChatUser,\n    handleDelete,\n    handleChatFolderChange,\n    folderId,\n    isPinned,\n    isMuted,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderText(renderActionMessageText(\n            lang,\n            lastMessage,\n            actionOrigin,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderMessageSummary(lang, lastMessage!, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isChatPrivate(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_SINGLE_COLUMN_LAYOUT}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={privateChatUser}\n          withOnlineStatus\n          isSavedMessages={privateChatUser?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(lang, chat, privateChatUser))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {isMuted && <i className=\"icon-muted-chat\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta message={chat.lastMessage} outgoingStatus={lastMessageOutgoingStatus} />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(lang, message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={isRoundVideo ? 'round' : undefined} />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(lang, message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { byId: usersById } = global.users;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      animationLevel: global.settings.byKey.animationLevel,\n      isSelected,\n      canScrollDown: isSelected && messageListType === 'thread',\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n      ...(actionTargetUserIds && { usersById }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, { FC, memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../../../util/environment';\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../modules/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport AnimatedEmoji from '../../common/AnimatedEmoji';\n\nimport './EmptyFolder.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch?: FolderEditDispatch;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch!({ type: 'editFolder', payload: chatFolder });\n    onScreenSelect!(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onScreenSelect]);\n\n  return (\n    <div className=\"EmptyFolder\">\n      <div className=\"sticker\">{animatedEmoji && <AnimatedEmoji sticker={animatedEmoji} />}</div>\n      <h3 className=\"title\" dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className=\"description\" dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && foldersDispatch && onScreenSelect && (\n        <Button\n          ripple={!IS_SINGLE_COLUMN_LAYOUT}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon-settings\" />\n          {lang('ChatList.EmptyChatListEditFilter')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser,\n} from '../../../api/types';\nimport { NotifyException, NotifySettings, SettingsScreens } from '../../../types';\nimport { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID, IS_MAC_OS, IS_PWA } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport { getChatOrder, prepareChatList, prepareFolderListIds } from '../../../modules/helpers';\nimport {\n  selectChatFolder, selectNotifyExceptions, selectNotifySettings,\n} from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  onScreenSelect?: (screen: SettingsScreens) => void;\n  foldersDispatch?: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatsById: Record<number, ApiChat>;\n  usersById: Record<number, ApiUser>;\n  chatFolder?: ApiChatFolder;\n  listIds?: number[];\n  orderedPinnedIds?: number[];\n  lastSyncTime?: number;\n  notifySettings: NotifySettings;\n  notifyExceptions?: Record<number, NotifyException>;\n};\n\ntype DispatchProps = Pick<GlobalActions, (\n  'loadMoreChats' | 'preloadTopChatMessages' | 'preloadArchivedChats' | 'openChat' | 'openNextChat'\n)>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived',\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  chatFolder,\n  chatsById,\n  usersById,\n  listIds,\n  orderedPinnedIds,\n  lastSyncTime,\n  foldersDispatch,\n  notifySettings,\n  notifyExceptions,\n  onScreenSelect,\n  loadMoreChats,\n  preloadTopChatMessages,\n  preloadArchivedChats,\n  openChat,\n  openNextChat,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(chatsById, usersById, chatFolder, notifySettings, notifyExceptions)\n      : [listIds, orderedPinnedIds];\n  }, [folderType, chatFolder, chatsById, usersById, notifySettings, notifyExceptions, listIds, orderedPinnedIds]);\n\n  const [orderById, orderedIds] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = [...newChatArrays.pinnedChats, ...newChatArrays.otherChats];\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return order - (prevOrderById[id] !== undefined ? prevOrderById[id] : Infinity);\n    });\n  }, [orderById, prevOrderById]);\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  // TODO Refactor to not call `prepareChatList` twice\n  const chatArrays = viewportIds && prepareChatList(chatsById, viewportIds, currentPinnedIds, folderType);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n      preloadArchivedChats();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages, preloadArchivedChats]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + chatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {chatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {chatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isActive && orderedIds) {\n        if (IS_PWA && ((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n          const [, digit] = e.code.match(/Digit(\\d)/) || [];\n          if (!digit) return;\n\n          const position = Number(digit) - 1;\n          if (position > orderedIds.length - 1) return;\n\n          openChat({ id: orderedIds[position], shouldReplaceHistory: true });\n        }\n\n        if (e.altKey) {\n          const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n          if (!targetIndexDelta) return;\n\n          e.preventDefault();\n          openNextChat({ targetIndexDelta, orderedIds });\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  });\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      noScrollRestore\n    >\n      {viewportIds?.length && chatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onScreenSelect={onScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      chatsById,\n      usersById,\n      lastSyncTime,\n      notifySettings: selectNotifySettings(global),\n      notifyExceptions: selectNotifyExceptions(global),\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'loadMoreChats',\n    'preloadTopChatMessages',\n    'preloadArchivedChats',\n    'openChat',\n    'openNextChat',\n  ]),\n)(ChatList));\n","import { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatPrivate,\n  isChatGroup,\n} from '../../../../modules/helpers';\nimport { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<number, ApiChat>, usersById: Record<number, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isChatPrivate(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isChatPrivate(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import React, { FC, memo } from '../../../lib/teact/teact';\nimport { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_IOS, IS_SINGLE_COLUMN_LAYOUT, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport useLang from '../../../hooks/useLang';\nimport renderText from '../../common/helpers/renderText';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\ntype OwnProps = {\n  id: string;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  shouldSetFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: number;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage' | 'replyToNextMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_SINGLE_COLUMN_LAYOUT ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  isAttachmentModalInput,\n  editableInputId,\n  html,\n  placeholder,\n  forcedPlaceholder,\n  shouldSetFocus,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n  replyToNextMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput]);\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight(!html.length);\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    // Avoid focusing during animation\n    if (inputRef.current!.closest('.from, .to')) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      processSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      processSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (e.metaKey && !html.length) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length && !e.metaKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (!IS_TOUCH_ENV && (!textContent || !textContent.length)) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight(willSend = false) {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    const currentHeight = Number(input.style.height.replace('px', ''));\n    const newHeight = Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT);\n    if (newHeight === currentHeight) {\n      return;\n    }\n\n    const transitionDuration = Math.round(\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n    );\n\n    const exec = () => {\n      input.style.height = `${newHeight}px`;\n      input.style.transitionDuration = `${transitionDuration}ms`;\n      input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n    };\n\n    if (willSend) {\n      // Sync with sending animation\n      requestAnimationFrame(exec);\n    } else {\n      exec();\n    }\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (shouldSetFocus) {\n      focusInput();\n    }\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        dir=\"auto\"\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={IS_ANDROID ? stopEvent : undefined}\n        onTouchCancel={IS_ANDROID ? processSelection : undefined}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n      {!forcedPlaceholder && <span className=\"placeholder-text\" dir=\"auto\">{placeholder}</span>}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage', 'replyToNextMessage']),\n)(MessageInput));\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.innerText = selectedRange.toString();\n\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, []);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, []);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, []);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = encodeURI(linkUrl.includes('://') ? linkUrl : `http://${linkUrl}`);\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport {\n  EmojiData, EmojiModule, EmojiRawData, uncompressEmoji,\n} from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, flatten, mapValues, pickTruthy, unique,\n} from '../../../../util/iteratees';\nimport useFlag from '../../../../hooks/useFlag';\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\ntry {\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\p{L}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = new RegExp('(^|\\\\s):[-+_:\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useEmojiTooltip(\n  isAllowed: boolean,\n  html: string,\n  recentEmojiIds: string[],\n  inputId = EDITABLE_INPUT_ID,\n  onUpdateHtml: (html: string) => void,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n  isDisabled = false,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [keywords, setKeywords] = useState<string[]>();\n  const [byKeyword, setByKeyword] = useState<Record<string, Emoji[]>>({});\n  const [names, setNames] = useState<string[]>();\n  const [byName, setByName] = useState<Record<string, Emoji[]>>({});\n  const [shouldForceInsertEmoji, setShouldForceInsertEmoji] = useState(false);\n\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n\n  const recentEmojis = useMemo(\n    () => {\n      if (!byId || !recentEmojiIds.length) {\n        return [];\n      }\n\n      return Object.values(pickTruthy(byId, recentEmojiIds));\n    },\n    [byId, recentEmojiIds],\n  );\n\n  // Initialize data on first render.\n  useEffect(() => {\n    if (isDisabled) return;\n    const exec = () => {\n      setById(emojiData.emojis);\n    };\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData()\n        .then(exec);\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (!byId || isDisabled) {\n      return;\n    }\n\n    const emojis = Object.values(byId);\n\n    const byNative = buildCollectionByKey(emojis, 'native');\n    const baseEmojisByKeyword = baseEmojiKeywords\n      ? mapValues(baseEmojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n    const emojisByKeyword = emojiKeywords\n      ? mapValues(emojiKeywords, (natives) => {\n        return Object.values(pickTruthy(byNative, natives));\n      })\n      : {};\n\n    setByKeyword({ ...baseEmojisByKeyword, ...emojisByKeyword });\n    setKeywords([...Object.keys(baseEmojisByKeyword), ...Object.keys(emojisByKeyword)]);\n\n    const emojisByName = emojis.reduce((result, emoji) => {\n      emoji.names.forEach((name) => {\n        if (!result[name]) {\n          result[name] = [];\n        }\n\n        result[name].push(emoji);\n      });\n\n      return result;\n    }, {} as Record<string, Emoji[]>);\n    setByName(emojisByName);\n    setNames(Object.keys(emojisByName));\n  }, [isDisabled, baseEmojiKeywords, byId, emojiKeywords]);\n\n  useEffect(() => {\n    if (!isAllowed || !html || !byId || !keywords || !keywords.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const code = html.includes(':') && getEmojiCode(html);\n    if (!code) {\n      setFilteredEmojis(MEMO_EMPTY_ARRAY);\n      unmarkIsOpen();\n      return;\n    }\n\n    const forceSend = code.length > 2 && code.endsWith(':');\n    const filter = code.substr(1, forceSend ? code.length - 2 : undefined);\n    let matched: Emoji[] = [];\n\n    setShouldForceInsertEmoji(forceSend);\n\n    if (!filter) {\n      matched = recentEmojis;\n    } else if (filter.length >= FILTER_MIN_LENGTH) {\n      const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n      matched = matched.concat(flatten(Object.values(pickTruthy(byKeyword, matchedKeywords))));\n\n      // Also search by names, which is useful for non-English languages\n      const matchedNames = names.filter((name) => name.startsWith(filter));\n      matched = matched.concat(flatten(Object.values(pickTruthy(byName, matchedNames))));\n\n      matched = unique(matched);\n    }\n\n    if (matched.length) {\n      if (!forceSend) {\n        markIsOpen();\n      }\n      setFilteredEmojis(matched.slice(0, EMOJIS_LIMIT));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [\n    byId, byKeyword, keywords, byName, names, html, isAllowed, markIsOpen,\n    recentEmojis, unmarkIsOpen, setShouldForceInsertEmoji,\n  ]);\n\n  const insertEmoji = useCallback((textEmoji: string, isForce?: boolean) => {\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${textEmoji}`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, true);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (isOpen && shouldForceInsertEmoji && filteredEmojis.length) {\n      insertEmoji(filteredEmojis[0].native, true);\n    }\n  }, [filteredEmojis, insertEmoji, isOpen, shouldForceInsertEmoji]);\n\n  return {\n    isEmojiTooltipOpen: isOpen,\n    closeEmojiTooltip: unmarkIsOpen,\n    filteredEmojis,\n    insertEmoji,\n  };\n}\n\nfunction getEmojiCode(html: string) {\n  const emojis = prepareForRegExp(html).match(RE_EMOJI_SEARCH);\n\n  return emojis ? emojis[0].trim() : undefined;\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json') as unknown as Promise<EmojiModule>;\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n","import {\n  useCallback, useEffect, useState, useMemo,\n} from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\nimport { unique } from '../../../../util/iteratees';\nimport { throttle } from '../../../../util/schedulers';\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\nlet RE_USERNAME_SEARCH: RegExp;\n\ntry {\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\p{L}\\\\p{M}\\\\p{N}]*$', 'gui');\n} catch (e) {\n  // Support for older versions of firefox\n  RE_USERNAME_SEARCH = new RegExp('(^|\\\\s)@[-_\\\\d\\\\wа-яё]*$', 'gi');\n}\n\nexport default function useMentionTooltip(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: number[],\n  currentUserId?: number,\n  usersById?: Record<number, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [usersToMention, setUsersToMention] = useState<ApiUser[] | undefined>();\n\n  const topInlineBots = useMemo(() => {\n    return (topInlineBotIds || []).map((id) => usersById?.[id]).filter<ApiUser>(Boolean as any);\n  }, [topInlineBotIds, usersById]);\n\n  const getFilteredUsers = useCallback((filter, withInlineBots: boolean) => {\n    if (!(groupChatMembers || topInlineBotIds) || !usersById) {\n      setUsersToMention(undefined);\n\n      return;\n    }\n    runThrottled(() => {\n      const inlineBots = (withInlineBots ? topInlineBots : []).filter((inlineBot) => {\n        return !filter || searchUserName(filter, inlineBot);\n      });\n\n      const chatMembers = (groupChatMembers || [])\n        .map(({ userId }) => usersById[userId])\n        .filter((user) => {\n          if (!user || user.id === currentUserId) {\n            return false;\n          }\n\n          return !filter || searchUserName(filter, user);\n        });\n\n      setUsersToMention(unique(inlineBots.concat(chatMembers)));\n    });\n  }, [currentUserId, groupChatMembers, topInlineBotIds, topInlineBots, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = html.includes('@') && getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      getFilteredUsers(filter, canSuggestInlineBots(html));\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredUsers, markIsOpen, unmarkIsOpen]);\n\n  useEffect(() => {\n    if (usersToMention?.length) {\n      markIsOpen();\n    } else {\n      unmarkIsOpen();\n    }\n  }, [markIsOpen, unmarkIsOpen, usersToMention]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      requestAnimationFrame(() => {\n        focusEditableElement(messageInput, forceFocus);\n      });\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionTooltipOpen: isOpen,\n    closeMentionTooltip: unmarkIsOpen,\n    insertMention,\n    mentionFilteredUsers: usersToMention,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const username = prepareForRegExp(html).match(RE_USERNAME_SEARCH);\n\n  return username ? username[0].trim() : undefined;\n}\n\nfunction canSuggestInlineBots(html: string) {\n  return html.startsWith('@');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useCallback, memo, useState,\n} from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={confirmHandler}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Button, { OwnProps as ButtonProps } from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: any;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport React, {\n  FC, useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: any;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    if (noScrollRestore) {\n      return;\n    }\n\n    if (noScrollRestoreOnTop && container.scrollTop === 0) {\n      return;\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onScroll={handleScroll}\n      teactFastList={!noFastList}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ninterface MenuItemContextAction {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n}\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    buttonRef,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    focus,\n    destructive,\n    multiline,\n    isStatic,\n    contextActions,\n    onMouseDown,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      fastRaf(unmarkIsTouched);\n    }\n  }, [disabled, markIsTouched, onClick, ripple, unmarkIsTouched]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      // @ts-ignore\n      style={style}\n      onMouseDown={onMouseDown}\n    >\n      <div\n        className={buildClassName('ListItem-button', isTouched && 'active')}\n        role=\"button\"\n        ref={buttonRef}\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, {\n  FC, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: any;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: any;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  title,\n  className,\n  isOpen,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  children,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  const { forceClose } = useHistoryBack(isOpen, onClose);\n\n  // For modals that are closed by unmounting without changing `isOpen` to `false`\n  useEffect(() => {\n    return () => {\n      if (isOpen) {\n        forceClose();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\">\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import { FC, useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: any;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  FC, useLayoutEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  active?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  active,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (!active || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tab = tabRef.current!;\n    const indicator = tab.querySelector('i')!;\n    const prevTab = tab.parentElement!.children[previousActiveTab];\n    if (!prevTab) {\n      return;\n    }\n    const currentIndicator = prevTab.querySelector('i')!;\n\n    currentIndicator.classList.remove('animate');\n    indicator.classList.remove('animate');\n\n    // We move and resize our indicator so it repeats the position and size of the previous one.\n    const shiftLeft = currentIndicator.parentElement!.offsetLeft - indicator.parentElement!.offsetLeft;\n    const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n    indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n    // 3 AFs needed here to synchronize animations with Transition component\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          // Now we remove the transform to let it animate to its own position and size.\n          indicator.classList.add('animate');\n          indicator.style.transform = 'none';\n        });\n      });\n    });\n  }, [active, previousActiveTab]);\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName('Tab', className, active && 'active')}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {renderText(title)}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && 'active')}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </button>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, big, onSwitchTab,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef.current);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    if (container.scrollWidth <= container.offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.querySelector('.Tab.active') as HTMLElement | null;\n    if (activeTabElement) {\n      const newLeft = activeTabElement.offsetLeft - (container.offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n      // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n      if (Math.abs(newLeft - container.scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n        return;\n      }\n\n      fastSmoothScrollHorizontal(container, newLeft);\n    }\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          active={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { waitForAnimationEnd } from '../../util/cssAnimationEndListeners';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean, currentKey: number) => any;\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'slide-reversed' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'slide-layers'\n    | 'fade' | 'push-slide' | 'reveal'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  cleanupExceptionKey?: number;\n  id?: string;\n  className?: string;\n  onStart?: () => void;\n  onStop?: () => void;\n  children: ChildrenFn;\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst Transition: FC<OwnProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  cleanupExceptionKey,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n}) => {\n  // No need for a container to update on change\n  const { animationLevel } = getGlobal().settings.byKey;\n  const currentKeyRef = useRef<number>();\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup || (cleanupExceptionKey !== undefined && cleanupExceptionKey === prevActiveKey)) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      childElements[0].classList.add('active');\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle('active', i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove('active');\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    let dispatchHeavyAnimationStop: NoneToVoidFunction;\n    if (animationLevel > 0) {\n      dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n    }\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      if (onStart) {\n        onStart();\n      }\n\n      function onAnimationEnd() {\n        requestAnimationFrame(() => {\n          if (activeKey !== currentKeyRef.current) {\n            return;\n          }\n\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle('active', i === activeIndex);\n            }\n          });\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>('.active');\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          if (dispatchHeavyAnimationStop) {\n            dispatchHeavyAnimationStop();\n          }\n\n          cleanup();\n\n          if (onStop) {\n            onStop();\n          }\n        });\n      }\n\n      const watchedNode = name === 'mv-slide'\n        ? childNodes[activeIndex]?.firstChild\n        : name === 'reveal' && isBackwards\n          ? childNodes[prevActiveIndex]\n          : childNodes[activeIndex];\n\n      currentKeyRef.current = activeKey;\n\n      if (animationLevel > 0 && watchedNode) {\n        waitForAnimationEnd(watchedNode, onAnimationEnd);\n      } else {\n        onAnimationEnd();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    cleanupExceptionKey,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>('.active')\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n        container.style.flexBasis = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function'\n        ? <div key={key}>{render(key === activeKey, key === prevActiveKey, activeKey)}</div>\n        : undefined\n    );\n  });\n\n  const fullClassName = buildClassName(\n    'Transition',\n    className,\n    name,\n  );\n\n  return (\n    <div ref={containerRef} id={id} className={fullClassName}>\n      {contents}\n    </div>\n  );\n};\n\nexport default Transition;\n","import useReducer, { StateReducer, Dispatch } from '../useReducer';\nimport { ApiChatFolder } from '../../api/types';\nimport { pick, omit } from '../../util/iteratees';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: number[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters'\n);\nexport type FolderEditDispatch = Dispatch<FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport default () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\n\nimport { register, Track, TrackId } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\nimport {\n  MediaSessionHandlers, registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nexport default (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, trackType, origin, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay':\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          break;\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          setPositionState({\n            duration: proxy.duration,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play, pause, setCurrentTime, proxy, destroy, setVolume, setCurrentOrigin, stop,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      setCurrentOrigin(origin);\n      play(src);\n    }\n  }, [src, origin, play, setCurrentOrigin]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getDispatch().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nexport default function useBackgroundMode(\n  onBlur?: AnyToVoidFunction,\n  onFocus?: AnyToVoidFunction,\n) {\n  useEffect(() => {\n    if (onBlur && !document.hasFocus()) {\n      onBlur();\n    }\n\n    if (onBlur) {\n      window.addEventListener('blur', onBlur);\n    }\n\n    if (onFocus) {\n      window.addEventListener('focus', onFocus);\n    }\n\n    return () => {\n      if (onFocus) {\n        window.removeEventListener('focus', onFocus);\n      }\n\n      if (onBlur) {\n        window.removeEventListener('blur', onBlur);\n      }\n    };\n  }, [onBlur, onFocus]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useOnChange from './useOnChange';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useOnChange(() => {\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useForceUpdate from './useForceUpdate';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/environment';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(dataUri?: string, isDisabled = false, withRaf?: boolean) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    const processBlur = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      if (IS_CANVAS_FILTER_SUPPORTED) {\n        ctx.filter = `blur(${RADIUS}px)`;\n      }\n\n      ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, canvas.width + RADIUS * 4, canvas.height + RADIUS * 4);\n\n      if (!IS_CANVAS_FILTER_SUPPORTED) {\n        fastBlur(ctx, 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      }\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestAnimationFrame(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [canvasRef, dataUri, forceUpdate, isDisabled, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../api/types';\n\nimport {\n  isChatArchived, getCanDeleteChat, isChatPrivate, isChatChannel,\n} from '../modules/helpers';\nimport useLang from './useLang';\n\nexport default ({\n  chat,\n  privateChatUser,\n  handleDelete,\n  handleChatFolderChange,\n  folderId,\n  isPinned,\n  isMuted,\n}: {\n  chat: ApiChat | undefined;\n  privateChatUser: ApiUser | undefined;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n    } = getDispatch();\n\n    const actionAddToFolder = {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    if (isInSearch) {\n      return [actionPin, actionAddToFolder];\n    }\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isChatPrivate(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    return [\n      actionAddToFolder,\n      actionUnreadMark,\n      actionPin,\n      ...(!privateChatUser?.isSelf ? [\n        actionMute,\n        actionArchive,\n      ] : []),\n      actionDelete,\n    ];\n  }, [\n    chat, isPinned, lang, isInSearch, isMuted, handleDelete, handleChatFolderChange, privateChatUser?.isSelf, folderId,\n  ]);\n};\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_SINGLE_COLUMN_LAYOUT, IS_PWA, IS_IOS,\n} from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 200;\n\nfunction checkIsDisabledForMobile() {\n  return IS_SINGLE_COLUMN_LAYOUT\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    document.body.classList.remove('no-selection');\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        stopEvent(e);\n      }, true);\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', function cancelClickOnce(e) {\n          element.removeEventListener('mousedown', cancelClickOnce, true);\n          stopEvent(e);\n        }, true);\n      }\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    let horizontalPostition: 'left' | 'right';\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      x += 3;\n      horizontalPostition = 'left';\n    } else if (x - menuRect.width > 0) {\n      horizontalPostition = 'right';\n      x -= 3;\n    } else {\n      horizontalPostition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPostition);\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n\n    const left = horizontalPostition === 'left'\n      ? Math.min(x - triggerRect.left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX)\n      : Math.max((x - triggerRect.left), menuRect.width + MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    const top = Math.min(\n      rootRect.height - triggerRect.top + triggerRect.height - MENU_POSITION_BOTTOM_MARGIN,\n      y - triggerRect.top,\n    );\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN;\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n};\n","import usePrevious from './usePrevious';\n\nexport default function useCurrentOrPrev<T extends any>(\n  current: T, shouldSkipUndefined = false, shouldForceCurrent = false,\n): T | undefined {\n  const prev = usePrevious(current, shouldSkipUndefined);\n\n  // eslint-disable-next-line no-null/no-null\n  return shouldForceCurrent || (current !== null && current !== undefined) ? current : prev;\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: number,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (container: HTMLElement | null, isDisabled?: boolean) => {\n  useEffect(() => {\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [container, isDisabled]);\n};\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nexport default (\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: number[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n  forceFullPreload = false,\n): [number[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: number;\n  }>();\n\n  const viewportIdsRef = useRef<number[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, listIds[0], LoadMoreDirection.Forwards, listSlice);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  }\n\n  useEffect(() => {\n    if (listIds && !isDisabled && loadMoreBackwards && forceFullPreload) {\n      const viewportIds = viewportIdsRef.current!;\n      loadMoreBackwards({ offsetId: viewportIds[viewportIds.length - 1] });\n    }\n  }, [listIds, isDisabled, loadMoreBackwards, forceFullPreload]);\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice(\n  sourceIds: number[],\n  offsetId = 0,\n  direction: LoadMoreDirection,\n  listSlice: number,\n) {\n  const { length } = sourceIds;\n  const index = sourceIds.indexOf(offsetId);\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { IS_SINGLE_COLUMN_LAYOUT } from '../util/environment';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  useEffect(() => {\n    if (isOpen) {\n      if (!IS_SINGLE_COLUMN_LAYOUT) {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (inputRef.current) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isOpen, onClose]);\n}\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nconst AUTO_UNFREEZE_TIMEOUT = 2000;\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n  noAutoFreeze = false,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n  noAutoFreeze?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const freezeFlagsRef = useRef(0);\n  const autoUnfreezeTimeoutRef = useRef<number>();\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const unfreeze = useCallback(() => {\n    if (!freezeFlagsRef.current) {\n      return;\n    }\n\n    freezeFlagsRef.current--;\n\n    if (!freezeFlagsRef.current && onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  const freeze = useCallback(() => {\n    freezeFlagsRef.current++;\n\n    if (noAutoFreeze) {\n      return;\n    }\n\n    if (autoUnfreezeTimeoutRef.current) {\n      clearTimeout(autoUnfreezeTimeoutRef.current);\n      autoUnfreezeTimeoutRef.current = undefined;\n    }\n\n    // Make sure to unfreeze even if unfreeze callback was not called (which was some hardly-reproducible bug)\n    autoUnfreezeTimeoutRef.current = window.setTimeout(() => {\n      autoUnfreezeTimeoutRef.current = undefined;\n\n      if (!freezeFlagsRef.current) {\n        return;\n      }\n\n      freezeFlagsRef.current = 1;\n      unfreeze();\n    }, AUTO_UNFREEZE_TIMEOUT);\n  }, [noAutoFreeze, unfreeze]);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (freezeFlagsRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T, debugKey?: string) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies, debugKey);\n};\n","import { useEffect } from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | false | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!noLoad && mediaHash && !mediaData) {\n      const startedAt = Date.now();\n\n      mediaLoader.fetch(mediaHash, mediaFormat).then(() => {\n        const spentTime = Date.now() - startedAt;\n        if (!delay || spentTime >= delay) {\n          forceUpdate();\n        } else {\n          setTimeout(forceUpdate, delay - spentTime);\n        }\n      });\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, delay]);\n\n  return mediaData;\n};\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nexport default () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress<T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/environment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(true);\n\n  useEffect(() => {\n    if (isOpen) {\n      isMouseInside.current = true;\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport default function usePrevDuringAnimation(current: any, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useOnChange(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [current]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useState, useCallback, useRef } from '../lib/teact/teact';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<Actions> = (action: ReducerAction<Actions>) => void;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const reducerRef = useRef(reducer);\n  const [state, setState] = useState<State>(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    setState((currentState) => reducerRef.current(currentState, action));\n  }, []);\n\n  return [\n    state,\n    dispatch,\n  ] as [State, Dispatch<Actions>];\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\n\nimport useShowTransition from './useShowTransition';\n\nconst SPEED = {\n  fast: 200,\n  slow: 350,\n};\n\nexport default (mediaData?: any, speed: keyof typeof SPEED = 'fast', noAnimate = false) => {\n  const isMediaLoaded = Boolean(mediaData);\n  const willAnimate = !useRef(isMediaLoaded).current && !noAnimate;\n  const [shouldRenderThumb, setShouldRenderThumb] = useState(!isMediaLoaded);\n\n  const {\n    shouldRender: shouldRenderFullMedia,\n    transitionClassNames,\n  } = useShowTransition(isMediaLoaded, undefined, !willAnimate, speed);\n\n  useEffect(() => {\n    if (shouldRenderFullMedia) {\n      if (willAnimate) {\n        setTimeout(() => {\n          setShouldRenderThumb(false);\n        }, SPEED[speed]);\n      } else {\n        setShouldRenderThumb(false);\n      }\n    }\n  }, [willAnimate, shouldRenderFullMedia, speed]);\n\n  return {\n    shouldRenderThumb,\n    shouldRenderFullMedia,\n    transitionClassNames,\n  };\n};\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import { getDispatch } from '../lib/teact/teactn';\n\nimport { AudioOrigin } from '../types';\nimport { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getMessageKey, MessageKey, parseMessageKey } from '../modules/helpers';\nimport { fastRaf } from './schedulers';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  origin: AudioOrigin;\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<string, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: string | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  origin: AudioOrigin,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    origin,\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const track = tracks.get(trackId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return;\n\n  const nextTrackId = findNextInQueue(queue, trackId, track.origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getDispatch().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (currentTrack) nextTrack.origin = currentTrack.origin; // Preserve origin\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  origin: AudioOrigin,\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, origin, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n    },\n\n    setCurrentOrigin(audioOrigin: AudioOrigin) {\n      tracks.get(trackId)!.origin = audioOrigin;\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset src to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // onPause not called otherwise, but required to sync UI\n        fastRaf(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin);\n    },\n\n    isFirst() {\n      const track = tracks.get(trackId)!;\n      const queue = getTrackQueue(track);\n      if (!queue) return true;\n      return !findNextInQueue(queue, trackId, tracks.get(trackId)!.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  if (track.type === 'audio') {\n    return musicQueue;\n  }\n\n  if (track.type === 'voice') {\n    return voiceQueue;\n  }\n  return undefined;\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter((el) => el !== trackId);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter((el) => el !== trackId);\n  }\n}\n\nfunction findNextInQueue(queue: TrackId[], current: TrackId, origin: AudioOrigin, isReverseOrder?: boolean) {\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(current);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(current).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(current);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './environment';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nconst IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let initialSwipeAxis: TSwipeAxis | undefined;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = '';\n        });\n      }\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    initialSwipeAxis = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll)).forEach((scrollable) => {\n          scrollable.style.overflow = 'hidden';\n        });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= window.innerWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: true });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","import { DEBUG } from '../config';\n\nexport const CLIPBOARD_ITEM_SUPPORTED = navigator.clipboard && window.ClipboardItem;\n\nconst textCopyEl = document.createElement('textarea');\ntextCopyEl.setAttribute('readonly', '');\ntextCopyEl.tabIndex = -1;\ntextCopyEl.className = 'visually-hidden';\n\nexport const copyTextToClipboard = (str: string): void => {\n  textCopyEl.value = str;\n  document.body.appendChild(textCopyEl);\n  const selection = document.getSelection();\n\n  if (selection) {\n    // Store previous selection\n    const rangeToRestore = selection.rangeCount > 0 && selection.getRangeAt(0);\n    textCopyEl.select();\n    document.execCommand('copy');\n    // Restore the original selection\n    if (rangeToRestore) {\n      selection.removeAllRanges();\n      selection.addRange(rangeToRestore);\n    }\n  }\n\n  document.body.removeChild(textCopyEl);\n};\n\nexport const copyImageToClipboard = (imageUrl?: string) => {\n  if (!imageUrl) return;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const imageEl = new Image();\n  imageEl.onload = (e: Event) => {\n    if (ctx && e.currentTarget) {\n      const img = e.currentTarget as HTMLImageElement;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob(copyBlobToClipboard, 'image/png', 1);\n    }\n  };\n\n  imageEl.src = imageUrl;\n};\n\nasync function copyBlobToClipboard(pngBlob: Blob | null) {\n  if (!pngBlob || !CLIPBOARD_ITEM_SUPPORTED) {\n    return;\n  }\n\n  try {\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [pngBlob.type]: pngBlob,\n      }),\n    ]);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","// Sometimes event is fired earlier than animation completes\nconst ANIMATION_END_DELAY = 50;\n\nexport function waitForTransitionEnd(node: Node, handler: NoneToVoidFunction, propertyName?: string) {\n  waitForEndEvent('transitionend', node, handler, propertyName);\n}\n\nexport function waitForAnimationEnd(node: Node, handler: NoneToVoidFunction, animationName?: string) {\n  waitForEndEvent('animationend', node, handler, animationName);\n}\n\nfunction waitForEndEvent(\n  eventType: 'transitionend' | 'animationend',\n  node: Node,\n  handler: NoneToVoidFunction,\n  detailedName?: string,\n) {\n  let isHandled = false;\n\n  node.addEventListener(eventType, function handleAnimationEnd(e: TransitionEvent | AnimationEvent) {\n    if (isHandled || e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (detailedName && (\n      (e instanceof TransitionEvent && e.propertyName === detailedName)\n      || (e instanceof AnimationEvent && e.animationName === detailedName)\n    )) {\n      return;\n    }\n\n    isHandled = true;\n\n    node.removeEventListener(eventType, handleAnimationEnd as EventListener);\n\n    setTimeout(() => {\n      handler();\n    }, ANIMATION_END_DELAY);\n  } as EventListener);\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  ANIMATION_LEVEL_MIN,\n  FAST_SMOOTH_MAX_DISTANCE, FAST_SMOOTH_MAX_DURATION, FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle } from './animation';\n\nlet isAnimating = false;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const scrollFrom = calculateScrollFrom(container, element, maxDistance, forceDirection);\n\n  if (forceDirection === FocusDirection.Static) {\n    scrollWithJs(container, element, scrollFrom, position, margin, 0);\n    return;\n  }\n\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    forceDuration = 0;\n  }\n\n  scrollWithJs(container, element, scrollFrom, position, margin, forceDuration, forceNormalContainerHeight);\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  element: HTMLElement,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { offsetTop: elementTop } = element;\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = elementTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return elementTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, elementTop - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement,\n  element: HTMLElement,\n  scrollFrom: number,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  if (currentScrollTop !== scrollFrom) {\n    container.scrollTop = scrollFrom;\n  }\n\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollFrom;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollFrom + targetContainerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      path = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2) - (scrollFrom + targetContainerHeight / 2)\n        : (elementTop - margin) - scrollFrom;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollFrom + path;\n\n  if (forceDuration === 0) {\n    container.scrollTop = target;\n    return;\n  }\n\n  isAnimating = true;\n\n  const absPath = Math.abs(path);\n  const transition = absPath < FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n  const duration = forceDuration || (\n    FAST_SMOOTH_MIN_DURATION\n    + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n  );\n  const startAt = Date.now();\n  const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n    const currentPath = path * (1 - transition(t));\n\n    container.scrollTop = Math.round(target - currentPath);\n\n    isAnimating = t < 1;\n\n    if (!isAnimating) {\n      onHeavyAnimationStop();\n    }\n\n    return isAnimating;\n  });\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 5);\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../lib/teact/teactn';\n\nimport { ANIMATION_LEVEL_MIN } from '../config';\nimport { IS_IOS } from './environment';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function fastSmoothScrollHorizontal(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (getGlobal().settings.byKey.animationLevel === ANIMATION_LEVEL_MIN) {\n    duration = 0;\n  }\n\n  // Native way seems to be smoother in Chrome\n  if (!IS_IOS) {\n    container.scrollTo({\n      left,\n      ...(duration && { behavior: 'smooth' }),\n    });\n  } else {\n    scrollWithJs(container, left, duration);\n  }\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number, duration: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return;\n  }\n\n  const target = scrollLeft + path;\n\n  if (duration === 0) {\n    container.scrollLeft = target;\n    return;\n  }\n\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_TOUCH_ENV } from './environment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata !== undefined ? metadata : null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    if (mediaSession.setPositionState) mediaSession.setPositionState(undefined);\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || !state.position || !state.duration) return;\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.setPositionState) {\n    mediaSession.setPositionState(state);\n  }\n}\n\nexport function setMicrophoneActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setMicrophoneActive) {\n    // @ts-ignore\n    mediaSession.setMicrophoneActive(active);\n  }\n}\n\nexport function setCameraActive(active: boolean) {\n  const { mediaSession } = window.navigator;\n  // @ts-ignore typings not updated yet\n  if (mediaSession && mediaSession.setCameraActive) {\n    // @ts-ignore\n    mediaSession.setCameraActive(active);\n  }\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../api/types';\nimport { IS_EMOJI_SUPPORTED } from './environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[_]{2}([^*\\n]+)[_]{2}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: number | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = Number((node as HTMLAnchorElement).dataset.userId);\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    audioEl.dataset.patchForSafariInProgress = 'true';\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused && !audioEl.dataset.preventPlayAfterPatch) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import { IS_IOS } from './environment';\n\nexport default (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n","import { DEBUG } from '../config';\n\nexport default (mediaEl: HTMLMediaElement) => {\n  mediaEl.play().catch((err) => {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn(err);\n    }\n  });\n};\n"],"names":["WIDTH","large","medium","small","sticker","size","observeIntersection","lastSyncTime","forceLoadPreview","ref","useRef","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","id","isIntersecting","useIsIntersecting","thumbDataUri","thumbnail","dataUri","previewBlobUrl","useMedia","ApiMediaFormat","transitionClassNames","useTransitionForMedia","mediaData","isMediaLoaded","Boolean","playKey","setPlayKey","useState","String","Math","random","handleClick","useCallback","width","style","className","onClick","src","LIKE_STICKER_ID","undefined","alt","key","animationData","quality","play","noLoop","onLoad","lottiePromise","RLottie","async","ensureLottie","default","setTimeout","memo","playSegment","speed","isLowPriority","animation","setAnimation","container","wasPlaying","isFrozen","playRef","current","playSegmentRef","useEffect","exec","newAnimation","setSpeed","then","fastRaf","destroy","playAnimation","shouldRestart","goToAndPlay","pauseAnimation","pause","freezeAnimation","isPlaying","unfreezeAnimation","unfreezeAnimationOnRaf","useHeavyAnimationCheck","useBackgroundMode","fullClassName","buildClassName","MIN_SPIKES","IS_SINGLE_COLUMN_LAYOUT","MAX_SPIKES","renderSeekline","playProgress","bufferedProgress","seekerRef","theme","message","senderTitle","uploadProgress","origin","date","isSelectable","isSelected","isDownloading","onPlay","onReadMedia","onCancelUpload","onDateClick","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","playStateBeforeSeeking","lang","useLang","isRtl","dispatch","getDispatch","isActivated","setIsActivated","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","chatId","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","handleDownloadClick","cancelMessageMediaDownload","downloadMessageMedia","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","max","min","handleStartSeek","button","handleStopSeek","handleDateClick","getFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","isOwn","isOwnMessage","renderedWaveform","useMemo","waveform","fillColor","fillOwnColor","progressFillColor","progressFillOwnColor","durationFactor","spikesCount","round","decodedWaveform","encoded5bit","bitsCount","length","valuesCount","floor","result","Array","bitsData","i","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","data","spikes","peak","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","interpolateArray","height","progress","fillStyle","progressFillStyle","canvas","document","createElement","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","toDataURL","renderWaveformToDataUri","draggable","renderWaveform","AudioOrigin","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","getSecondLine","Button","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getTranslation","getFileSizeString","formatMediaDateTime","renderAudio","renderVoice","chat","user","text","withOnlineStatus","isSavedMessages","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","imageHash","getChatAvatarHash","blobUrl","shouldRenderFullMedia","decoding","userFullName","getUserFullName","getFirstLetters","getChatTitle","isChatPrivate","isOnline","isUserOnline","getUserColorKey","senderId","IS_TEST","withGlobal","global","chatOrUserId","countryList","phoneCodes","phoneCodeList","selectChat","selectUser","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","setGlobal","actions","pick","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","userId","fullInfo","username","phoneNumber","isSelf","handleNotificationChange","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","link","getChatLink","description","bio","getChatDescription","icon","multiline","narrow","isStatic","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","handleDeleteMessageForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","header","isText","smaller","withDate","datetime","sender","onMediaClick","extension","getDocumentExtension","timestamp","withMediaViewer","mediaType","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","shouldSpinnerRender","getColorFromExtension","sizeString","shouldRenderThumb","getDocumentThumbnailDimensions","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","typingStatus","avatarSize","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","isMin","handleAvatarViewerOpen","hasPhoto","avatarOwnerId","MediaViewerOrigin","isVerified","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","status","idPrefix","mediaBlobUrl","getMessageVideo","isGif","Keys","activeKey","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","onSelectedIdsChange","onFilterChange","onLoadMore","inputRef","shouldMinimize","requestAnimationFrame","focus","handleItemClick","newSelectedIds","includes","splice","indexOf","handleFilterChange","currentTarget","viewportIds","getMore","useInfiniteScroll","map","isMinimized","canClose","clickArg","onChange","placeholder","items","iconElement","titleText","serverTimeOffset","noStatusOrTyping","fullName","getUserStatus","photo","isFirstPhoto","isRepliesChat","getMediaHash","forceAvatar","hash","photoBlobUrl","avatarMediaHash","avatarBlobUrl","useBlurSync","imageSrc","prevImageSrc","usePrevious","Spinner","connectionState","animationLevel","settings","byKey","photos","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","slice","mediaLoader","usePhotosPreload","handleProfilePhotoClick","profilePhotoIndex","selectPreviousMedia","selectNextMedia","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","renderPhoto","isVerifiedIconShown","_","renderPhotoTabs","Transition","type","VerifiedIcon","noAnimate","onUnfaveClick","stickerSelector","shouldPlay","lottieData","isAnimated","markLoaded","unmarkLoaded","canAnimatedPlay","shouldRenderPreview","previewTransitionClassNames","emoji","onMouseDown","preventMessageInputBlurWithBubbling","preventDefault","props","StickerSetModal","useModuleLoader","Bundles","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","messageText","getMessageSummaryText","siteName","handleMessageClick","displayUrl","truncatedDescription","trimText","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS_PX","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidthOwn","cachedMaxWidth","cachedMaxWidthNoAvatar","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","noAvatars","extraPaddingRem","regularMaxWidth","windowWidth","windowSize","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","aspectRatio","availableWidth","availableHeight","getAvailableHeight","mediaWidth","calculateDimensions","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","window","matchMedia","windowHeight","occupiedHeightRem","matches","calculateInlineImageDimensions","getPhotoInlineDimensions","calculateVideoDimensions","getVideoDimensions","getPictogramDimensions","getStickerDimensions","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","mediaHeight","calculatedWidth","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","rawText","getMessageText","entities","renderTextWithEntities","organizeEntity","index","organizedEntityIndexes","offset","organizedIndexes","Set","has","nestedEntities","filter","parsedEntity","isChanged","organizedIndex","add","organizeEntities","organizedEntities","organizedEntity","shouldRenderAsHtml","renderMessagePart","deleteLineBreakAfterPre","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","substring","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","ApiMessageEntityTypes","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","getLinkUrl","processEntityAsHtml","entityText","handleBotCommandClick","handleHashtagClick","href","target","rel","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","sendBotCommand","command","innerText","setLocalTextSearchQuery","query","searchTextMessagesLocal","ChatFolderModal","ChatAnimationTypes","isPinned","isShown","unreadCount","hasUnreadMark","renderContent","unreadMentionsCount","formatIntegerCompact","ShowTransition","isCustom","lastMessage","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","byId","usersById","users","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","draft","selectDraft","canScrollDown","lastMessageOutgoingStatus","selectOutgoingStatus","privateChatUser","folderId","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","useLayoutEffect","Opacity","opacity","classList","Move","transform","remove","ANIMATION_END_DELAY","shouldReplaceHistory","contextActions","useChatContextActions","handleDelete","handleChatFolderChange","ListItem","Avatar","LastMessageMeta","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedEmoji","fluid","pill","FolderTypeToListType","chats","listIds","chatsById","orderedPinnedIds","listType","notifySettings","notifyExceptions","isActive","loadMoreChats","preloadTopChatMessages","preloadArchivedChats","openNextChat","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","newChatArrays","prepareChatList","singleList","pinnedChats","otherChats","newOrderedIds","reduce","acc","prevOrderById","orderDiffById","mapValues","order","Infinity","loadMoreOfType","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","chatArrays","getAnimationType","movesUp","movesDown","orderDiffIds","Object","keys","Number","numberOfUp","numberOfDown","None","useChatAnimationType","handleKeyDown","IS_PWA","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","position","altKey","targetIndexDelta","addEventListener","removeEventListener","InfiniteScroll","preloadBackwards","noFastList","viewportOffset","pinnedOffset","IS_ANDROID","CHAT_HEIGHT_PX","teactFastList","teactOrderKey","getChatOrder","renderChats","Loading","getSenderName","getSenderTitle","isChatGroup","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","from","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","clearTimeout","EmojiTooltip","MAX_INPUT_HEIGHT","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","isAttachmentModalInput","editableInputId","html","forcedPlaceholder","shouldSetFocus","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","updateInputHeight","useLayoutEffectWithPrevDeps","prevHtml","innerHTML","focusInput","closest","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","inputRect","top","willSend","input","clone","currentHeight","newHeight","scrollHeight","transitionDuration","log","abs","toggle","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","contentEditable","textContent","onKeyDown","shiftKey","handleKeyUp","event","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onContextMenu","onTouchCancel","anchorPosition","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","fragmentEl","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","tagName","getSelectedText","getSelectedElement","updateInputStyles","offsetWidth","scrollWidth","scrollLeft","getFormatButtonClassName","some","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","addRange","restoreSelection","handler","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","linkUrlConfirmClassName","autoComplete","inputMode","onScroll","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RegExp","useEmojiTooltip","isAllowed","recentEmojiIds","onUpdateHtml","baseEmojiKeywords","emojiKeywords","isDisabled","markIsOpen","unmarkIsOpen","setById","keywords","setKeywords","byKeyword","setByKeyword","names","setNames","byName","setByName","shouldForceInsertEmoji","setShouldForceInsertEmoji","filteredEmojis","setFilteredEmojis","MEMO_EMPTY_ARRAY","recentEmojis","values","pickTruthy","emojis","uncompressEmoji","ensureEmojiData","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","emojisByName","getEmojiCode","forceSend","endsWith","matched","matchedKeywords","keyword","sort","concat","flatten","matchedNames","unique","insertEmoji","textEmoji","isForce","atIndex","lastIndexOf","messageInput","getElementById","native","isEmojiTooltipOpen","closeEmojiTooltip","searchUserName","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","runThrottled","throttle","cb","RE_USERNAME_SEARCH","useMentionTooltip","canSuggestMembers","groupChatMembers","topInlineBotIds","usersToMention","setUsersToMention","topInlineBots","getFilteredUsers","withInlineBots","inlineBots","inlineBot","chatMembers","usernameFilter","getUsernameFilter","canSuggestInlineBots","insertMention","forceFocus","insertedHtml","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","shouldRenderRef","timeoutRef","forceUpdate","useForceUpdate","useOnChange","options","selected","disabled","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","onEnter","split","textPart","children","buttonClassName","tabIndex","itemSelector","sensitiveArea","noScrollRestoreOnTop","cacheBuster","stateRef","loadMoreBackwards","loadMoreForwards","noScroll","LoadMoreDirection","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","scrollTop","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","offsetParent","buttonRef","destructive","isTouched","markIsTouched","unmarkIsTouched","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","positionX","positionY","menuStyle","useContextMenuPosition","handleMouseDown","role","autoClose","hasCloseButton","noBackdrop","shouldSkipHistoryAnimations","modalRef","onEsc","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","trapFocus","forceClose","useHistoryBack","useEffectWithPrevDeps","prevIsOpen","body","dispatchHeavyAnimationEvent","Portal","containerId","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","appendChild","TeactDOM","removeChild","RADIUSES","s","m","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","setAttribute","hidden","loadingOption","parentContainerClassName","focused","autoFocusSearch","onReset","onFocus","onBlur","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","prevChildren","fromChildrenRef","noAnimation","onCheck","active","badgeCount","isBadgeActive","previousActiveTab","tabRef","tab","indicator","prevTab","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","tabs","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","newLeft","fastSmoothScrollHorizontal","CLEANED_UP","Symbol","renderCount","shouldRestoreHeight","shouldCleanup","cleanupExceptionKey","onStart","onStop","getGlobal","currentKeyRef","rendersRef","prevActiveKey","activeKeyChanged","cleanup","childElements","childNodes","isBackwards","prevActiveIndex","activeIndex","node","HTMLElement","dispatchHeavyAnimationStop","onAnimationEnd","watchedNode","firstChild","waitForAnimationEnd","flexBasis","renders","contents","render","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","useReducer","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","registerMediaSession","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","currentTime","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","isFinite","setPositionState","playbackRate","paused","updateMetadata","setVolume","setCurrentOrigin","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","hasFocus","cache","Map","blurredRef","img","Image","imgToCanvas","fastBlur","blurredAsync","get","onload","blurredDataUri","clear","set","useBlur","noInitiallyBuffered","setIsBuffered","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","buffered","end","readyState","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","useCanvasBlur","withRaf","canvasRef","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","drawImage","RADIUS","isInSearch","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionPin","actionUnreadMark","actionMute","actionArchive","isChatArchived","actionDelete","getCanDeleteChat","stopEvent","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","setContextMenuPosition","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","touches","cancelClickOnce","emulateContextMenuEvent","passive","anchor","extraPaddingX","extraTopPadding","setPositionX","setPositionY","withScroll","setWithScroll","setStyle","setMenuStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","rootRect","horizontalPostition","menuMaxHeight","useCurrentOrPrev","shouldSkipUndefined","shouldForceCurrent","prev","messageId","replyOriginForId","loadMessage","loadMessageThrottled","throttled","deltaX","deltaY","listSlice","forceFullPreload","lastParamsRef","viewportIdsRef","newViewportIds","getViewportSlice","prevListIds","prevIsDisabled","offsetId","areSortedArraysEqual","areSomeLocal","areAllLocal","sourceIds","indexForDirection","to","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","noAutoFreeze","rootCallback","rootCallbackRef","freezeFlagsRef","autoUnfreezeTimeoutRef","onUnfreezeRef","unfreeze","freeze","observer","disconnect","callbacks","observe","targetCallback","entriesAccumulator","observerCallbackSync","entries","entry","callback","scheduler","observerCallback","IntersectionObserver","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","setIsIntersecting","debugKey","prevDeps","mediaHash","noLoad","mediaFormat","startedAt","Date","now","spentTime","store","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","idRef","generateIdFor","useUniqueId","setLoadProgress","startedAtRef","handleProgress","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","setState","currentState","SPEED","fast","slow","willAnimate","setShouldRenderThumb","useVideoCleanup","videoRef","videoEl","load","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","track","queue","getTrackQueue","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","safePlay","stopCurrentAudio","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","dataset","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","audioOrigin","fastSeek","volume","shouldRemoveFromQueue","h","el","removeFromQueue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","diff","localeCompare","captureEvent","initialSwipeAxis","hasMoved","hasSwiped","excludedClosestSelector","onMove","pageX","pageY","withCursor","scrollable","overflow","dragOffsetX","dragOffsetY","shouldPreventScroll","innerWidth","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","CLIPBOARD_ITEM_SUPPORTED","navigator","clipboard","ClipboardItem","textCopyEl","str","rangeToRestore","select","copyImageToClipboard","imageUrl","imageEl","toBlob","copyBlobToClipboard","pngBlob","write","DEBUG","console","waitForTransitionEnd","propertyName","waitForEndEvent","animationName","eventType","detailedName","isHandled","handleAnimationEnd","TransitionEvent","AnimationEvent","cycleRestrict","isAnimating","fastSmoothScroll","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","scrollFrom","elementTop","FocusDirection","calculateScrollFrom","ANIMATION_LEVEL_MIN","scrollWithJs","isAnimatingScroll","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","path","remainingPath","absPath","transition","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","startAt","onHeavyAnimationStop","animateSingle","t","currentPath","containerWidth","animate","scrollTo","behavior","force","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","ENTITY_CLASS_BY_NODE_NAME","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","textIndex","recursionDeepness","addEntity","nodeName","entityType","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","audioEl","patchedForSafari","patchForSafariInProgress","once","mediaEl","catch"],"sourceRoot":""}